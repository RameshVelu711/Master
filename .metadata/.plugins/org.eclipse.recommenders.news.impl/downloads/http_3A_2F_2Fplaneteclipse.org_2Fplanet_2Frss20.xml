<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Jonas, Maximilian and Philip: CDT Cloud Blueprint: Coding</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/06/19/cdt-cloud-blueprint-coding/</guid>
	<link>https://eclipsesource.com/blogs/2023/06/19/cdt-cloud-blueprint-coding/</link>
	<description>&lt;p&gt;Are you looking for a modern, web-based IDE for C/C++ development? Do you want to build a custom, domain-specific C/C++ IDE or tool? Then read on. In this article, we will demonstrate the language...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/06/19/cdt-cloud-blueprint-coding/&quot; rel=&quot;nofollow&quot;&gt; CDT Cloud Blueprint: Coding&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Bonus Slides from QCon NY 2023</title>
	<guid isPermaLink="false">https://medium.com/p/40a3cd019c9</guid>
	<link>https://donraab.medium.com/bonus-slides-from-qcon-ny-2023-40a3cd019c9?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;The slides that didn’t make the 50 minute time limit for our talk.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*d1aSKP0pHoXhZpQl&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@themakerjess?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;The Maker Jess&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;No time? No problem.&lt;/h3&gt;&lt;p&gt;While working on a &lt;a href=&quot;https://qconnewyork.com/presentation/jun2023/performance-and-scale-domain-oriented-objects-vs-tabular-data-structures&quot;&gt;performance talk for QCon New York&lt;/a&gt;, my co-speaker &lt;a href=&quot;https://medium.com/u/cc0e8a7ae567&quot;&gt;Rustam Mehmandarov&lt;/a&gt; and I had more material than we had time for during our presentation. Our solution was simple. Don’t delete the slides. Move them to the Appendix.&lt;/p&gt;&lt;p&gt;The slides are available as AsciiDoc in &lt;a href=&quot;https://github.com/mehmandarov/java-collection-dataframes-perf/tree/main/presentation&quot;&gt;this GitHub repo&lt;/a&gt;. The talk was about memory-efficiency, and the Appendix contains some more examples folks might find interesting.&lt;/p&gt;&lt;p&gt;I also wrote a prequel blog for the talk, which goes into much more detail about the historical context for the talk. The following is the link to the prequel blog titled “Sweating the small stuff in Java.”&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/sweating-the-small-stuff-in-java-dbd695166d13&quot;&gt;Sweating the small stuff in Java&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Writing the prequel blog saved about 15 minutes from the talk.&lt;/p&gt;&lt;h3&gt;Does anyone ever look at the Appendix?&lt;/h3&gt;&lt;p&gt;I know I do occasionally. Here’s the &lt;a href=&quot;https://github.com/mehmandarov/java-collection-dataframes-perf/blob/main/presentation/A0_appendix.adoc&quot;&gt;Appendix&lt;/a&gt; for our talk. You will find some links to resources on the first page, but there is more. The following sections of the blog will show the slides as they would appear in IntelliJ which is what we used along with AsciiDoc in the live presentation.&lt;/p&gt;&lt;h3&gt;Appendix 0 — Resources&lt;/h3&gt;&lt;p&gt;The first page has some useful links to resources we used or referenced in the talk.&lt;/p&gt;&lt;h4&gt;GitHub Repos&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; (creator: &lt;a href=&quot;https://medium.com/u/df39b86e9f04&quot;&gt;Donald Raab&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vmzakharov/dataframe-ec&quot;&gt;DataFrame-EC&lt;/a&gt; (creator: &lt;a href=&quot;https://medium.com/u/7db07b72520d&quot;&gt;Vladimir Zakharov&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-dataformats-text&quot;&gt;Jackson Dataformat CSV&lt;/a&gt; (creator: &lt;a href=&quot;https://medium.com/u/b9b3ec1cfbf7&quot;&gt;@cowtowncoder&lt;/a&gt; )&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-datatypes-collections&quot;&gt;Jackson Datatypes Collections&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Kata Repos&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;Eclipse Collections Kata&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vmzakharov/dataframe-ec-kata&quot;&gt;DataFrame-EC Kata&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Articles&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/wiki/Articles&quot;&gt;Eclipse Collections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vmzakharov/dataframe-ec/blob/master/README.md&quot;&gt;DataFrame-EC&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/tag/jackson&quot;&gt;Jackson on Medium&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We had referenced the Java Object Layout tool earlier in our talk, which is the tool we used for measuring memory footprints. Here’s a link to the &lt;a href=&quot;https://github.com/mehmandarov/java-collection-dataframes-perf/blob/main/presentation/06_measuring_memory_cost.adoc&quot;&gt;slide&lt;/a&gt; with the references to JOL that will help explain how we came up with some of the example slides that follow. The following image shows the slide as it appeared in our talk.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*4uTLdWofBPrB2ZjHhO4DjA.png&quot; /&gt;&lt;figcaption&gt;Measuring Memory Cost in Java using JOL&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Appendix 1 — Boxed vs. Primitive Lists&lt;/h3&gt;&lt;p&gt;We didn’t have time to show every memory cost comparison during the talk that we did, so here’s the one where we compared a java.util.ArrayList of Integer with an IntArrayList. Each List contains integer values 1 through 10.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*B6ikCSMj0veu6Bv01pnAAw.png&quot; /&gt;&lt;figcaption&gt;Memory Footprint — Boxed vs. Primitive Lists&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Note, the extra cost here of 160 bytes for ArrayList is due to the boxing of int values as Integer instances.&lt;/p&gt;&lt;h3&gt;Appendix 2 — Mutable vs. Immuable Lists&lt;/h3&gt;&lt;p&gt;The JDK provides both Mutable and Immutable List implementations now. They both implement the List interface. Most folks won’t realize that the Immutable List implementations are more memory efficient than their Mutable counterparts. This is because they are trimmed-to-size since they don’t change. There are ImmutableCollections$ListN and ImmutableCollections$List12 implementations. The latter should be read as ListOneTwo, not ListTwelve, which is how I read it when I first saw the class. This class contains either one or two elements.&lt;/p&gt;&lt;p&gt;In this example, we created a List with two Integer instances. The first class we used is ArrayList and then we created a copy of the ArrayList into an Immutable List using List.copyOf().&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*9Vhzxw67EIxxI2zqUDm_iw.png&quot; /&gt;&lt;figcaption&gt;Memory Footprint — Mutable vs. Immutable Lists&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The boxing cost is the same between the Mutable and Immutable List implementations in the JDK, but the List12 instance does not have a default sized array of size 10 like the ArrayList.&lt;/p&gt;&lt;h3&gt;Appendix 3 — Boxed vs. Primitive Map of Long → Set of Long&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/seinecle/status/1661467087523422208&quot;&gt;I was asked on Twitter&lt;/a&gt; if there was a more efficient way of creating a Map of Long to Set of Long for 200,000 Long keys using Eclipse Collections. The short answer is yes, as long as you don’t box the Long values.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*eVLUczXKyN9XoCXiKeQpDA.png&quot; /&gt;&lt;figcaption&gt;Boxed vs. Primitive Map of Long → Set of Long&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;24 bytes for each Long object. These can add up quickly depending on your use cases. Don’t box!&lt;/p&gt;&lt;h3&gt;Appendix 4 — Caching vs. Pooling&lt;/h3&gt;&lt;p&gt;We discussed pooling in our talk, and desxcribed some of the pools built into the JDK like String.intern() and the boxed Number pools available through valueOf methods on the integral value types Byte, Short, Integer, and Long. Caching is subtly different in that lookups for an object are usually provided via some index. Pooling provides uniquing and lookup is based on the instance you are looking for.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Ou4nInfskvDaIK87oTEXmw.png&quot; /&gt;&lt;figcaption&gt;Caching vs. Pooling&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Country is implemented as a record, and we keep a cache of Country instances indexed by the country name in a Map.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*4uTp8O4Weq54LfXjF8Vgqw.png&quot; /&gt;&lt;figcaption&gt;Cache of Country instances by country name&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Appendix 5 — Scaling Conferences x50&lt;/h3&gt;&lt;p&gt;In the talk, we covered an example that scaled from 1 million Conference instances to 25 million. A few days before the talk, we tried it again with 50 million and 100 million instances, with the memory tuning done for one of the four row based solutions (Eclipse Collections ImmutableList). The attempt to load 100 million instances failed with OutOfMemoryError. I did not have time to research what the cause of the OutOfMemoryError and see if it was fixable.&lt;/p&gt;&lt;p&gt;Here is the slide with 50 million instances of Conference.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*iPKS1O6grQRSKVsD06zGVw.png&quot; /&gt;&lt;figcaption&gt;Conference Explorer — Memory Cost — Scaling Conferences x50&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The intent here is to show how scaling impacts total memory savings. By manually tuning one of the row based solutions with a savings of 16 bytes per Conference, we were able to save over 800MB of memory. If you target the multipliers in your data, even small memory savings can become significant.&lt;/p&gt;&lt;h3&gt;Thank you and Enjoy!&lt;/h3&gt;&lt;p&gt;Rustam and I had a blast presenting at QCon New York this year, and wanted to thank the conference organizers, our track host &lt;a href=&quot;https://medium.com/u/fd242ea950aa&quot;&gt;Neha Sardana&lt;/a&gt;, and everyone who attended our talk! I hope you enjoy the bonus slides I shared here that didn’t make the cut for the talk.&lt;/p&gt;&lt;p&gt;Thank you for reading, and Happy Father’s Day!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project, which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=40a3cd019c9&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 18 Jun 2023 20:32:13 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.30 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink204</guid>
	<link>https://eclipse.org/webtools/releases/3.30</link>
	<description>&lt;div&gt;
      The Eclipse Web Tools Platform 3.30 has been released!
      &lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
      and updates can be performed using the Eclipse IDE 2023-06
      &lt;a href=&quot;https://download.eclipse.org/releases/2023-06/&quot;&gt;Update Site&lt;/a&gt;
      or through any of the related
      &lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
      .
      Release 3.30 is included in the 2023-06
      &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2023-06/r/eclipse-ide-enterprise-java-and-web-developers&quot;&gt;
        Eclipse IDE for Enterprise Java and Web Developers
      &lt;/a&gt;
      , with selected portions also included in several
      &lt;a href=&quot;https://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
      . Adopters can download
      &lt;a href=&quot;https://download.eclipse.org/webtools/downloads/drops/R3.30.0/R-3.30.0-20230603084739/&quot;&gt;the R3.30 p2 repository&lt;/a&gt;
      directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink204&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 14 Jun 2023 18:59:00 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Eclipse JKube 1.13 is now available!</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/eclipse-jkube-1-13</guid>
	<link>https://blog.marcnuri.com/eclipse-jkube-1-13</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;p&gt;On behalf of the &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;Eclipse JKube&lt;/a&gt; team and everyone who has contributed, I'm happy to announce that Eclipse JKube &lt;code&gt;1.13.1&lt;/code&gt; has been &lt;a href=&quot;https://github.com/eclipse/jkube/releases/tag/v1.13.1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/releases/tag/v1.13.1&quot;&gt;released&lt;/a&gt; and is now available from &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.13.1/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.13.1/&quot;&gt;Maven Central&lt;/a&gt; ğŸ�‰.&lt;/p&gt;&lt;p&gt;Thanks to all of you who have contributed with issue reports, pull requests, feedback, and spreading the word with blogs, videos, comments, and so on. We really appreciate your help, keep it up!&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13/#whats-new&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;whats-new&quot;&gt;&lt;/span&gt;What's new?&lt;/h2&gt;&lt;p&gt;Without further ado, let's have a look at the most significant updates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13#helm-chart-fragments&quot; title=&quot;Link to the Support for Helm Chart.yaml fragments section&quot;&gt;Support for Helm &lt;code&gt;Chart.yaml&lt;/code&gt; fragments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13#kubernetes-security-hardening&quot; title=&quot;Link to the Kubernetes resource Security Hardening profile section&quot;&gt;Kubernetes resource Security Hardening profile&lt;/a&gt;&lt;/li&gt;&lt;li&gt;ğŸ�› Many other bug-fixes and minor improvements&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13/#helm-chart-fragments&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;helm-chart-fragments&quot;&gt;&lt;/span&gt;Support for Helm Chart.yaml fragments&lt;/h3&gt;&lt;p&gt;JKube now allows you to use fragments to configure the resulting generated Helm &lt;code&gt;Chart.yaml&lt;/code&gt; file. Until now, it was only possible to customize this file by providing XML or DSL configuration.&lt;/p&gt;&lt;p&gt;With this new enhancement, you can now place a &lt;code&gt;Chart.helm.yaml&lt;/code&gt; file in the &lt;code&gt;src/main/jkube&lt;/code&gt; directory of your project and JKube will merge the contents of this file with the generated &lt;code&gt;Chart.yaml&lt;/code&gt; file. For example, the following &lt;code&gt;Chart.helm.yaml&lt;/code&gt; file will set the description of the generated Helm chart:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-yaml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;description:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;The&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;description&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;provided&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;through&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;a&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;fragment&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The generated &lt;code&gt;Chart.yaml&lt;/code&gt; file will look like this:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-yaml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;apiVersion:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;v1&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;the-fragment-name&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;description:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;The&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;description&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;provided&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;through&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;a&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;fragment&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13/#kubernetes-security-hardening&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;kubernetes-security-hardening&quot;&gt;&lt;/span&gt;Kubernetes resource Security Hardening profile&lt;/h3&gt;&lt;p&gt;To improve the overall security of the generated Kubernetes resources, JKube now provides a new profile called &lt;code&gt;security-hardening&lt;/code&gt;. The profile enforces a set of rules, the following list contains a few of them:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Disables the auto-mounting of the service account token.&lt;/li&gt;&lt;li&gt;Prevents containers from running in privileged mode.&lt;/li&gt;&lt;li&gt;Ensures containers do not allow privilege escalation.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can find the complete list of rules in the &lt;a href=&quot;https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin/#jkube-security-hardening&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to the Kubernetes-Maven-Plugin documentation&quot;&gt;Kubernetes-Maven-Plugin documentation&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This profile is not enabled by default (opt-in). You can enable it through the plugin configuration:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;security-hardening&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;profile&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or through a Maven/Gradle property. For example, in a Maven project you can do this from the command line:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;mvn k8s:resource -Djkube.profile=security-hardening&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13/#using-this-release&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;using-this-release&quot;&gt;&lt;/span&gt;Using this release&lt;/h2&gt;&lt;p&gt;If your project is based on Maven, you just need to add the Kubernetes Maven plugin or the OpenShift Maven plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.13.1&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your project is based on Gradle, you just need to add the Kubernetes Gradle plugin or the OpenShift Gradle plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.13.1'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13/#how-can-you-help&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;how-can-you-help&quot;&gt;&lt;/span&gt;How can you help?&lt;/h2&gt;&lt;p&gt;If you're interested in helping out and are a first-time contributor, check out the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;&quot;first-timers-only&quot;&lt;/a&gt; tag in the issue repository. We've tagged extremely easy issues so that you can get started contributing to Open Source and the Eclipse organization.&lt;/p&gt;&lt;p&gt;If you are a more experienced developer or have already contributed to JKube, check the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/help%20wanted&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/help%20wanted&quot;&gt;&quot;help wanted&quot;&lt;/a&gt; tag.&lt;/p&gt;&lt;p&gt;We're also excited to read articles and posts mentioning our project and sharing the user experience. Feedback is the only way to improve.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube/issues&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://gitter.im/eclipse/jkube&quot;&gt;Gitter&lt;/a&gt; | &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jkube-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://accounts.eclipse.org/mailing-list/jkube-dev&quot;&gt;Mailing list&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://stackoverflow.com/questions/tagged/jkube&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;span class=&quot;post-image__pusher aligncenter&quot;&gt;&lt;/span&gt;&lt;figure class=&quot;post-image &quot;&gt;&lt;span class=&quot;post-image__scrim&quot;&gt;&lt;/span&gt;&lt;a class=&quot;post-image__link&quot; href=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; title=&quot;Eclipse JKube Logo&quot;&gt;&lt;span class=&quot;post-image__image-container&quot;&gt;&lt;div class=&quot;gatsby-image-wrapper gatsby-image-wrapper-constrained post-image__image aligncenter&quot;&gt;&lt;source type=&quot;image/webp&quot; /&gt;&lt;img alt=&quot;Eclipse JKube Logo&quot; src=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;</description>
	<pubDate>Wed, 14 Jun 2023 12:45:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>Jonas, Maximilian and Philip: The Eclipse Theia Community Release 2023-05</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/06/12/the-eclipse-theia-community-release-2023-05/</guid>
	<link>https://eclipsesource.com/blogs/2023/06/12/the-eclipse-theia-community-release-2023-05/</link>
	<description>&lt;p&gt;We are happy to announce the third Eclipse Theia community release “2023-05”, version 1.37.x!
Don’t know about Eclipse Theia, yet? It is the next-generation platform for building IDEs and tools for...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/06/12/the-eclipse-theia-community-release-2023-05/&quot; rel=&quot;nofollow&quot;&gt; The Eclipse Theia Community Release 2023-05&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: Xtext, monorepo and Maven/Tycho</title>
	<guid isPermaLink="false">https://www.lorenzobettini.it/?p=2684</guid>
	<link>https://www.lorenzobettini.it/2023/06/xtext-monorepo-and-maven-tycho/</link>
	<description>TL; DR: Xtext sources are now in a single Git monorepo (https://github.com/eclipse/xtext), and the build infrastructure is based entirely on Maven/Tycho (Gradle is not used anymore). Background A few years ago, Xtext sources were split into 6 separate GitHub repositories. I did not take part in that decision (I guess at that time, I wasn’t […]</description>
	<pubDate>Fri, 09 Jun 2023 09:38:07 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2023-06M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.28.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.28.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.28.0.AM1 (Developer Milestone 1) build for Eclipse 2023-06M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2023-06/4.28.0.AM1.html&quot;&gt;JBoss Tools 4.28.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.28.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;components-depreciation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#components-depreciation&quot;&gt;&lt;/a&gt;Components Depreciation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Fuse Tooling is now deprecated. &lt;a href=&quot;https://issues.redhat.com/browse/FUSETOOLS-3685&quot;&gt;More information here.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;components-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#components-removal&quot;&gt;&lt;/a&gt;Components Removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As previously announced &lt;a href=&quot;https://issues.redhat.com/browse/JBIDE-28678&quot;&gt;here&lt;/a&gt;, we’ve removed the Central / update tab, SEAM and JSF support from JBossTools.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For central update tab, all the existing central extensions can be installed with the marketplace client, using the entries listed &lt;a href=&quot;https://issues.redhat.com/browse/JBIDE-28853&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;future-releases-cadences&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#future-releases-cadences&quot;&gt;&lt;/a&gt;Future releases cadences&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting from 4.28.0.Final, there will be no more .AM1 releases. The .Final releases can be now scheduled close to the Eclipse releases.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new Hibernate 6.2 runtime provider incorporates Hibernate Core version 6.2.3.Final, Hibernate Ant version 6.2.3.Final and Hibernate Tools version 6.2.3.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.28.0.AM1.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stéphane Bouchet&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 05 Jun 2023 16:14:54 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Sweating the small stuff in Java</title>
	<guid isPermaLink="false">https://medium.com/p/dbd695166d13</guid>
	<link>https://betterprogramming.pub/sweating-the-small-stuff-in-java-dbd695166d13?source=rss-df39b86e9f04------2</link>
	<description>&lt;h4&gt;The story of small FixedSizeCollection types in Eclipse Collections&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*_WWnyZdCQaK4261O&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/es/@edwardhowellphotography?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Edward Howell&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Sometimes, You’re on Your Own&lt;/h3&gt;&lt;p&gt;Every once in a while, we are required as application developers to roll up our sleeves and find ways to squeeze performance or memory savings beyond the built-in capabilities of our language and libraries.&lt;/p&gt;&lt;p&gt;I started programming professionally in DOS/Clipper in the late 1980s when 640K was the memory limit, so I was accustomed to memory-constrained programming. I wasn’t used to anything else until I started programming in Smalltalk, where I had access to hundreds of megabytes of memory.&lt;/p&gt;&lt;p&gt;Towards the end of the 1990s, I worked in Smalltalk, loading decent-sized object graphs into memory and doing things at blazing memory speed. Processes that used to run in minutes in DOS/Clipper could be completed in hundreds of milliseconds. I was working with a 32-bit memory constraint, but I never seemed to get close to the edge of the RAM limit to worry about running out of memory with the domain I was working in.&lt;/p&gt;&lt;p&gt;This was a good progress. Memory was plentiful and fast. Life as a programmer was good. I hadn’t yet encountered a big data application. That would happen soon enough.&lt;/p&gt;&lt;h4&gt;Big memory meet bigger data&lt;/h4&gt;&lt;p&gt;In 2004, I worked on a Java application designed and built using an in-memory caching architecture. I experienced firsthand the saying, “you can’t fit ten pounds of $%*# in a five-pound bag.”. I was still working within the confines of 32-bit software imposed memory limit. The hardware had already progressed beyond this and offered tens of gigs of RAM, but it was inaccessible to me now. A &lt;a href=&quot;https://www.oracle.com/java/technologies/hotspotfaq.html&quot;&gt;64-bit version of Java was available with the JDK 1.4.0 release&lt;/a&gt;, but I didn’t have access yet.&lt;/p&gt;&lt;p&gt;My choices at the time were simple.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Abandon the architecture and start with something more scalable but with a different performance profile.&lt;/li&gt;&lt;li&gt;Wait for a 64-bit JVM.&lt;/li&gt;&lt;li&gt;Figure out how to make ten pounds of $%*# fit in a five-pound bag.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;I went with option number 3. By measuring, executing, and repeating small memory efficiency tricks, I could make the application work. I did things that never would have occurred to me to do in the previous 15 years of my programming career. I felt a bit like Mark Watney (Matt Damon) from the movie &lt;em&gt;The Martian.&lt;/em&gt;&lt;/p&gt;&lt;blockquote&gt;In the face of overwhelming odds, I’m left with only one option. I’m gonna have to science the $%*# out of this.&lt;/blockquote&gt;&lt;blockquote&gt;— Mark Watney, The Martian&lt;/blockquote&gt;&lt;h3&gt;Step 0: Find Tools To Measure Memory&lt;/h3&gt;&lt;p&gt;In 2004, I used jmap -histo &amp;lt;pid&amp;gt; to figure out where I can save memory. Jmap is a command line tool in the JDK for analyzing Java heaps. It still works fine in OpenJDK 20 today. Jmap is a blunt tool that can help you spot glaring issues on the Java heap and measure the overall impact of any changes you make.&lt;/p&gt;&lt;p&gt;Today, I use &lt;a href=&quot;https://github.com/openjdk/jol&quot;&gt;Java Object Layout&lt;/a&gt; (JOL) from the OpenJDK tools for measuring the memory cost of specific objects. JOL gives a more precise and targeted set of information than jmap. There is a &lt;a href=&quot;https://plugins.jetbrains.com/plugin/10953-jol-java-object-layout&quot;&gt;JOL plugin for IntelliJ&lt;/a&gt; available as well. I have not used the IntelliJ plugin, but some folks I know have said positive things about it.&lt;/p&gt;&lt;p&gt;Once you have JOL included as a Maven dependency, you can use GraphLayout to look at the memory cost and layout of particular instances of objects programmatically. You will see some code examples below that use GraphLayout.&lt;/p&gt;&lt;h3&gt;Step 1: Understand Your Data&lt;/h3&gt;&lt;p&gt;I had a large static object graph loaded one time up front and cached, and then multiple calculated object graphs created from that data graph and also cached that was explorable in either direction. Every node in the graph had a List of children and a List of parents. The requirement I needed to satisfy was to store two calculated graphs in memory to be explored on demand by the users.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Total memory required for both data and calculations— ~4-6 GB&lt;/li&gt;&lt;li&gt;Total memory needed for application to run — ~7–8 GB&lt;/li&gt;&lt;li&gt;Available RAM on Solaris with 32-bit JVM- ~4 GB&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I started looking at the heap output using jmap -histo &amp;lt;pid&amp;gt; . &lt;a href=&quot;https://docs.oracle.com/en/java/javase/17/docs/specs/man/jmap.html&quot;&gt;Jmap&lt;/a&gt; is a simple but effective tool for looking at and starting to understand what is occupying a Java heap. I used jmap for quite a few years, helping folks find waste and trim the fat out of their Java heaps. I once saw a Java heap with two million Boolean objects in it. Yeah, that kind of stuff can happen when you’re not looking. I convinced the team with the two million Boolean objects in their heap that they didn’t need that kind of fault tolerance for boolean and would survive just as well with one instance of each of true and false.&lt;/p&gt;&lt;p&gt;I digress.&lt;/p&gt;&lt;p&gt;In the application I was working on, I saw an extremely large number of List, Set and Map instances in the heap output from jmap, along with the corresponding array instances that occupied the data structures.&lt;/p&gt;&lt;p&gt;What I didn’t know right away was the size of the List, Set and Map instances. So, I dug around in the code. I saw ArrayList being created in multiple places using a default constructor. Anyone who has programmed with Java before JDK 7_u40 might remember when ArrayList eagerly initialized an empty array of size 10.&lt;/p&gt;&lt;p&gt;When I was working on this application, we were using JDK 4. This was seven years before Java 7 was released. I didn’t know then, but I would later help validate the importance of the change to ArrayList that was introduced to lazy initialize the backing array of size 10. The benefit of this for all Java developers on the planet for the rest of the time is that empty ArrayList instances stay empty. This has a significant and lasting impact on the total memory savings of Java applications globally forever. Win!&lt;/p&gt;&lt;p&gt;When I realized all of the List instances would be backed by default sized arrays, my first thought was to initialize them all using new ArrayList(0). This did have a noticeable benefit right away. Unfortunately, this wasn’t enough savings, and I would go on to discover that most of the List, Set, and Map instances in a heap were of sizes zero through six. I kept investigating where I could save memory.&lt;/p&gt;&lt;h3&gt;Step 2: Understanding Array Instances&lt;/h3&gt;&lt;p&gt;Arrays are used in a lot of places in Java. Lists have them. Maps have them. Strings have them.&lt;/p&gt;&lt;p&gt;Every time you say new with an empty array, you get back a new empty array. Each new empty array is effectively immutable and equal to every other empty array of the same type because it has no elements and is the same size. Empty array sharing is an important optimization I discovered later.&lt;/p&gt;&lt;p&gt;What I couldn’t easily tell is how many of the array instances on the heap were empty. I had to guess. What I started with was adding an EmptyList class that I could use anywhere I wanted an empty List. This would result in reasonable savings for empty lists in the heap. In Java 5, Collections.emptyList() would be added, which returns a type-safe immutable instance. Unfortunately, I didn’t know this and didn’t have time to wait for Java 5.&lt;/p&gt;&lt;h3&gt;Step 3: Optimize for Empty Lists&lt;/h3&gt;&lt;p&gt;I created an EmptyList that was a singleton and initialized all Lists to this singleton instance. Today, in Eclipse Collections, there is ImmutableEmptyList and EmptyList . EmptyList was created first and implements an interface called FixedSizeList, which extends MutableList and java.util.List. ImmutableEmptyList extends both ImmutableList and java.util.List.&lt;/p&gt;&lt;p&gt;Using EmptyList would necessarily complicate the application code because there is no way to add to a fixed-size empty list. Wherever I used EmptyList, I had to add code that tested first whether it was an empty List (i.e., size == 0) and, if so, created a new List if I needed to add to it. Then I had to set that new List instance into the variable that pointed to the EmptyList. This increased the cost of testing and implementing all of the methods where List instances were created and grown to make sure bugs weren’t introduced. The cost was worth the benefit.&lt;/p&gt;&lt;h3&gt;Step 4: Optimize for Fixed Size Lists w/ Sizes 1–6&lt;/h3&gt;&lt;p&gt;Creating ArrayList with an initial size of zero, provided some memory savings benefit, but I was still seeing millions of instances of object arrays due to what I guessed were List instances in size one to ten range. I created SingletonList and tried it out and saw some great benefits.&lt;/p&gt;&lt;p&gt;SingletonList holds onto a single Object reference and has no backing array. Then I introduced DoubletonList and saw some more benefits. Then came TripletonList, QuadrupletonList, QuintupletonList and SextupletonList. This is as far as I went in 2004. The savings I saw with all of these changes were dramatic in the dynamic calculation object graph. This was because the design of the object graph was bi-directional, and every node in the graph knew its parents and children. Most nodes in the graph had one parent and most often had one to three children.&lt;/p&gt;&lt;p&gt;The following chart shows the potential savings even today comparing a default sized ArrayList (new ArrayList()), a zero initial-sized ArrayList (new ArrayList(0)), and FixedSizeList instances created using Lists.fixedSize.of() from Eclipse Collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*uLrijxhCOSfZXAnNoZL1aQ.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;I wrote the following test using OpenJDK 20 with JOL version 0.17 to print out all the memory sizes in the chart. Here’s the code I used:&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void fixedSizeListsToSizeSix()&lt;br /&gt;{&lt;br /&gt;    ArrayList arrayList = new ArrayList();&lt;br /&gt;    System.out.println(&quot;ArrayList Empty: &quot; + &lt;br /&gt;      GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 1: &quot; + &lt;br /&gt;      GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 2: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 3: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 4: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 5: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList 6: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    System.out.println(&quot;ArrayList 0: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 1: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 2: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 3: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 4: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 5: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;    arrayList = new ArrayList(0);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    arrayList.add(null);&lt;br /&gt;    System.out.println(&quot;ArrayList0 6: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(arrayList).totalSize());&lt;br /&gt;&lt;br /&gt;    List list = Lists.fixedSize.empty();&lt;br /&gt;    System.out.println(&quot;FixedSizeList Empty: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of((Object)null);&lt;br /&gt;    System.out.println(&quot;FixedSizeList 1: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of(null, null);;&lt;br /&gt;    System.out.println(&quot;FixedSizeList 2: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of(null, null, null);&lt;br /&gt;    System.out.println(&quot;FixedSizeList 3: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of(null, null, null, null);&lt;br /&gt;    System.out.println(&quot;FixedSizeList 4: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of(null, null, null, null, null);&lt;br /&gt;    System.out.println(&quot;FixedSizeList 5: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;    list = Lists.fixedSize.of(null, null, null, null, null, null);&lt;br /&gt;    System.out.println(&quot;FixedSizeList 6: &quot; + &lt;br /&gt;        GraphLayout.parseInstance(list).totalSize());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;In these examples, I used null as the elements, so the memory cost of the lists was the only thing on display. Savings add up quickly here when you have millions of EmptyList, SingletonList, DoubletonList, and TripletonList instances. There were smaller numbers of QuadrupletonList, QuintupletonList and SextupletonList, but enough that the memory savings mattered.&lt;/p&gt;&lt;h3&gt;Step 5: Optimize for Fixed Size Sets w/ Sizes 0–4&lt;/h3&gt;&lt;p&gt;Nothing will prepare you when you discover how terrible the memory footprint of the java.util.HashSet class is. HashSet is a suboptimal class that can grow quietly in your heap if you’re not careful to use it sparingly and dispose of instances when you are done using them. HashSet performs very well for most use cases where a Set is required, but the cost is unnecessarily high. This cost is the product of using delegation to a HashMap inside of HashSet.&lt;/p&gt;&lt;p&gt;The following chart shows the memory savings today comparing a default sized HashSet (new HashSet()), a zero initial-sized HashSet (new HashSet (0)), and FixedSizeSet instances created using Sets.fixedSize.of() from Eclipse Collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*_UrviXa0nNaOwOEL7qh4BA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;I wrote the following test using OpenJDK 20 with JOL version 0.17 to print out all the memory sizes in the chart. Here’s the code I used:&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void fixedSizeSetsToSizeFour()&lt;br /&gt;{&lt;br /&gt;    HashSet hashSet = new HashSet();&lt;br /&gt;    System.out.println(&quot;HashSet Empty: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet 1: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet 2: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet 3: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet 4: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;&lt;br /&gt;    hashSet = new HashSet(0);&lt;br /&gt;    System.out.println(&quot;HashSet 0: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet0 1: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet = new HashSet(0);&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet0 2: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet = new HashSet(0);&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet0 3: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;    hashSet = new HashSet(0);&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    hashSet.add(new Object());&lt;br /&gt;    System.out.println(&quot;HashSet0 4: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(hashSet).totalSize());&lt;br /&gt;&lt;br /&gt;    Set set = Sets.fixedSize.empty();&lt;br /&gt;    System.out.println(&quot;FixedSizeSet Empty: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(set).totalSize());&lt;br /&gt;    set = Sets.fixedSize.of(new Object());&lt;br /&gt;    System.out.println(&quot;FixedSizeSet 1: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(set).totalSize());&lt;br /&gt;    set = Sets.fixedSize.of(new Object(), new Object());;&lt;br /&gt;    System.out.println(&quot;FixedSizeSet 2: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(set).totalSize());&lt;br /&gt;    set = Sets.fixedSize.of(new Object(), new Object(), new Object());&lt;br /&gt;    System.out.println(&quot;FixedSizeSet 3: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(set).totalSize());&lt;br /&gt;    set = Sets.fixedSize.of(new Object(), new Object(), new Object(), new Object());&lt;br /&gt;    System.out.println(&quot;FixedSizeSet 4: &quot; + &lt;br /&gt;            GraphLayout.parseInstance(set).totalSize());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;With sets, I needed to add data to the sets that would have unique a hashCode and equals combination. If I used null, there only would have been one element in each Set. So there is an extra 16 bytes for each element in the set. Just multiply 16 times the Set size to determine the extra overhead for the elements.&lt;/p&gt;&lt;h3&gt;Step 6 and Beyond&lt;/h3&gt;&lt;p&gt;There were other important lessons over the years I learned about how to save memory. Object Pooling is usually the most beneficial for loading data from external storage (e.g., database) into long-lived objects in memory. Immutable objects like String and LocalDate are good candidates for pooling. You have to understand the makeup of your data and have a decent number of duplicate strings and dates to see the benefit of pooling. I will not go more into object pooling in this article as it is a topic worthy of its own post.&lt;/p&gt;&lt;p&gt;Finally, if you know the lower and upper ranges of your numeric data and that they will be known to stay within those ranges forever, you can also save memory by using smaller integral or float types to store data in long-lived objects in memory. Using byte, short, and int instead of long The alignment and padding in the memory layout can help you fit more into an object. Be careful to widen your type when doing math (e.g., summing or counting) because you may otherwise encounter silent overflow errors.&lt;/p&gt;&lt;p&gt;The JDK is constantly improving in the memory-efficiency and performance, so new help is constantly on the way. The future of Java is looking good.&lt;/p&gt;&lt;h3&gt;No One Has Ever Been Stranded on Mars&lt;/h3&gt;&lt;p&gt;Mark Watney was a character in a movie. The story made a great film with memorable quotes, and that is all. No human that we know has ever been to Mars.&lt;/p&gt;&lt;p&gt;You may have never encountered or even heard of an application that creates millions of small List, Set, and Map instances and holds onto them for a long time in memory. That is maybe until now. I had never seen or heard of an application like this until I started working on one in 2004.&lt;/p&gt;&lt;p&gt;There is one potential gotcha with this small collection memory savings strategy. You might wind up trading off memory for performance. I was faced with the problem of getting an application working. I wasn’t concerned with how fast the calls to methods on the collection classes were or whether there would be &lt;a href=&quot;https://shipilev.net/jvm/anatomy-quarks/16-megamorphic-virtual-calls/&quot;&gt;megamorphic virtual calls&lt;/a&gt; in hot code paths to cause significant slowdowns.&lt;/p&gt;&lt;p&gt;When the application was finally running, it was so fast in memory we didn’t notice any bottlenecks caused by megamorphic virtual calls. If performance and throughput are your biggest concern, I recommend using &lt;a href=&quot;https://github.com/openjdk/jmh&quot;&gt;JMH&lt;/a&gt; or other performance profilers to measure specific hotspots for tuning. I recommend only tuning for performance if you see a specific performance issue. You’ll be in the best position to determine whether memory or performance is the biggest concern for your application.&lt;/p&gt;&lt;p&gt;I hope you never face this kind of memory problem in the applications you work on today. If you encounter this kind of situation in the future (hey, we might see real folks go to Mars one day), you can leverage the knowledge you have gained here to help you address any memory issues you have. All of the small List, Set, and Map implementations exist in Eclipse Collections today. The &lt;a href=&quot;https://stackoverflow.com/questions/49403644/java-list-of-static-method/49528083#49528083&quot;&gt;JDK also has a small immutable List and Set implementations&lt;/a&gt; (List12, ListN, Set12, SetN) that optimize for both throughput and memory. I wish I had access to these classes in the JDK in 2004.&lt;/p&gt;&lt;p&gt;The following chart compares the memory cost of the JDK and Eclipse Collections ImmutableList implementations up to size 11.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*VBD5e9ToT2SBk3cMDxQDQA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;If you’re stranded on Mars with an application that won’t work and memory savings for small List, Set and Map instances are exactly what you need to help you, then Eclipse Collections might be your best option. When it comes to raw throughput performance with some great memory savings for very small collections, the JDK (after Java 11) may be the best option today. The JDK now offers a memory-efficiency option that it didn’t have in 2004 when I was stuck working on my application on Mars. Progress is a good thing. Your mileage may vary.&lt;/p&gt;&lt;h3&gt;Tracer Bullets in your Java Heap&lt;/h3&gt;&lt;p&gt;There is an additional subtle benefit to having named versions of all of the small List, Set, and Map instances in your Java heap. The named classes show up in both jmap and JOL output. When used, these classes tell you more about the distribution of sizes of your collections in memory. Seeing that you have a large number of ArrayList instances tells you nothing about the size of them.&lt;/p&gt;&lt;p&gt;If we output the following code using JOL, you will see the size distribution of your Lists when using Eclipse Collections ImmutableList implementations. The ImmutableList types are similar to their FixedSizeList counterparts but are hand-optimized to size ten instead of six.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void ecListOfToSizeEleven()&lt;br /&gt;{&lt;br /&gt;    ImmutableList&amp;lt;String&amp;gt;[] array = new ImmutableList[]{&lt;br /&gt;            Lists.immutable.of(),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            Lists.immutable.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;br /&gt;    };&lt;br /&gt;    Assertions.assertEquals(496L, &lt;br /&gt;            GraphLayout.parseInstance(array).totalSize());&lt;br /&gt;    System.out.println(GraphLayout.parseInstance(array).toFootprint());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The following is the output from JOL after calling GraphLayout.parseInstance(array).toFootprint().&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I shortened the package names manually to remove the scroll bar.&lt;/p&gt;&lt;pre&gt;COUNT   AVG   SUM   DESCRIPTION&lt;br /&gt;    1    16    16   [B&lt;br /&gt;    1    64    64   [Ljava.lang.String;&lt;br /&gt;    1    24    24   java.lang.String&lt;br /&gt;    1    16    16   org.ecl.co.impl.list.imm.ImmutableArrayList&lt;br /&gt;    1    56    56   org.ecl.co.impl.list.imm.ImmutableDecapletonList&lt;br /&gt;    1    24    24   org.ecl.co.impl.list.imm.ImmutableDoubletonList&lt;br /&gt;    1    16    16   org.ecl.co.impl.list.imm.ImmutableEmptyList&lt;br /&gt;    1    48    48   org.ecl.co.impl.list.imm.ImmutableNonupletonList&lt;br /&gt;    1    48    48   org.ecl.co.impl.list.imm.ImmutableOctupletonList&lt;br /&gt;    1    32    32   org.ecl.co.impl.list.imm.ImmutableQuadrupletonList&lt;br /&gt;    1    32    32   org.ecl.co.impl.list.imm.ImmutableQuintupletonList&lt;br /&gt;    1    40    40   org.ecl.co.impl.list.imm.ImmutableSeptupletonList&lt;br /&gt;    1    40    40   org.ecl.co.impl.list.imm.ImmutableSextupletonList&lt;br /&gt;    1    16    16   org.ecl.co.impl.list.imm.ImmutableSingletonList&lt;br /&gt;    1    24    24   org.ecl.co.impl.list.imm.ImmutableTripletonList&lt;br /&gt;   15         496   (total)&lt;/pre&gt;&lt;p&gt;Consider the following code and JOL output for the small immutable collections in the JDK to show the difference where class names do not give you as much information.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void jdkListOfToSizeEleven()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;String&amp;gt;[] array = new List[]{&lt;br /&gt;            List.of(),&lt;br /&gt;            List.of(&quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;),&lt;br /&gt;            List.of(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)&lt;br /&gt;    };&lt;br /&gt;    Assertions.assertEquals(776L, &lt;br /&gt;            GraphLayout.parseInstance(array).totalSize());&lt;br /&gt;    System.out.println(GraphLayout.parseInstance(array).toFootprint());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;JOL Output:&lt;/p&gt;&lt;pre&gt;COUNT   AVG   SUM   DESCRIPTION&lt;br /&gt;    1    16    16   [B&lt;br /&gt;   10    43   432   [Ljava.lang.Object;&lt;br /&gt;    1    16    16   java.lang.Object&lt;br /&gt;    1    24    24   java.lang.String&lt;br /&gt;    2    24    48   java.util.ImmutableCollections$List12&lt;br /&gt;   10    24   240   java.util.ImmutableCollections$ListN&lt;br /&gt;   25         776   (total)&lt;/pre&gt;&lt;p&gt;You’ll notice that there are two instances of List12 and ten instances of ListN. If you know that List12 should actually be read as ListOneTwo and not ListTwelve, you will at least know that all instances have a size of one or two.&lt;/p&gt;&lt;p&gt;In 2004, once we had made the changes to our code using the small FixedSizeCollection implementations, we got immediate feedback on the changes to the size distributions of our small collections any time we looked at jmap -histo &amp;lt;pid&amp;gt;. Changes in code or data could have caused changes in these sizes.&lt;/p&gt;&lt;h3&gt;Best of Luck on Your Journey&lt;/h3&gt;&lt;p&gt;After almost 20 years, I am telling you this story because you can now buy a MacBook Pro with as many cores (12) and as much memory (96gig) as I had access to between 2004–2010 on big Solaris servers. I don’t know if this will result in more applications with large heaps and lots of collections being built now, but I do have to believe it will not result in less.&lt;/p&gt;&lt;p&gt;If you’re heading out for your own Martian application experience soon, remember that there may be solutions available for memory waste issues you might encounter. The JDK is continually improving and finding ways to save memory that were out of reach for me two decades ago. The Core JDK team has prioritized balancing throughput with memory savings, which is great. Eclipse Collections focused primarily on memory savings in the ImmutableCollection implementations, based on my challenging experience in 2004.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://openjdk.org/projects/lilliput/&quot;&gt;Project Lilliput&lt;/a&gt; and &lt;a href=&quot;https://openjdk.org/projects/valhalla/&quot;&gt;Project Valhalla&lt;/a&gt; will be two of the most important changes to the JDK regarding memory savings and performance. Both projects are complementary. If you’ve never heard of these OpenJDK projects, you should check out the links I provided to them above. We are fortunate to have such an amazing language and library as the JDK that continues to evolve after 28 years.&lt;/p&gt;&lt;p&gt;There are two articles from Aleksey Shipilёv I would recommend reading whether or not you find yourself in a dire situation involving memory or performance:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://shipilev.net/jvm/anatomy-quarks/24-object-alignment/&quot;&gt;JVM Anatomy Quark #24: Object Alignment&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://shipilev.net/blog/2015/black-magic-method-dispatch/&quot;&gt;The Black Magic of (Java) Method Dispatch&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Thank you for reading this story. I hope you find the lessons and information in this story useful in your travels.&lt;/p&gt;&lt;p&gt;If you’re interested in getting started and finding out more about &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, I can recommend the following blog series.&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project, which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=dbd695166d13&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/sweating-the-small-stuff-in-java-dbd695166d13&quot;&gt;Sweating the small stuff in Java&lt;/a&gt; was originally published in &lt;a href=&quot;https://betterprogramming.pub&quot;&gt;Better Programming&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Mon, 05 Jun 2023 15:51:43 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.38 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/06/05/eclipse-theia-1-38-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/06/05/eclipse-theia-1-38-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.38 release! The release contains 48 merged pull requests and we welcome six new contributors. In this article we will highlight some selected improvements...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/06/05/eclipse-theia-1-38-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.38 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Blog-is-fear</title>
	<guid isPermaLink="false">https://medium.com/p/3f4e3fd4bb73</guid>
	<link>https://donraab.medium.com/blog-is-fear-3f4e3fd4bb73?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;The blogosphere is intimidating. Build confidence through practice.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*eAfvQMRRPVvHyoPf&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@oddityandgrace?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;hannah grace&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;strong&gt;Note&lt;/strong&gt;: I originally shared this on LinkedIn as an adhoc New Years 2023 post. I thought it was an important enough message to share in its own blog.&lt;/blockquote&gt;&lt;h3&gt;You don’t have the time not to write&lt;/h3&gt;&lt;p&gt;Many folks have told me over the years they would like to blog but don’t have the time, or don’t know what to blog about. My usual response… Just do it.&lt;/p&gt;&lt;p&gt;No one has the time. Folks who seem to have the time are merely prioritizing their time differently.&lt;/p&gt;&lt;p&gt;Not knowing what to blog about is a confidence problem. Everyone has something to write about. No one wants to write something that isn’t high quality or isn’t well liked. There is a natural fear of public embarrassment. The first blog you write will not be great and probably will not be well liked. It will also probably not get many reads. Set your expectations low and get ready to practice. Find a friend or two to read your first blog before posting if you’re worried. If you’re worried about your employer, then read your social media policy and/or talk to your manager first. The confidence problem is feeding the perceived time problem because folks think that it will take a long time to find a topic, or a long time to write about something that is great, or to get approval if necessary from their employer. This is a cycle of despair. Break the cycle by doing something.&lt;/p&gt;&lt;p&gt;Compared to most developers, I write a lot. I published 34 blogs on Medium in 2022. I have always written a lot, just not publicly until five years ago. I wrote a lot of poetry in high school. Some of it was decent enough to get published. I submitted a lot of the poetry I wrote to my high school literary magazine. I was the top contributor for three years in a row. I was definitely not the best writer. I just submitted the most writing. The practice, and candid feedback I received helped me to become a better writer. I’ve published some of my high school poetry on my Medium blog. I’m terrified sharing poetry from my teenage years. That is why I share it. It’s good to do things that terrify you occasionally. I care about what people think. I also don’t care about what people think.&lt;/p&gt;&lt;p&gt;To say farewell to 2022, I wrote a final blog on December 30th. I did not really have the time to write this blog. I prioritized my time on the 31st to spend with family to celebrate New Years. By the time I was ready to publish, it was already 2am on the 31st. I published and went to sleep.&lt;/p&gt;&lt;p&gt;I wanted to write this blog to show how unstructured blogging can be. A blog doesn’t have to be Shakespearean or Dickensian to be good enough to share. The blog I wrote is about nothing in particular, but the topics have some common meandering relationships and a final destination… the end of a stream of consciousness. It is a babbling brook, and potpourri. Each topic could have been a blog on its own.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/i-forgot-how-to-write-this-blog-33f9e86cc2ed&quot;&gt;I forgot how to write this blog&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I forgot how to write this blog, but I wrote it anyway. Enjoy, and Happy New Year! If you made a resolution to blog in 2023, I hope I get to read some of your writing. Best of luck!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=3f4e3fd4bb73&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 24 May 2023 01:33:57 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: CDT Cloud Blueprint: Dynamic Toolbar</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/05/24/cdt-cloud-blueprint-dynamic-toolbar/</guid>
	<link>https://eclipsesource.com/blogs/2023/05/24/cdt-cloud-blueprint-dynamic-toolbar/</link>
	<description>&lt;p&gt;Are you looking for a modern, web-based IDE for C/C++ development? Do you want to build a custom, domain specific C/C++ IDE or tool? Then read on. In this article we´ll show how to use the dynamic...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/05/24/cdt-cloud-blueprint-dynamic-toolbar/&quot; rel=&quot;nofollow&quot;&gt; CDT Cloud Blueprint: Dynamic Toolbar&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Sparkplug Specification Honored with IoT Business Impact Award</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-sparkplug-specification-honored-iot-business-impact-award</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-sparkplug-specification-honored-iot-business-impact-award</link>
	<description>&lt;p&gt;&lt;strong&gt;BRUSSELS, Belgium – May 23, 2023 – &lt;/strong&gt;The Eclipse Foundation, one of the world’s largest open source software foundations, announced today that the &lt;a href=&quot;https://sparkplug.eclipse.org/&quot;&gt;Eclipse Sparkplug specification&lt;/a&gt; has received a 2023 IoT Business Impact Award from &lt;a href=&quot;https://www.iotevolutionworld.com/Default.aspx&quot;&gt;IoT Evolution&lt;/a&gt; magazine, the leading publication covering IoT technologies.&lt;/p&gt;

&lt;p&gt;The award honors organizations for their IoT deployment case studies. Eclipse Sparkplug was recognized for their successful partnership bringing IoT functionality to NGL Energy Partners.&lt;/p&gt;

&lt;p&gt;“Sparkplug is well on its way to becoming the de facto standard for making the IIoT ‘plug’n’play,’” said Frederic Desbiens, Eclipse Foundation program manager and evangelist for IoT and Edge Computing. “This award highlights the significant business benefits of implementing this specification in conjunction with MQTT.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About Sparkplug &amp;amp; MQTT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sparkplug provides an open and freely available specification for how Edge of Network (EoN) gateways or native MQTT-enabled end devices and MQTT Applications communicate bi-directionally within an MQTT Infrastructure. It is recognized that MQTT is used across a wide spectrum of application solution use cases and an almost indefinable variation of network topologies. &lt;/p&gt;

&lt;p&gt;By design, the MQTT specification does not dictate a Topic Namespace or any payload encoding. However, as the IIoT and other architectures leveraging the publisher/subscriber model are adopted by device OEMs in the industrial sector, having different Topic Namespace and payload encoding can inhibit interoperability for the end customer. To that end, the Sparkplug specification addresses the following components within an MQTT infrastructure: &lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Sparkplug defines an OT-centric Topic Namespace &lt;/li&gt;
	&lt;li&gt;Sparkplug defines an OT-centric Payload definition optimized for industrial process variables &lt;/li&gt;
	&lt;li&gt;Sparkplug defines MQTT Session State management required by real-time OT SCADA systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; “It is my pleasure to recognize Sparkplug, an innovative solution that earned the Eclipse Foundation the 2023 Business Impact Award,” said Rich Tehrani, CEO, TMC. “I look forward to seeing more successful deployments of best-in-class solutions from the Eclipse Foundation in the future.”&lt;/p&gt;

&lt;p&gt;The Sparkplug standard has recently been submitted for acceptance as an&lt;a href=&quot;https://www.globenewswire.com/en/news-release/2022/12/08/2570068/0/en/The-Eclipse-Foundation-Announces-The-Release-of-Sparkplug-3-0-and-Unveils-it-is-Being-Fast-Tracked-to-Become-an-International-Standard.html&quot;&gt; ISO/IEC JTC 1 international standard&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organisations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About Crossfire Media&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Crossfire Media, co-publishers of IoT Evolution, is an integrated marketing company with a core focus on future trends in technology. We service communities of interest with conferences, tradeshows, webinars and newsletters. Crossfire Media has a partnership with Technology Marketing Corporation (TMC) to produce events and websites related to disruptive technologies. Crossfire Media is a division of Crossfire Consulting, a full service Information Technology company based in New York. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About TMC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through education, industry news, live events and social influence, global buyers rely on TMC’s content-driven marketplaces to make purchase decisions and navigate markets. As a result, leading technology vendors turn to TMC for unparalleled branding, thought leadership and lead generation opportunities. Our in-person and online events deliver unmatched visibility and sales prospects for all percipients. Through our custom lead generation programs, we provide clients with an ongoing stream of leads that turn into sales opportunities and build databases. Additionally, we bolster brand reputations with the millions of impressions from display advertising on our news sites and newsletters. Making TMC a 360 degree marketing solution, we offer comprehensive event and road show management services and custom content creation with expertly ghost-crafted blogs, press releases, articles and marketing collateral to help with SEO, branding, and overall marketing efforts. For more information about TMC and to learn how we can help you reach your marketing goals, please visit www.tmcnet.com and follow us on Facebook, LinkedIn and Twitter, @tmcnet.&lt;/p&gt;

&lt;p&gt;For more information about TMC and to learn how we can help you reach your marketing goals, please visit www.tmcnet.com.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;514 Media Ltd for the Eclipse Foundation, AISBL (France, Italy, Spain)&lt;/p&gt;

&lt;p&gt;Benoit Simoneau&lt;/p&gt;

&lt;p&gt;benoit@514-media.com&lt;/p&gt;

&lt;p&gt;M: +44 (0) 7891 920 370&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TMC Contact:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Michelle Connolly&lt;/p&gt;

&lt;p&gt;Senior Marketing Manager&lt;/p&gt;

&lt;p&gt;203-852-6800, ext. 170&lt;/p&gt;

&lt;p&gt;mconnolly@tmcnet.com &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Tue, 23 May 2023 13:22:23 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Getting Started with Eclipse Collections — Part 1</title>
	<guid isPermaLink="false">https://medium.com/p/d5ba0098465f</guid>
	<link>https://donraab.medium.com/getting-started-with-eclipse-collections-part-1-d5ba0098465f?source=rss-df39b86e9f04------2</link>
	<description>&lt;h3&gt;Getting Started with Eclipse Collections — Part 1&lt;/h3&gt;&lt;p&gt;Every journey has a beginning. This one has code and diagrams.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/986/1*E1y1nrSQrTfMLALYLlRthA.png&quot; /&gt;&lt;figcaption&gt;A snapshot of an example pom.xml that includes Eclipse Collections 11.1.0&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Finding Eclipse Collections at Maven Central&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; project has been hosted at the Eclipse Foundation for over seven years. The library has two primary jars, and a couple of supplemental jars, that can be included in your project’s build files and downloaded from Maven Central.&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/README.md&quot;&gt;README.md&lt;/a&gt; for Eclipse Collections includes the coordinates for Maven, Gradle, and also an OSGi bundle.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*SojzMH84VGuaKEn17hNChg.png&quot; /&gt;&lt;figcaption&gt;Build coordinates from Eclipse Collections README.md&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The eclipse-collections-api jar is for the Eclipse Collections API, which primarily contains interfaces. The eclipse-collections jar contains all of the implementation classes.&lt;/p&gt;&lt;p&gt;To learn more about the two jars required for using Eclipse Collections, you can read the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/leverage-information-chunking-to-scale-your-java-library-package-design-fcedf64af434&quot;&gt;Leverage Information Chunking to scale your Java library package design&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Getting started with Eclipse Collections&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; is a comprehensive collections library for Java. There are a lot of interfaces and classes in the library, which can make it challenging to know where and how to start learning.&lt;/p&gt;&lt;p&gt;There are a few basic things you will want to learn in order to get started with Eclipse Collections, after you have included it in your project. The following blog posts will cover topics that will help speed you on your journey.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Part 1 (This post!)— &lt;a href=&quot;https://medium.com/feed/@donraab#0482&quot;&gt;Creating Collections&lt;/a&gt; and &lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Primitive Collections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-2-43f9f05a46ae?source=friends_link&amp;amp;sk=4736504869baa8a1088609ec5ff5fa09&quot;&gt;Part 2 — Adding to and removing from Collections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-3-e74286b01435?source=friends_link&amp;amp;sk=325726d0e5ff273e989b82a8e640fd02&quot;&gt;Part 3 — Converting between Collection types&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-4-a72eb23cce0e?source=friends_link&amp;amp;sk=bab1452a96cb4c06dbe0150e76b243c5&quot;&gt;Part 4 — Processing information in Collections&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As you explore the library, you will learn how you can make your code more expressive and performant. The blogs in this getting started series will be as comprehensive as possible for each topic covered. I recommend reading the following blog if you would like to visualize how and why “Eclipse Collections is a comprehensive collections library for Java.”&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/visualizing-eclipse-collections-646dad9533a9&quot;&gt;Visualizing Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;If you prefer a hands-on approach to learning, then I would recommend completing some of the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;Eclipse Collections Code Katas&lt;/a&gt;. Many folks learn best by doing, and that is where the EC Code Katas can help.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/the-eclipse-collections-code-katas-d1539d45d104&quot;&gt;The Eclipse Collections Code Katas&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Creating Collections&lt;/h3&gt;&lt;p&gt;The first thing you will want to learn in Eclipse Collections is how to create instances of various Collection types. Eclipse Collections has support for Mutable and Immutable types. Eclipse Collections also has support for both object collections and primitive collections. The primitive collections provide support for all eight Java primitive types (boolean, byte, char, short, int, float, long, double).&lt;/p&gt;&lt;p&gt;There are three ways to create collections in Eclipse Collections.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use a Constructor (e.g. new FastList())&lt;/li&gt;&lt;li&gt;Use a Static Factory Method (e.g. FastList.newList())&lt;/li&gt;&lt;li&gt;Use a Factory Class (e.g. Lists.mutable.empty())&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The most convenient way to create collection containers in Eclipse Collections is to use the Factory classes. The constructor and static factory method approaches work fine, but require knowledge of the specific implementation class names you want to create. The only way to consistently create both Mutable and Immutable containers without having to learn and remember a lot of extra class names is using the Factory class approach.&lt;/p&gt;&lt;h4&gt;Creating Containers using Factory Classes&lt;/h4&gt;&lt;p&gt;In the following sections, there are examples of creating both Mutable and Immutable container types using Factory Classes in Eclipse Collections. Equivalent factory classes exist in both the eclipse-collections and eclipse-collections-api jars. The factory class duplication exists so default methods in the api jar can create instances of various collection types, without having to have direct references to the implementation classes. The factory classes from either jar work just as well.&lt;/p&gt;&lt;p&gt;The factory class names are &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Lists.html&quot;&gt;Lists&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Sets.html&quot;&gt;Sets&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Stacks.html&quot;&gt;Stacks&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Bags.html&quot;&gt;Bags&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/SortedSets.html&quot;&gt;SortedSets&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/SortedBags.html&quot;&gt;SortedBags&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Maps.html&quot;&gt;Maps&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/BiMaps.html&quot;&gt;BiMaps&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/factory/Multimaps.html&quot;&gt;Multimaps&lt;/a&gt;. If you know the collection type you want to create, just pluralize the collection type name to find the corresponding Factory class name (e.g. List -&amp;gt; Lists, Set -&amp;gt; Sets, Map -&amp;gt; Maps).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/958/1*Tsgi3i2VJUncEXE73HwT5A.png&quot; /&gt;&lt;figcaption&gt;The Eclipse Collections Factory Classes&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Object Collection Types&lt;/h4&gt;&lt;p&gt;The following are the generic Object Collection types supported by Eclipse Collections. All object collections extend java.lang.Iterable, so they work with lJava’s forEach loop (since Java 5). All MutableCollection types extend java.util.Collection. ImmutableCollection interfaces do not extend java.util.Collection, and thus provide contractual immutability (no mutating methods). Links below take you to different sections on how to create each Collection type.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#0132&quot;&gt;&lt;strong&gt;List&lt;/strong&gt; &lt;/a&gt;— Ordered Collections that allow duplicates. Memory efficient and good for fast iteration and indexed lookup.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#01ed&quot;&gt;&lt;strong&gt;Set&lt;/strong&gt; &lt;/a&gt;— Unordered Collection that does not allow duplicates. Good for uniquing and fast contains check.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#1f78&quot;&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/a&gt; — A “last in, first out” (LIFO) data structure. Stack does not extend Collection, and has its own methods for growing (push) and shrinking (pop).&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#c81a&quot;&gt;&lt;strong&gt;Bag&lt;/strong&gt;&lt;/a&gt;—Unordered Collection that allow duplicates. Good for counting and for content equality test without requiring order.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#f787&quot;&gt;&lt;strong&gt;SortedSet&lt;/strong&gt;&lt;/a&gt; — A sorted Collection that does not allow duplicates. Good for keeping data sorted and unique.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#5a06&quot;&gt;&lt;strong&gt;SortedBag&lt;/strong&gt;&lt;/a&gt; — A sorted Collection that allows duplicates. Good for keeping data sorted and for counting.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#2b27&quot;&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/a&gt; — A Collection of key/value pairs. Fast lookup of values by key.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#4c7d&quot;&gt;&lt;strong&gt;SortedMap&lt;/strong&gt;&lt;/a&gt; — A sorted Collection of key/value pairs. Fast lookup of values by key.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#81dd&quot;&gt;&lt;strong&gt;BiMap&lt;/strong&gt; &lt;/a&gt;— A bi-directional Map.&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#d42f&quot;&gt;&lt;strong&gt;MultiMap&lt;/strong&gt;&lt;/a&gt; — A Map whose values are stored in a Collection type (List, Set, Bag, SortedSet, SortedBag)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#7b0e&quot;&gt;&lt;strong&gt;Interval&lt;/strong&gt;&lt;/a&gt; — An inclusive range of Integer values. Interval implements java.util.List&amp;lt;Integer&amp;gt; and LazyIterable&amp;lt;Integer&amp;gt;.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Creating Lists&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Lists factory class to create MutableList and ImmutableList instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableList&lt;br /&gt;MutableList&amp;lt;String&amp;gt; emptyList =&lt;br /&gt;        Lists.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableList with three elements&lt;br /&gt;MutableList&amp;lt;String&amp;gt; list =&lt;br /&gt;        Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableList&lt;br /&gt;ImmutableList&amp;lt;String&amp;gt; emptyImmutableList =&lt;br /&gt;        Lists.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableList with three elements&lt;br /&gt;ImmutableList&amp;lt;String&amp;gt; immutableList =&lt;br /&gt;        Lists.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableList and ImmutableList, and how the Lists factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/880/1*fbYGF2cqIRqwEy3uoBQ6CQ.png&quot; /&gt;&lt;figcaption&gt;Lists Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The following sequence diagram shows the messages sent to the Lists class as well as the corresponding MutableListFactory and ImmutableListFactory types. This visualizes how the code example above works.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*a-1gZSOlWQ0w0u_JPEtEvw.png&quot; /&gt;&lt;figcaption&gt;Sequence Diagram for Lists factory examples&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Sets&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Sets factory class to create MutableSet and ImmutableSet instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableSet&lt;br /&gt;MutableSet&amp;lt;String&amp;gt; emptySet =&lt;br /&gt;        Sets.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSet with three elements&lt;br /&gt;MutableSet&amp;lt;String&amp;gt; set =&lt;br /&gt;        Sets.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSet&lt;br /&gt;ImmutableSet&amp;lt;String&amp;gt; emptyImmutableSet =&lt;br /&gt;        Sets.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableSet with three elements&lt;br /&gt;ImmutableSet&amp;lt;String&amp;gt; immutableSet =&lt;br /&gt;        Sets.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableSet and ImmutableSet, and how the Sets factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/824/1*ZE6l1D5yYTpSVVXm_L134Q.png&quot; /&gt;&lt;figcaption&gt;Sets Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Stacks&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Stacks factory class to create MutableStack and ImmutableStack instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableStack&lt;br /&gt;MutableStack&amp;lt;String&amp;gt; emptyStack =&lt;br /&gt;        Stacks.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableStack with three elements&lt;br /&gt;MutableStack&amp;lt;String&amp;gt; stack =&lt;br /&gt;        Stacks.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty MutableStack&lt;br /&gt;ImmutableStack&amp;lt;String&amp;gt; emptyImmutableStack =&lt;br /&gt;        Stacks.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableStack with three elements&lt;br /&gt;ImmutableStack&amp;lt;String&amp;gt; immutableStack =&lt;br /&gt;        Stacks.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableStack and ImmutableStack, and how the Stacks factory class can be used to create either type. Noe, the Stack interfaces in Eclipse Collections are not related to the java.util.Stack class. There is no Stack interface in the JDK. MutableStack does not extend MutableCollection, as a MutableStack has a different mutable API (push, pop) than MutableCollection (add, remove). I will cover add, remove, push and pop in the next blog in this series.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/964/1*xJW9OlBee6VlnRTK_hZfnA.png&quot; /&gt;&lt;figcaption&gt;Stacks Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Bags&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Bags factory class to create MutableBag and ImmutableBag instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableBag&lt;br /&gt;MutableBag&amp;lt;String&amp;gt; emptyBag =&lt;br /&gt;        Bags.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableBag with three elements&lt;br /&gt;MutableBag&amp;lt;String&amp;gt; bag =&lt;br /&gt;        Bags.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableBag&lt;br /&gt;ImmutableBag&amp;lt;String&amp;gt; emptyImmutableBag =&lt;br /&gt;        Bags.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableBag with three elements&lt;br /&gt;ImmutableBag&amp;lt;String&amp;gt; immutableBag =&lt;br /&gt;        Bags.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableBag and ImmutableBag, and how the Bags factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/861/1*0RyQH_P6X5m9m7Gm9cMmdA.png&quot; /&gt;&lt;figcaption&gt;Bags Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating SortedSets&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the SortedSets class to create MutableSortedSet and ImmutableSortedSet instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableSortedSet&lt;br /&gt;MutableSortedSet&amp;lt;String&amp;gt; emptySortedSet =&lt;br /&gt;        SortedSets.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSortedSet with three elements&lt;br /&gt;MutableSortedSet&amp;lt;String&amp;gt; sortedSet =&lt;br /&gt;        SortedSets.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSortedSet&lt;br /&gt;ImmutableSortedSet&amp;lt;String&amp;gt; emptyImmutableSortedSet =&lt;br /&gt;        SortedSets.immutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSortedSet with three elements&lt;br /&gt;ImmutableSortedSet&amp;lt;String&amp;gt; immutableSortedSet =&lt;br /&gt;        SortedSets.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableSortedSet and ImmutableSortedSet, and how the SortedSets factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/901/1*YEtGCz4eRIA4KC_yodaV1g.png&quot; /&gt;&lt;figcaption&gt;SortedSets Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating SortedBags&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the SortedBags factory class to create MutableSortedBag and ImmutableSortedBag instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableSortedBag&lt;br /&gt;MutableSortedBag&amp;lt;String&amp;gt; emptySortedBag =&lt;br /&gt;        SortedBags.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSortedBag with three elements&lt;br /&gt;MutableSortedBag&amp;lt;String&amp;gt; sortedBag =&lt;br /&gt;        SortedBags.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSortedBag&lt;br /&gt;ImmutableSortedBag&amp;lt;String&amp;gt; emptyImmutableSortedBag =&lt;br /&gt;        SortedBags.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableSortedBag with three elements&lt;br /&gt;ImmutableSortedBag&amp;lt;String&amp;gt; immutableSortedBag =&lt;br /&gt;        SortedBags.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableSortedBag and ImmutableSortedBag, and how the SortedBags factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/925/1*HvVNCB48EYZo-yFBCiGIbA.png&quot; /&gt;&lt;figcaption&gt;SortedBags Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Maps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Maps factory class to create MutableMap and ImmutableMap instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableMap&lt;br /&gt;MutableMap&amp;lt;String, String&amp;gt; emptyMap =&lt;br /&gt;        Maps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableMap with three elements&lt;br /&gt;MutableMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        Maps.mutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty MutableMap&lt;br /&gt;ImmutableMap&amp;lt;String, String&amp;gt; emptyImmutableMap =&lt;br /&gt;        Maps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableMap with three elements&lt;br /&gt;ImmutableMap&amp;lt;Integer, String&amp;gt; immutableMap =&lt;br /&gt;        Maps.immutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableMap and ImmutableMap, and how the Maps factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/973/1*asGcI10Gdr35GXX6EbNd2Q.png&quot; /&gt;&lt;figcaption&gt;Maps Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating SortedMaps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the SortedMaps factory class to create MutableSortedMap and ImmutableSortedMap instances.&lt;/p&gt;&lt;pre&gt;// Empty MutableSortedMap&lt;br /&gt;MutableSortedMap&amp;lt;String, String&amp;gt; emptySortedMap =&lt;br /&gt;        SortedMaps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSortedMap with three elements&lt;br /&gt;MutableSortedMap&amp;lt;Integer, String&amp;gt; sortedMap =&lt;br /&gt;        SortedMaps.mutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty MutableSortedMap&lt;br /&gt;ImmutableSortedMap&amp;lt;String, String&amp;gt; emptyImmutableSortedMap =&lt;br /&gt;        SortedMaps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableSortedMap with three elements&lt;br /&gt;ImmutableSortedMap&amp;lt;Integer, String&amp;gt; immutableSortedMap =&lt;br /&gt;        SortedMaps.immutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableSortedMap and ImmutableSortedMap, and how the SortedMaps factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/852/1*4e4Tb45w35JGrJrt5W8Kxg.png&quot; /&gt;&lt;figcaption&gt;SortedMaps Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating BiMaps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the BiMaps factory class to create MutableBiMap and ImmutableBiMap instances. The examples also show how to invert a BiMap using the inverse method.&lt;/p&gt;&lt;pre&gt;// Empty MutableMap&lt;br /&gt;MutableBiMap&amp;lt;Integer, String&amp;gt; emptyBiMap =&lt;br /&gt;        BiMaps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// Inverting the MutableMap&lt;br /&gt;MutableBiMap&amp;lt;String, Integer&amp;gt; emptyInverse =&lt;br /&gt;        emptyBiMap.inverse();&lt;br /&gt;&lt;br /&gt;// MutableMap with three elements&lt;br /&gt;MutableBiMap&amp;lt;Integer, String&amp;gt; biMap =&lt;br /&gt;        BiMaps.mutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Inverting the MutableMap&lt;br /&gt;MutableBiMap&amp;lt;String, Integer&amp;gt; biMapInverse =&lt;br /&gt;        biMap.inverse();&lt;br /&gt;&lt;br /&gt;// Empty MutableMap&lt;br /&gt;ImmutableBiMap&amp;lt;Integer, String&amp;gt; emptyImmutableBiMap =&lt;br /&gt;        BiMaps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// Inverting the ImmutableBiMap&lt;br /&gt;ImmutableBiMap&amp;lt;String, Integer&amp;gt; emptyImmutableBiMapInverse =&lt;br /&gt;        emptyImmutableBiMap.inverse();&lt;br /&gt;&lt;br /&gt;// MutableMap with three elements&lt;br /&gt;ImmutableBiMap&amp;lt;Integer, String&amp;gt; immutableBiMap =&lt;br /&gt;        BiMaps.immutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Inverting the ImmutableBiMap&lt;br /&gt;ImmutableBiMap&amp;lt;String, Integer&amp;gt; immutableBiMapInverse = &lt;br /&gt;        immutableBiMap.inverse();&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableBiMap and ImmutableBiMap, and how the BiMaps factory class can be used to create either type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/913/1*iajztV_hjCIniHRPoihxJA.png&quot; /&gt;&lt;figcaption&gt;BiMaps Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Multimaps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the Multimaps factory class to create MutableMultimap and ImmutableMultimap instances. There are List, Set, Bag, SortedSet, and SortedBag variations of Multimap. Each Multimap type has Mutable and Immutable variations.&lt;/p&gt;&lt;pre&gt;// Empty MutableListMultimap&lt;br /&gt;MutableListMultimap&amp;lt;String, String&amp;gt; listMultimap =&lt;br /&gt;        Multimaps.mutable.list.empty();&lt;br /&gt;&lt;br /&gt;// Empty MutableSetMultimap&lt;br /&gt;MutableSetMultimap&amp;lt;String, String&amp;gt; setMultimap =&lt;br /&gt;        Multimaps.mutable.set.empty();&lt;br /&gt;&lt;br /&gt;// Empty MutableBagMultimap&lt;br /&gt;MutableBagMultimap&amp;lt;String, String&amp;gt; bagMultimap =&lt;br /&gt;        Multimaps.mutable.bag.empty();&lt;br /&gt;&lt;br /&gt;// Empty MutableSortedSetMultimap&lt;br /&gt;MutableSortedSetMultimap&amp;lt;String, String&amp;gt; sortedSetMultimap =&lt;br /&gt;        Multimaps.mutable.sortedSet.with(Comparator.&amp;lt;String&amp;gt;naturalOrder());&lt;br /&gt;&lt;br /&gt;// Empty MutableSortedBagMultimap&lt;br /&gt;MutableSortedBagMultimap&amp;lt;String, String&amp;gt; sortedBagMultimap =&lt;br /&gt;        Multimaps.mutable.sortedBag.with(Comparator.&amp;lt;String&amp;gt;naturalOrder());&lt;br /&gt;&lt;br /&gt;// Empty ImmutableListMultimap&lt;br /&gt;ImmutableListMultimap&amp;lt;String, String&amp;gt; immutableListMultimap =&lt;br /&gt;        Multimaps.immutable.list.empty();&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSetMultimap&lt;br /&gt;ImmutableSetMultimap&amp;lt;String, String&amp;gt; immutableSetMultimap =&lt;br /&gt;        Multimaps.immutable.set.empty();&lt;br /&gt;&lt;br /&gt;// Empty ImmutableBagMultimap&lt;br /&gt;ImmutableBagMultimap&amp;lt;String, String&amp;gt; immutableBagMultimap =&lt;br /&gt;        Multimaps.immutable.bag.empty();&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSortedSetMultimap&lt;br /&gt;ImmutableSortedSetMultimap&amp;lt;String, String&amp;gt; immutableSortedSetMultimap =&lt;br /&gt;        Multimaps.immutable.sortedSet.with(Comparator.&amp;lt;String&amp;gt;naturalOrder());&lt;br /&gt;&lt;br /&gt;// Empty ImmutableSortedBagMultimap&lt;br /&gt;ImmutableSortedBagMultimap&amp;lt;String, String&amp;gt; immutableSortedBagMultimap =&lt;br /&gt;        Multimaps.immutable.sortedBag.with(Comparator.&amp;lt;String&amp;gt;naturalOrder());&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableMultimaps and ImmutableMultimaps, and how the Multimaps factory class can be used to create the different variations of Multimap.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*K3HYEvII8b1T3oVQ-HxKnA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Intervals&lt;/h4&gt;&lt;p&gt;The Interval class is an inclusive range of Integer that implements List&amp;lt;Integer&amp;gt;. Interval is Immutable. Interval will throw an UnsupportedOperationException for any mutating methods it implements from the List API. An Interval has a from and to value that are inclusive, and a step value. The Interval class in Eclipse Collections does not have a separate factory class. It also does not have a separate interface, so only exists in the implementation jar.&lt;/p&gt;&lt;pre&gt;// One element Interval&lt;br /&gt;Interval one = Interval.fromToBy(1, 1, 1);&lt;br /&gt;&lt;br /&gt;// One to Ten&lt;br /&gt;Interval oneToTen = Interval.oneTo(10);&lt;br /&gt;&lt;br /&gt;// Zero to Nine&lt;br /&gt;Interval zeroToNine = Interval.zeroTo(9);&lt;br /&gt;&lt;br /&gt;// Evens from 1 to 100&lt;br /&gt;Interval evens = Interval.evensFromTo(1, 100);&lt;br /&gt;&lt;br /&gt;// Odds from 1 to 100&lt;br /&gt;Interval odds = Interval.oddsFromTo(1, 100);&lt;br /&gt;&lt;br /&gt;// 1 to 20 by 5&lt;br /&gt;Interval oneToTwentybyFive = Interval.fromToBy(1, 100, 5);&lt;br /&gt;&lt;br /&gt;// 0 to -100&lt;br /&gt;Interval negativeRange = Interval.zeroTo(-100);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#8a08&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating other lesser known Collections&lt;/h4&gt;&lt;p&gt;The following blogs explain more about the missing Java data structures that no one ever told you about. There is an explanation how to create HashingStrategy Collections/Maps, and MultiReader Collections.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-missing-java-data-structures-no-one-ever-told-you-about-part-1-f45b6d0ee969&quot;&gt;The missing Java data structures no one ever told you about — Part 1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-missing-java-data-structures-no-one-ever-told-you-about-part-2-f484a588cce3&quot;&gt;The missing Java data structures no one ever told you about — Part 2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Creating Primitive Collections&lt;/h3&gt;&lt;p&gt;Eclipse Collections provides primitive collections support for all eight primitive types (boolean, byte, char, short, int, float, long, double). There are Mutable and Immutable forms of all primitive container types.&lt;/p&gt;&lt;p&gt;The convention used for the naming of primitive collection factory classes is simple. The prefix is the primitive type (Boolean, Byte, Char, Short, Int, Float, Long, Double) followed by the container type pluralized (Lists, Sets, Bags, Stacks, Maps). Some primitive factory class examples are DoubleLists, ShortSets, FloatBags, IntStacks, ObjectIntMaps, IntObjectMaps, and CharLongMaps.&lt;/p&gt;&lt;h4&gt;Primitive Collection Types&lt;/h4&gt;&lt;p&gt;The follow are the primitive Collection types supported by Eclipse Collections.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#45d5&quot;&gt;List&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#61c2&quot;&gt;Set&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#3dc3&quot;&gt;Stack&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#f06f&quot;&gt;Bag&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#58d2&quot;&gt;Primitive/Primitive Map&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#d8f0&quot;&gt;Object/Primitive Map&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ce57&quot;&gt;Primitive/Object Map&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#68ef&quot;&gt;String Adapter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#6e17&quot;&gt;Interval&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Creating Primitive Lists&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the DoubleLists factory class to create MutableDoubleList and ImmutableDoubleList instances. Equivalent primitive List factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableDoubleList&lt;br /&gt;MutableDoubleList emptyList =&lt;br /&gt;        DoubleLists.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableDoubleList with three elements&lt;br /&gt;MutableDoubleList list =&lt;br /&gt;        DoubleLists.mutable.with(1.0, 2.0, 3.0);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableDoubleList&lt;br /&gt;ImmutableDoubleList emptyImmutableList =&lt;br /&gt;        DoubleLists.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableDoubleList with three elements&lt;br /&gt;ImmutableDoubleList immutableList =&lt;br /&gt;        DoubleLists.immutable.with(1.0, 2.0, 3.0);&lt;/pre&gt;&lt;p&gt;The following class diagram shows the relationships between MutableDoubleList and ImmutableDoubleList, and how the DoubleLists factory class can be used to create either type. Other primitive collection factory class diagrams will look very similar to this one, so I will not include additional ones.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*MoivHX0bfYgJcHideTnwGg.png&quot; /&gt;&lt;figcaption&gt;DoubleLists Factory class with relationships&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The following sequence diagram shows the messages sent to the DoubleLists class as well as the corresponding MutableDoubleListFactory and ImmutableDoubleListFactory types. This visualizes how the code example above works.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*gybE9Sa9kbVMMroaVmE82g.png&quot; /&gt;&lt;figcaption&gt;Sequence Diagram for DoubleLists factory examples&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive Sets&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the ShortSets factory class to create MutableShortSet and ImmutableShortSet instances. Equivalent primitive Set factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableShortSet&lt;br /&gt;MutableShortSet emptySet =&lt;br /&gt;        ShortSets.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableShortSet with three elements&lt;br /&gt;MutableShortSet set =&lt;br /&gt;        ShortSets.mutable.with((short) 1, (short) 2, (short) 3);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableShortSet&lt;br /&gt;ImmutableShortSet emptyImmutableSet =&lt;br /&gt;        ShortSets.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableShortSet with three elements&lt;br /&gt;ImmutableShortSet immutableSet =&lt;br /&gt;        ShortSets.immutable.with((short) 1, (short) 2, (short) 3);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive Stacks&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the IntStacks factory class to create MutableIntStack and ImmutableIntStack instances. Equivalent primitive Stack factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableIntStack&lt;br /&gt;MutableIntStack emptyStack =&lt;br /&gt;        IntStacks.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableIntStack with three elements&lt;br /&gt;MutableIntStack stack =&lt;br /&gt;        IntStacks.mutable.with(1, 2, 3);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableIntStack&lt;br /&gt;ImmutableIntStack emptyImmutableStack =&lt;br /&gt;        IntStacks.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableIntStack with three elements&lt;br /&gt;ImmutableIntStack immutableStack =&lt;br /&gt;        IntStacks.immutable.with(1, 2, 3);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive Bags&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the FloatBags factory class to create MutableFloatBag and ImmutableFloatBag instances. Equivalent primitive Bag factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableFloatBag&lt;br /&gt;MutableFloatBag emptyBag =&lt;br /&gt;        FloatBags.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableFloatBag with three elements&lt;br /&gt;MutableFloatBag bag =&lt;br /&gt;        FloatBags.mutable.with(1.0f, 2.0f, 3.0f);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableFloatBag&lt;br /&gt;ImmutableFloatBag emptyImmutableBag =&lt;br /&gt;        FloatBags.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableFloatBag with three elements&lt;br /&gt;ImmutableFloatBag immutableBag =&lt;br /&gt;        FloatBags.immutable.with(1.0f, 2.0f, 3.0f);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive/Primitive Maps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the CharLongMaps factory class to create MutableCharLongMap and ImmutableCharLongMap instances. Equivalent primitive/primitive Map factories exists for all combinations of primitive/primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableCharLongMap&lt;br /&gt;MutableCharLongMap emptyMap =&lt;br /&gt;        CharLongMaps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableCharLongMap with three elements&lt;br /&gt;MutableCharLongMap map =&lt;br /&gt;        CharLongMaps.mutable.with('1', 1L, '2', 2L, '3', 3L);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableCharLongMap&lt;br /&gt;ImmutableCharLongMap emptyImmutableMap =&lt;br /&gt;        CharLongMaps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableCharLongMap with three elements&lt;br /&gt;ImmutableCharLongMap immutableMap =&lt;br /&gt;        CharLongMaps.immutable.with('1', 1L, '2', 2L, '3', 3L);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Object/Primitive Maps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the ObjectIntMaps factory class to create MutableObjectIntMap and ImmutableObjectIntMap instances. Equivalent object/primitive Map factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableObjectIntMap&lt;br /&gt;MutableObjectIntMap&amp;lt;String&amp;gt; emptyMap =&lt;br /&gt;        ObjectIntMaps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableObjectIntMap with three elements&lt;br /&gt;MutableObjectIntMap&amp;lt;String&amp;gt; map =&lt;br /&gt;        ObjectIntMaps.mutable.with(&quot;1&quot;, 1, &quot;2&quot;, 2, &quot;3&quot;, 3);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableObjectIntMap&lt;br /&gt;ImmutableObjectIntMap&amp;lt;String&amp;gt; emptyImmutableMap =&lt;br /&gt;        ObjectIntMaps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableObjectIntMap with one element&lt;br /&gt;ImmutableObjectIntMap&amp;lt;String&amp;gt; immutableMap =&lt;br /&gt;        ObjectIntMaps.immutable.with(&quot;1&quot;, 1);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive/Object Maps&lt;/h4&gt;&lt;p&gt;The following code examples show how to use the IntObjectMaps factory class to create MutableIntObjectMap and ImmutableIntObjectMap instances. Equivalent primitive/object Map factories exists for all eight primitive types.&lt;/p&gt;&lt;pre&gt;// Empty MutableIntObjectMap&lt;br /&gt;MutableIntObjectMap&amp;lt;String&amp;gt; emptyMap =&lt;br /&gt;        IntObjectMaps.mutable.empty();&lt;br /&gt;&lt;br /&gt;// MutableIntObjectMap with three elements&lt;br /&gt;MutableIntObjectMap&amp;lt;String&amp;gt; map =&lt;br /&gt;        IntObjectMaps.mutable.with(1, &quot;1&quot;, 2, &quot;2&quot;, 3, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;// Empty ImmutableObjectIntMap&lt;br /&gt;ImmutableIntObjectMap&amp;lt;String&amp;gt; emptyImmutableMap =&lt;br /&gt;        IntObjectMaps.immutable.empty();&lt;br /&gt;&lt;br /&gt;// ImmutableObjectIntMap with one element&lt;br /&gt;ImmutableIntObjectMap&amp;lt;String&amp;gt; immutableMap =&lt;br /&gt;        IntObjectMaps.immutable.with(1, &quot;1&quot;);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating String Adapters&lt;/h4&gt;&lt;p&gt;There are three String adapter classes in Eclipse Collections. The classes are CharAdapter, CodePointAdapter and CodePointList. These classes can be instantiated via static factory methods on the classes directly, or by using the Strings factory class.&lt;/p&gt;&lt;pre&gt;// Hello World! as a CharAdapter&lt;br /&gt;CharAdapter charAdapter =&lt;br /&gt;        Strings.asChars(&quot;Hello World!&quot;);&lt;br /&gt;&lt;br /&gt;// Hello World! as a CodePointAdapter&lt;br /&gt;CodePointAdapter codePointAdapter =&lt;br /&gt;        Strings.asCodePoints(&quot;Hello World!&quot;);&lt;br /&gt;&lt;br /&gt;// Hello World! from code point values&lt;br /&gt;CodePointAdapter fromCodePoints =&lt;br /&gt;        Strings.toCodePoints(72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33);&lt;br /&gt;&lt;br /&gt;// Hello World! from char values&lt;br /&gt;CharAdapter fromChars =&lt;br /&gt;        Strings.toChars('H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!');&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Creating Primitive Intervals&lt;/h4&gt;&lt;p&gt;There are two primitive Interval types. They are IntInterval and LongIterval. Unlike the Interval object collection which implements List&amp;lt;Integer&amp;gt; and LazyIterable&amp;lt;Integer&amp;gt;, IntInterval implements ImmutableIntList and LongIterval implements ImmutableLongList.&lt;/p&gt;&lt;pre&gt;// One element IntInterval&lt;br /&gt;IntInterval one = IntInterval.fromToBy(1, 1, 1);&lt;br /&gt;&lt;br /&gt;// One to Ten LongInterval&lt;br /&gt;LongInterval oneToTen = LongInterval.oneTo(10L);&lt;br /&gt;&lt;br /&gt;// Zero to Nine IntInterval&lt;br /&gt;IntInterval zeroToNine = IntInterval.zeroTo(9);&lt;br /&gt;&lt;br /&gt;// Evens from 1 to 100 LongInterval&lt;br /&gt;LongInterval evens = LongInterval.evensFromTo(1L, 100L);&lt;br /&gt;&lt;br /&gt;// Odds from 1 to 100 IntInterval&lt;br /&gt;IntInterval odds = IntInterval.oddsFromTo(1, 100);&lt;br /&gt;&lt;br /&gt;// 1 to 20 by 5 LongInterval&lt;br /&gt;LongInterval oneToTwentybyFive = LongInterval.fromToBy(1L, 100L, 5L);&lt;br /&gt;&lt;br /&gt;// 0 to -100 IntInterval&lt;br /&gt;IntInterval negativeRange = IntInterval.zeroTo(-100);&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#33f1&quot;&gt;Return to TOC&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;More about primitive Collections&lt;/h4&gt;&lt;p&gt;This blog focused primarily on how to create primitive collections. The following blog goes into more detail on leveraging primitive collections, and the benefits.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-missing-java-data-structures-no-one-ever-told-you-about-part-3-d26387b9e66e&quot;&gt;The missing Java data structures no one ever told you about — Part 3&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;More Factory Examples&lt;/h3&gt;&lt;p&gt;For additional examples of creating Mutable and Immtuable collections, please read the following blogs.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/as-a-matter-of-factory-part-1-mutable-75cc2c5d72d9&quot;&gt;As a matter of Factory — Part 1 (Mutable)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/as-a-matter-of-factory-part-2-immutable-8cb72ff897ee&quot;&gt;As a matter of Factory — Part 2 (Immutable)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/oracledevs/as-a-matter-of-factory-part-3-method-chaining-224217074d31&quot;&gt;As a matter of Factory — Part 3 (Method Chaining)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Final Thoughts&lt;/h3&gt;&lt;p&gt;Thank you for taking the time to read this blog. I hope this will be a good reference for folks to refer to in the future. I tried to be as comprehensive as possible. In the next blog in this series, I will cover in depth how to add and remove items from different collection types.&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=d5ba0098465f&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 18 May 2023 16:57:43 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - March and April, 2023</title>
	<guid isPermaLink="false">7355 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-march-and-april-2023</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Digest - March and April, 2023&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;h3&gt;March and April, 2023&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/emerging-open-vsx-working-group&quot;&gt;An Emerging Open VSX Working Group!&lt;/a&gt; - Based on discussions with various stakeholders, we have proposed a new working group specifically for the Open VSX Registry. Spoiler alert: it is starting and formal announcement soon.&lt;/p&gt;&lt;div class=&quot;align-center&quot;&gt;
  
  
  &lt;div class=&quot;field field--name-field-media-image field--type-image field--label-visually_hidden&quot;&gt;
    &lt;div class=&quot;field--label sr-only&quot;&gt;Image&lt;/div&gt;
              &lt;div class=&quot;field--item&quot;&gt;  &lt;img alt=&quot;open-vsx.org&quot; class=&quot;img-responsive&quot; height=&quot;289&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/styles/large/public/2023-05/Screenshot%202023-05-19%20at%2012.11.49%20PM.png?itok=iiBuwsOO&quot; width=&quot;480&quot; /&gt;&lt;/div&gt;
          &lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/rodrigo-pinto-eclipse-cloud-devtools-contributor-month&quot;&gt;Rodrigo Pinto: Eclipse Cloud DevTools Contributor of the Month!&lt;/a&gt; - The Eclipse Cloud DevTools contributor award for March goes to Rodrigo Pinto of &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt; for his significant contributions to &lt;a href=&quot;https://github.com/eclipse-cdt-cloud/theia-trace-extension&quot;&gt;Trace Compass Cloud&lt;/a&gt; and the Eclipse Cloud DevTools Ecosystem.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-eclipse-theia-community-release&quot;&gt;Eclipse Cloud DevTools Contributor Award: Eclipse Theia Community Release&lt;/a&gt; - The Eclipse Cloud DevTools contributor award for April goes to &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; for initiating the Theia Community Release. The community release is a new, special type of release done every three months in addition to the monthly releases&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12&quot;&gt;Eclipse JKube 1.12 is now available!&lt;/a&gt; - Enhancements include cron job controller generation, resource limits through XML/DSL, and concurrent remote development sessions&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/blogs/2023/04/12/eclipse-theia-1-36-release-news-and-noteworthy/&quot;&gt;Eclipse Theia 1.36 Release: News and Noteworthy&lt;/a&gt; - Enhancements include a terminal view context menu, improved outline view expansion, improved options for debug sessions, and support for VS code extensions to 1.72.2.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/blogs/2023/03/09/the-eclipse-theia-community-release-2023-02/&quot;&gt;The Eclipse Theia Community Release 2023-02&lt;/a&gt; - Included are detachable web and terminal views, improved VS Code extension API, and improvements to help adopters.&lt;/p&gt;&lt;h3&gt;Cloud Tool Time Webinars&lt;/h3&gt;&lt;p&gt;&lt;img alt=&quot;Cloud Tooltime Webinars&quot; src=&quot;https://lh5.googleusercontent.com/UKY-b4WND1Lgirn3T_B_CuBkGkaMW48WsOCGCJifOOx4lnLRdfVy7oLI-wV-X7P4Nx1USxWIF-ZDZBjIXeWKcFgBl86sq83hP09cVY6U5ed43HvQZj43tryThsjyjKWXwNXZQ78t9z0NO0tAQPWWV6I&quot; width=&quot;255.97222222222226&quot; /&gt;&lt;/p&gt;&lt;p&gt;We are now scheduling Cloud Tool Time webinars for 2023. Be sure to &lt;a href=&quot;https://forms.gle/K8ZuJ26YqoyMC9dD7&quot;&gt;Sign up&lt;/a&gt; now to get on the calendar and let us help tell your story. You can see past sessions on our &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSBxx8gLh0i9LlN2bZW6H1L&quot;&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;&lt;p&gt;&lt;img alt=&quot;Eclipse Cloud DevTools&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; width=&quot;371&quot; /&gt;&lt;/p&gt;&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs, extension marketplaces, frameworks and more.&lt;/p&gt;&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-05-17 14:52&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/opensource-0&quot; hreflang=&quot;en&quot;&gt;OpenSource&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 17 May 2023 18:52:34 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Yining Wang for Contributions to Open VSX</title>
	<guid isPermaLink="false">7354 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-yining-wang-contributions-open-vsx</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Contributor Award: Yining Wang for Contributions to Open VSX&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;The Eclipse Cloud Developer Tools contributor award for September goes to Yining Wang from &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt; for her contributions to &lt;a href=&quot;https://github.com/eclipse/openvsx&quot;&gt;github.com/eclipse/openvsx&lt;/a&gt; and &lt;a href=&quot;https://github.com/EclipseFdn/open-vsx.org&quot;&gt;github.com/EclipseFdn/open-vsx.org&lt;/a&gt;, it's deployment at &lt;a href=&quot;https://open-vsx.org/&quot;&gt;Open VSX Registry.&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;align-center&quot;&gt;
  
  
  &lt;div class=&quot;field field--name-field-media-image field--type-image field--label-visually_hidden&quot;&gt;
    &lt;div class=&quot;field--label sr-only&quot;&gt;Image&lt;/div&gt;
              &lt;div class=&quot;field--item&quot;&gt;  &lt;img alt=&quot;open-vsx.org&quot; class=&quot;img-responsive&quot; height=&quot;232&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/styles/large/public/2023-05/open-vsx_0.png?itok=hovEH9pW&quot; width=&quot;480&quot; /&gt;&lt;/div&gt;
          &lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;The Open VSX Registry at &lt;a href=&quot;https://open-vsx.org/&quot;&gt;open-vsx.org&lt;/a&gt; is a vendor-neutral open-source alternative to the &lt;a href=&quot;https://marketplace.visualstudio.com&quot;&gt;Visual Studio Marketplace&lt;/a&gt; for VS Code extensions. A public instance of the Registry is hosted by the Eclipse Foundation, but more instances can be freely deployed in public or private places. The primary purpose of this project is to provide a marketplace for VS Code extensions that can be used with &lt;a href=&quot;https://theia-ide.org&quot;&gt;Eclipse Theia&lt;/a&gt; and other IDEs. Another important goal is to allow self-hosting the Registry, e.g. within a company network. None of this is currently possible with the VS Marketplace, which is proprietary and may be accessed only from Visual Studio products. These projects are part of the Eclipse Cloud DevTool Working Group.&lt;/p&gt;&lt;p&gt;Yining has made a significant impact on the Open VSX project. She works with Ericsson on internal projects as well as directly on the Open VSX’s code base. With her open and supportive work, she already has helped out people around the globe, internal to Ericson and external, in both English and Mandarin. She has been laying the groundwork down for a more stable Open VSX by removing background noise tasks. In addition, as a result of her hard work and contributions, Yining has been nominated to get committer status.&lt;/p&gt;&lt;p&gt;Thanks to Yining for your contributions and congratulations for winning this award!&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://ecdtools.eclipse.org/&quot;&gt;Cloud DevTools Working Group&lt;/a&gt; provides a vendor-neutral ecosystem of open-source projects focused on defining, implementing and promoting best-in-class web and cloud-based development tools. It is hosted at the Eclipse Foundation, current members of the group include &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=848&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=731&quot;&gt;RedHat&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1069&quot;&gt;Renesas&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1194&quot;&gt;TypeFox&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-05-17 13:03&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia&quot; hreflang=&quot;en&quot;&gt;Theia&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia-contributor-award&quot; hreflang=&quot;en&quot;&gt;Theia Contributor Award&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 17 May 2023 17:03:25 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Blog Series: Getting Started with Eclipse Collections</title>
	<guid isPermaLink="false">https://medium.com/p/5634dc39b9e6</guid>
	<link>https://donraab.medium.com/blog-series-getting-started-with-eclipse-collections-5634dc39b9e6?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Every day we get to learn something new and useful, is a goodÂ day.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*s32wL7eH1PUSJJRv&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@alexas_fotos?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Alexas_Fotos&lt;/a&gt; onÂ &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Start Here&lt;/h3&gt;&lt;p&gt;You are here. Welcome to the first day of learning a new way of coding with collections in Java using Eclipse Collections. Today is going to be a good day. Thank you for letting my series of four blogs on Getting Started with Eclipse Collections be a part of yourÂ day.&lt;/p&gt;&lt;p&gt;Read the blogs in this series (linked below) at a pace that you find comfortable. Jump around, skip sectionsâ€¦ find your own path that works best for learning. The blogs in this series are a comprehensive beginnerâ€™s reference guide. I highly recommend complementing the knowledge you obtain in these blogs with hands-on practice using the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;Eclipse Collections Kata&lt;/a&gt;. The information contained in these blogs will help you learn many of the basic usage patterns of the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; library. Alternating between the theory in the blogs, and the practice in the katas will help you hone your skills, and strengthen your knowledge and understanding.&lt;/p&gt;&lt;p&gt;These blogs are a mile marker on a journey I started back in 2004. Twenty years ago, I was a Technical Architect in Goldman Sachs who had decided to move with his family to London on a year long business trip. I had some problems to solve while I was working in London, and I worked hard to solve them. I did not expect to return from that trip with the beginnings of a new collections library in Java, but that is exactly what happened. What you will see in the blogs that follow is the evolution of a library that was developed to satisfy the real needs of large scale enterprise applications developed in the back office of Goldman Sachs. It would take a full eight years for anyone outside of Goldman Sachs to be able to see and use this code as an open source library in their own applications. In 2012, &lt;a href=&quot;https://www.infoq.com/news/2016/01/GS-Collections-Eclipse-Foundn/&quot;&gt;what we now know as Eclipse Collections &lt;/a&gt;was originally open sourced as GS Collections.&lt;/p&gt;&lt;p&gt;And here you are. Waiting to learn. Enough back story. Letâ€™s get you started. The following sections have links to the blogs in theÂ series.&lt;/p&gt;&lt;h3&gt;Part 1â€Šâ€”â€ŠCreating Collections&lt;/h3&gt;&lt;p&gt;Know why you need the Eclipse Collectionsâ€Šâ€”â€Šthe new types it offers and how it enhances other familiar Collection types. In this blog, you will learn how to create Lists, Sets, Bags, Stacks, Maps and other collection types in Eclipse Collections.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-1-d5ba0098465f&quot;&gt;Getting Started with Eclipse Collectionsâ€Šâ€”â€ŠPart 1&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Part 2â€Šâ€”â€ŠAdding to and removing from Collections&lt;/h3&gt;&lt;p&gt;If you thought you knew everything you needed to know about adding to and removing from collections, then you need to read this blog. Learn about the covariantly overridden methods with, without, withAll, withoutAll, along with other specialized methods.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-2-43f9f05a46ae&quot;&gt;Getting Started with Eclipse Collectionsâ€Šâ€”â€ŠPart 2&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Part 3â€Šâ€”â€ŠConverting between Collection types&lt;/h3&gt;&lt;p&gt;Are you satisfied with the method toList on Javaâ€™s StreamÂ ? Do you find yourself longing for converter methods named toSet, toMap as well? Then read this blog and find out just how many converter methods you have been livingÂ without.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-3-e74286b01435&quot;&gt;Getting Started with Eclipse Collectionsâ€Šâ€”â€ŠPart 3&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Part 4â€Šâ€”â€ŠProcessing information in Collections&lt;/h3&gt;&lt;p&gt;Collections contain information in them, and they provide methods that you can use to process that information. This blog covers the methods forEach, select, reject, partition, collect, detect, any/all/noneSatisfy and count. There also are fun FizzBuzz (ğŸ¥¤ğŸ��) and Lego Brick (ğŸ”´ğŸ”´ğŸ”´) examples using emojis in code to help demonstrate theseÂ methods.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-4-a72eb23cce0e&quot;&gt;Getting Started with Eclipse Collectionsâ€Šâ€”â€ŠPart 4&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Further Reading&lt;/h3&gt;&lt;p&gt;If youâ€™re reading this right now, then you have found my Medium Account blog. I have been blogging about Eclipse Collections for almost six years. There are over 150 blogs on my Medium Account. I will share the blogs below that I think will help you the most if you want to continue your journey of learning Eclipse Collections.&lt;/p&gt;&lt;h4&gt;Blog Series: The missing Java data structures no one ever told youÂ about&lt;/h4&gt;&lt;p&gt;These are more advanced topics about Eclipse Collections. The blogs in this series will you help understand how Eclipse Collections expands far beyond what is available in the standard Java Collections library.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2&quot;&gt;Blog Series: The missing Java data structures no one ever told you about&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Java Streams are great but itâ€™s time for better Java Collections&lt;/h4&gt;&lt;p&gt;Java Streams were a great addition to the standard library, but there is so much more that is missing from Java Collections. Read this blog to learnÂ more.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/java-streams-are-great-but-its-time-for-better-java-collections-42d2c04235d1&quot;&gt;Java Streams are great but itâ€™s time for better Java Collections&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Ten reasons to use Eclipse Collections&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/ten-reasons-to-use-eclipse-collections-91593104af9d&quot;&gt;Ten reasons to use Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Have a greatÂ Journey!&lt;/h3&gt;&lt;p&gt;Thank you for taking the time to read! I hope you have learned something new and useful. Good luck on your journey, and I hope you will share any new found knowledge with others you encounter along theÂ way.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5634dc39b9e6&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 17 May 2023 05:19:46 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: CDT Cloud Blueprint: Getting started</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/05/16/cdt-cloud-blueprint-getting-started/</guid>
	<link>https://eclipsesource.com/blogs/2023/05/16/cdt-cloud-blueprint-getting-started/</link>
	<description>&lt;p&gt;Are you looking for a modern, web-based IDE for C/C++ development? Do you want to build a custom, domain specific C/C++ IDE or tool? Then read on. In this article, we&amp;amp;rsquo;ll show you how to get...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/05/16/cdt-cloud-blueprint-getting-started/&quot; rel=&quot;nofollow&quot;&gt; CDT Cloud Blueprint: Getting started&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>N4JS: OpenAPI Generator supports N4JS</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-5760439443559530981</guid>
	<link>https://n4js.blogspot.com/2023/05/openapi-generator-supports-n4js.html</link>
	<description>&lt;p style=&quot;text-align: left;&quot;&gt;&lt;b&gt;We are happy to announce that the OpenAPI Generator (version &amp;gt;= 6.6.0) supports N4JS client generation. This enables N4JS users to generate n4jsd files from OpenAPI specifications.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Our extension to the OpenAPI Generator supports the generation of client APIs and provides several command line options:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;For api and model files a target path can be specified. For api files a file prefix can be specified.&lt;/li&gt;&lt;li&gt;Api files can be generated including calls to check methods whether mandatory parameters are missing.&lt;/li&gt;&lt;li&gt;Additionally, generated api files can also contain checks whether the given objects might contain more fields than necessary. This could prevent sending superfluous data to the server.&lt;/li&gt;&lt;li&gt;A default implementation for the actual REST calls is part of the generated file set.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Detailed specifications of the N4JS OpenAPI Generator and its command line options can be found at the official &lt;a href=&quot;https://openapi-generator.tech/docs/generators/n4js&quot; target=&quot;_blank&quot;&gt;OpenAPI Generator website&lt;/a&gt;.  &lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Marcus Mews&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 15 May 2023 10:10:59 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.37 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/05/08/eclipse-theia-1-37-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/05/08/eclipse-theia-1-37-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.37 release! The release contains 39 merged pull requests and we welcome one new contributor. In this article we will highlight some selected improvements...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/05/08/eclipse-theia-1-37-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.37 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Getting Started with Eclipse Collections — Part 4</title>
	<guid isPermaLink="false">https://medium.com/p/a72eb23cce0e</guid>
	<link>https://donraab.medium.com/getting-started-with-eclipse-collections-part-4-a72eb23cce0e?source=rss-df39b86e9f04------2</link>
	<description>&lt;h3&gt;Getting Started with Eclipse Collectionsâ€Šâ€”â€ŠPartÂ 4&lt;/h3&gt;&lt;p&gt;Processing information in collections&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*vjIe5tRNmG2L397w&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@xavi_cabrera?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Xavi Cabrera&lt;/a&gt; onÂ &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Getting Started with Eclipse Collections&lt;/h3&gt;&lt;p&gt;In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-1-d5ba0098465f?source=friends_link&amp;amp;sk=adf22dc70cb22558651e791e82e5d46f&quot;&gt;part 1 of this series&lt;/a&gt;, I explained how to download the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; library from Maven Central and create collections using Eclipse Collections factories. In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-2-43f9f05a46ae?source=friends_link&amp;amp;sk=4736504869baa8a1088609ec5ff5fa09&quot;&gt;part 2&lt;/a&gt;, I explained how to add items to and remove items from different collection types. In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-3-e74286b01435?source=friends_link&amp;amp;sk=325726d0e5ff273e989b82a8e640fd02&quot;&gt;part 3&lt;/a&gt;, I explained how to use converter methods to convert any &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; type to another Collection or Map type. In part 4, I will explain how to use several of the most commonly used methods to process information in collections.&lt;/p&gt;&lt;h3&gt;Processing Information in Collections&lt;/h3&gt;&lt;p&gt;In Eclipse Collections there are several ways to process information in collections. Information contained in collections may be processed &lt;em&gt;eagerly&lt;/em&gt;, &lt;em&gt;lazily&lt;/em&gt;, &lt;em&gt;serially&lt;/em&gt; or in &lt;em&gt;parallel&lt;/em&gt;. The default approach available in methods directly on collections is &lt;em&gt;Eager&lt;/em&gt; &lt;em&gt;Serial&lt;/em&gt;. &lt;em&gt;Eager Serial&lt;/em&gt; methods process and return a result immediately executing on the current thread. &lt;em&gt;Lazy Serial &lt;/em&gt;and &lt;em&gt;Lazy Parallel &lt;/em&gt;processing options are both available by calling either &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#asLazy()&quot;&gt;asLazy&lt;/a&gt; or asParallel on a collection. There is also &lt;em&gt;Eager Parallel&lt;/em&gt; processing available, but that is only available via utility classes. Neither &lt;em&gt;Lazy Parallel&lt;/em&gt; nor &lt;em&gt;Eager Parallel&lt;/em&gt; processing options will be covered in this blog. There is some discussion of both of these approaches in the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-unparalleled-design-of-eclipse-collections-e4340b00f79f&quot;&gt;The unparalleled design of Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In order to understand the difference between &lt;em&gt;eager&lt;/em&gt; and &lt;em&gt;lazy&lt;/em&gt; methods, I recommend reading the following blog. This blog requires no knowledge of Eclipse Collections types or method names and presents &lt;em&gt;eager&lt;/em&gt; alternatives to Java Stream methods using the same names as the &lt;em&gt;lazy&lt;/em&gt; Java Stream methods (e.g. filter,Â map).&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/eager-is-easy-lazy-is-labyrinthine-b12605f13048&quot;&gt;Eager is Easy, Lazy is Labyrinthine&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Eager&lt;/em&gt; processing is easier to learn and understand than &lt;em&gt;lazy&lt;/em&gt; processing. If you can write a for loop or while loop that does something for each element of a collection, then you likely already understand eager processing.&lt;/p&gt;&lt;h3&gt;Basic Collection Processing&lt;/h3&gt;&lt;p&gt;The following are the basic set of collection operations developers use often with Eclipse Collections:&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*e9NiZXaGtUxQfxC7lpNcBg.png&quot; /&gt;&lt;figcaption&gt;Basic operations (aka iteration patterns) available as methods on Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The basic operations, or iteration patterns, are provided by the method names in the middle, above, in Eclipse Collections. The types on the right are the parameter types accepted by the methods in the middle. The names used in Eclipse Collections are inspired by the method names used in the collections framework in the Smalltalk programming language.&lt;/p&gt;&lt;h4&gt;Section Links&lt;/h4&gt;&lt;p&gt;The following links will take you to different sections in this blog. There is a link back to here at the end of each of the sections.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#c482&quot;&gt;Operation: Do&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#4994&quot;&gt;Operation: Filter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#7a23&quot;&gt;Operation: Transform&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#74ac&quot;&gt;Operation: Find&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#39ac&quot;&gt;Operation: Test&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#0bbe&quot;&gt;Operation: Count&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Whatâ€™s in aÂ name?&lt;/h4&gt;&lt;p&gt;There are an alternate set of names provided for the equivalent set of operations on Java Streams. If you are familiar with the methods available on Java Streams, this translation guide should helpÂ you.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*jBo-wedx5t109fFnyK-vWQ.png&quot; /&gt;&lt;figcaption&gt;Eclipse Collections and Java Stream equivalent operation namesÂ compared&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Procedures, Predicates, and Functions&lt;/h4&gt;&lt;p&gt;Each of the methods above on a collection type will take some &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html&quot;&gt;Functional Interface&lt;/a&gt;. A Functional Interface in Java is defined as an interface that has at most a single abstract method. A Functional Interface can be represented syntactically as a lambda, a method reference, or as a named or anonymous innerÂ class.&lt;/p&gt;&lt;p&gt;The three primary Functional Interface types used by the basic collection operations in Eclipse Collections are &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/procedure/Procedure.html&quot;&gt;Procedure&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/predicate/Predicate.html&quot;&gt;Predicate&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/function/Function.html&quot;&gt;Function&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The following interoperability exists between Eclipse Collections Functional Interface types and JDK Functional Interface types.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/procedure/Procedure.html&quot;&gt;Procedure&lt;/a&gt; extends &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html&quot;&gt;java.util.function.Consumer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/predicate/Predicate.html&quot;&gt;Predicate&lt;/a&gt; extends &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html&quot;&gt;java.util.function.Predicate&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/function/Function.html&quot;&gt;Function&lt;/a&gt; extends &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html&quot;&gt;java.util.function.Function&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The interop only works in one direction. Eclipse Collections Functional Interface types can be used with any methods in Java Stream that take Consumer, Predicate, or Function. The reverse is not true. JDK Functional Interface Types will not work directly with methods that require the Eclipse Collections Functional Interface types.&lt;/p&gt;&lt;h3&gt;Operation: Do&lt;/h3&gt;&lt;p&gt;The most basic iteration pattern is the one named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/InternalIterable.html#forEach(org.eclipse.collections.api.block.procedure.Procedure)&quot;&gt;forEach&lt;/a&gt;, where you &lt;em&gt;do&lt;/em&gt; something specified in the form of a Procedure for every element in a collection. The method forEach returns void, so most often this method will cause some form of mutation to occur. The simplest example leveraging forEach is printing elements of a collection to System.out.&lt;/p&gt;&lt;h4&gt;Examples ofÂ forEach&lt;/h4&gt;&lt;pre&gt;// Object Collections&lt;br /&gt;Lists.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;Sets.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;Bags.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;Stacks.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;&lt;br /&gt;// Primitive Collections&lt;br /&gt;IntLists.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;IntSets.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;IntBags.mutable.with(1, 2, 3).forEach(System.out::println);&lt;br /&gt;IntStacks.mutable.with(1, 2, 3).forEach(System.out::println);&lt;/pre&gt;&lt;h4&gt;Examples ofÂ each&lt;/h4&gt;&lt;p&gt;There is a shorter synonym for forEach, namedÂ &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#each(org.eclipse.collections.api.block.procedure.Procedure)&quot;&gt;each&lt;/a&gt;.&lt;/p&gt;&lt;pre&gt;// Object Collections&lt;br /&gt;Lists.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;Sets.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;Bags.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;Stacks.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;&lt;br /&gt;// Primitive Collections&lt;br /&gt;IntLists.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;IntSets.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;IntBags.mutable.with(1, 2, 3).each(System.out::println);&lt;br /&gt;IntStacks.mutable.with(1, 2, 3).each(System.out::println);&lt;/pre&gt;&lt;h4&gt;Handling Exceptions&lt;/h4&gt;&lt;p&gt;Sometimes when you do something, something bad can happen, in the form of a checked Exception being thrown. The method named throwing in the &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/block/factory/Procedures.html&quot;&gt;Procedures&lt;/a&gt; class in Eclipse Collections can help you adapt a Procedure implementation to handle a check Exception and re-throw a RuntimeException if an exception occurs.&lt;/p&gt;&lt;h4&gt;Examples of handling checked exceptions&lt;/h4&gt;&lt;pre&gt;@Test&lt;br /&gt;public void forEachPrintToSystemOut()&lt;br /&gt;{&lt;br /&gt;    // Object Collections&lt;br /&gt;    Appendable builder = new StringBuilder();&lt;br /&gt;    // Note: Appendable append throws IOException&lt;br /&gt;    Procedure&amp;lt;String&amp;gt; throwing = Procedures.throwing(builder::append);&lt;br /&gt;    Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).each(throwing);&lt;br /&gt;    Sets.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).forEach(throwing);&lt;br /&gt;    Bags.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).each(throwing);&lt;br /&gt;    Stacks.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).forEach(throwing);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;111122223333&quot;,&lt;br /&gt;            Strings.asChars(builder.toString())&lt;br /&gt;                    .toSortedList()&lt;br /&gt;                    .makeString(&quot;&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;You can also customize the RuntimException that is thrown using an overloaded form of Procedures.throwing.&lt;/p&gt;&lt;h4&gt;Example returning a custom RuntimeException&lt;/h4&gt;&lt;pre&gt;@Test&lt;br /&gt;public void forEachPrintToSystemOut()&lt;br /&gt;{&lt;br /&gt;    // Object Collections&lt;br /&gt;    Appendable builder = new StringBuilder();&lt;br /&gt;    // Note: Appendable append throws IOException&lt;br /&gt;    Procedure&amp;lt;String&amp;gt; throwing = Procedures.throwing(&lt;br /&gt;            builder::append,&lt;br /&gt;            (each, exception) -&amp;gt; new RuntimeException(exception));&lt;br /&gt;    Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).forEach(throwing);&lt;br /&gt;    Sets.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).each(throwing);&lt;br /&gt;    Bags.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).forEach(throwing);&lt;br /&gt;    Stacks.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;).each(throwing);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;111122223333&quot;,&lt;br /&gt;            Strings.asChars(builder.toString())&lt;br /&gt;                    .toSortedList()&lt;br /&gt;                    .makeString(&quot;&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The following blog goes into more detail about handling exceptions during iteration with Eclipse Collections.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/exception-handling-in-eclipse-collections-9e37a68fc6a9&quot;&gt;Exception Handling in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;FizzBuzz (ğŸ¥¤ğŸ��) with forEach using CaseProcedure&lt;/h4&gt;&lt;p&gt;There is a Procedure named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/block/procedure/CaseProcedure.html&quot;&gt;CaseProcedure&lt;/a&gt; that can be used for routing elements to different Procedures based on Predicates. The following example demonstrates a solution to the classic &lt;a href=&quot;https://wiki.c2.com/?FizzBuzzTest&quot;&gt;FizzBuzz&lt;/a&gt; problem using forEach with CaseProcedure. To make the code more fun, and easier to read, I have replaced &lt;em&gt;Fizz&lt;/em&gt; with the Soda emoji (ğŸ¥¤), and Buzz with the Bee emojiÂ (ğŸ��).&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void forEachFizzBuzz()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;String&amp;gt; list = Lists.mutable.empty();&lt;br /&gt;    Interval.oneTo(15).forEach(&lt;br /&gt;            new CaseProcedure&amp;lt;Integer&amp;gt;(e -&amp;gt; list.add(e.toString()))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 15 == 0, e -&amp;gt; list.add(&quot;ğŸ¥¤ğŸ��&quot;))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 3 == 0, e -&amp;gt; list.add(&quot;ğŸ¥¤&quot;))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 5 == 0, e -&amp;gt; list.add(&quot;ğŸ��&quot;)));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            list.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;FizzBuzz (ğŸ¥¤ğŸ��) with forEach using an IntCaseProcedure&lt;/h4&gt;&lt;p&gt;In this blog I will occasionally demonstrate how a method works on primitive collections. There is a type &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/list/primitive/IntInterval.html&quot;&gt;IntInterval&lt;/a&gt;, which extends &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/primitive/ImmutableIntList.html&quot;&gt;ImmutableIntList&lt;/a&gt; and defines a forEach method which takes an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/block/procedure/primitive/IntProcedure.html&quot;&gt;IntProcedure&lt;/a&gt; as a parameter. There is also an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/block/procedure/primitive/IntCaseProcedure.html&quot;&gt;IntCaseProcedure&lt;/a&gt; type, which can be used to solve the FizzBuzz problem without boxing any primitive int values as IntegerÂ objects.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void forEachFizzBuzzECPrimitive()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;String&amp;gt; list = Lists.mutable.empty();&lt;br /&gt;    IntInterval.oneTo(15).forEach(&lt;br /&gt;            new IntCaseProcedure(i -&amp;gt; list.add(Integer.toString(i)))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 15 == 0, e -&amp;gt; list.add(&quot;ğŸ¥¤ğŸ��&quot;))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 3 == 0, e -&amp;gt; list.add(&quot;ğŸ¥¤&quot;))&lt;br /&gt;                    .addCase(i -&amp;gt; i % 5 == 0, e -&amp;gt; list.add(&quot;ğŸ��&quot;)));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            list.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Symmetry between object and primitive collections&lt;/h4&gt;&lt;p&gt;There is pretty good symmetry between the object and primitive collections in Eclipse Collections. When we discover an asymmetry in an API, we sometimes work to correct it. Other times we do not. There is a cost/benefit to providing good symmetry. Sometimes the cost is worth the benefit. Sometimes, it is not. In the case of IntCaseProcedure, we thought there was a benefit to providing the same Predicate -&amp;gt; Procedure routing capability for both object and primitive forEach.&lt;/p&gt;&lt;h4&gt;Other forms ofÂ forEach&lt;/h4&gt;&lt;p&gt;There are other forms of forEach available in Eclipse Collections. Any time you see forEach in a method name, there are a common set of traits shared with other forEach methods. These traits are that 1) the return type of forEach is void, and 2) all elements of the collection will beÂ visited.&lt;/p&gt;&lt;p&gt;The following blog has more details and many more examples of forEach and another method named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#injectInto(IV,org.eclipse.collections.api.block.function.Function2)&quot;&gt;injectInto&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/should-you-use-foreach-or-injectinto-in-eclipse-collections-5f7f791022e2&quot;&gt;Should You Use ForEach or InjectInto in Eclipse Collections?&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I will not be covering injectInto in this blog. There is another blog dedicated to injectInto. It demonstrates how injectInto can be used to define many other methods on the Eclipse Collections API.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/ec-by-example-injectinto-923a35c3b0cd&quot;&gt;EC by Example: InjectInto&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Operation: Filter&lt;/h3&gt;&lt;p&gt;There are three methods that you can use to filter data in Eclipse Collections. The methods are &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#select(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;select&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#reject(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;reject&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#partition(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;partition&lt;/a&gt;. Each of these eager methods have covariant overrides on each of the types in the type hierarchy. Most of the eager methods that return some Collection type will have a covariant override in Eclipse Collections. This means if you use &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/MutableList.html#select(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;select&lt;/a&gt; or &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/MutableList.html#reject(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;reject&lt;/a&gt; on a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/MutableList.html&quot;&gt;MutableList&lt;/a&gt;, you get back a MutableList. If you use them on an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/ImmutableList.html&quot;&gt;ImmutableList&lt;/a&gt;, you get back an ImmutableList. &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/MutableSet.html&quot;&gt;MutableSet&lt;/a&gt; will return MutableSet. &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/MutableBag.html&quot;&gt;MutableBag&lt;/a&gt; will return MutableBag. This is one of the many benefits of having eager methods directly on collection types. The collection type knows its type and can determine the best type to return and how to optimize any algorithms.&lt;/p&gt;&lt;p&gt;The method select filters inclusively. This means elements which respond true when the specific Predicate is evaluated will be included in the result collection.&lt;/p&gt;&lt;p&gt;The method reject filters exclusively. This means elements which respond false when the specific Predicate is evaluated will be included in the result collection.&lt;/p&gt;&lt;p&gt;The method partition splits the results into a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/partition/PartitionIterable.html&quot;&gt;PartitionIterable&lt;/a&gt; which contains both selected and rejected elements. The return type for partition will be more specific based on the context type. If partition is called on a MutableList, it will return a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/partition/list/PartitionMutableList.html&quot;&gt;PartitionMutableList&lt;/a&gt;. MutableSet returns a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/partition/set/PartitionMutableSet.html&quot;&gt;PartitionMutableSet&lt;/a&gt;. MutableBag returns a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/partition/bag/PartitionMutableBag.html&quot;&gt;PartitionMutableBag&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;There are other methods that perform filtering, all prefixed with select. For example, there are methods named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#selectInstancesOf(java.lang.Class)&quot;&gt;selectInstancesOf&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/Bag.html#selectByOccurrences(org.eclipse.collections.api.block.predicate.primitive.IntPredicate)&quot;&gt;selectByOccurrences&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/Bag.html#selectUnique()&quot;&gt;selectUnique&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/Bag.html#selectDuplicates()&quot;&gt;selectDuplicates&lt;/a&gt;.&lt;/p&gt;&lt;h4&gt;LegoBrick UseÂ Case&lt;/h4&gt;&lt;p&gt;I built a simple and fun use case to demonstrate filtering and the other remaining collection operations. I am using Java 20 with Java records, Pattern Matching for Switch, Java Text blocks, and Java Enums in this use case. The use case is generating and filtering Lego Bricks. A LegoBrick has a BrickType, Color, and Dimensions. I use emojis to display the topView, side widthView, and side lengthView.&lt;/p&gt;&lt;pre&gt;public enum BrickType&lt;br /&gt;{&lt;br /&gt;    BRICK(Sizes.MULTIPLE),&lt;br /&gt;    PLATE(Sizes.MULTIPLE),&lt;br /&gt;    CORNER_BRICK(Sizes.ONE),&lt;br /&gt;    CORNER_PLATE(Sizes.ONE),&lt;br /&gt;    GRILL(Sizes.MULTIPLE),&lt;br /&gt;    SLOPE_BRICK(Sizes.MULTIPLE),&lt;br /&gt;    SLOPE_BRICK_OUTSIDE_CORNER(Sizes.ONE),&lt;br /&gt;    TILE(Sizes.MULTIPLE),&lt;br /&gt;    PLATE_ROUND(Sizes.MULTIPLE);&lt;br /&gt;&lt;br /&gt;    private Sizes sizes;&lt;br /&gt;&lt;br /&gt;    BrickType(Sizes sizes)&lt;br /&gt;    {&lt;br /&gt;        this.sizes = sizes;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public boolean hasMultipleSizes()&lt;br /&gt;    {&lt;br /&gt;        return this.sizes == Sizes.MULTIPLE;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public enum Sizes&lt;br /&gt;    {&lt;br /&gt;        ONE, MULTIPLE;&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;pre&gt;import org.eclipse.collections.api.factory.Sets;&lt;br /&gt;import org.eclipse.collections.api.set.ImmutableSet;&lt;br /&gt;&lt;br /&gt;public enum Color&lt;br /&gt;{&lt;br /&gt;    RED(&quot;ğŸŸ¥&quot;, &quot;ğŸ”´&quot;),&lt;br /&gt;    YELLOW(&quot;ğŸŸ¨&quot;, &quot;ğŸŸ¡&quot;),&lt;br /&gt;    BLUE(&quot;ğŸŸ¦&quot;, &quot;ğŸ”µ&quot;),&lt;br /&gt;    GREEN(&quot;ğŸŸ©&quot;, &quot;ğŸŸ¢&quot;),&lt;br /&gt;    WHITE(&quot;â¬œï¸�&quot;, &quot;âšªï¸�&quot;),&lt;br /&gt;    BLACK(&quot;â¬›&quot;, &quot;âš«ï¸�&quot;);&lt;br /&gt;&lt;br /&gt;    private static final ImmutableSet&amp;lt;Color&amp;gt; ALL = &lt;br /&gt;        Sets.immutable.with(Color.values());&lt;br /&gt;    private final String square;&lt;br /&gt;    private final String circle;&lt;br /&gt;&lt;br /&gt;    Color(String square, String circle)&lt;br /&gt;    {&lt;br /&gt;        this.square = square;&lt;br /&gt;        this.circle = circle;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public static ImmutableSet&amp;lt;Color&amp;gt; all()&lt;br /&gt;    {&lt;br /&gt;        return ALL;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public String getSquare()&lt;br /&gt;    {&lt;br /&gt;        return square;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public String getCircle()&lt;br /&gt;    {&lt;br /&gt;        return circle;&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;pre&gt;public record Dimensions(int width, int length) &lt;br /&gt;{&lt;br /&gt;}&lt;/pre&gt;&lt;pre&gt;import org.eclipse.collections.api.bag.Bag;&lt;br /&gt;import org.eclipse.collections.api.bag.MutableBag;&lt;br /&gt;import org.eclipse.collections.api.factory.Bags;&lt;br /&gt;import org.eclipse.collections.api.set.SetIterable;&lt;br /&gt;import org.eclipse.collections.impl.factory.Sets;&lt;br /&gt;import org.eclipse.collections.impl.list.primitive.IntInterval;&lt;br /&gt;&lt;br /&gt;public record LegoBrick(BrickType type, Color color, Dimensions dimensions)&lt;br /&gt;{&lt;br /&gt;    public LegoBrick(BrickType type, Color color, int width, int length)&lt;br /&gt;    {&lt;br /&gt;        this(type, color, new Dimensions(width, length));&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public static Bag&amp;lt;LegoBrick&amp;gt; generateMultipleSizedBricks(&lt;br /&gt;        int count, &lt;br /&gt;        SetIterable&amp;lt;Color&amp;gt; colors, &lt;br /&gt;        SetIterable&amp;lt;Dimensions&amp;gt; sizes)&lt;br /&gt;    {&lt;br /&gt;        MutableBag&amp;lt;LegoBrick&amp;gt; bag = Bags.mutable.empty();&lt;br /&gt;        var cartesianProduct = Sets.immutable.with(BrickType.values())&lt;br /&gt;                .select(BrickType::hasMultipleSizes)&lt;br /&gt;                .cartesianProduct(colors);&lt;br /&gt;        cartesianProduct.each(pair -&amp;gt; sizes.forEach(dimensions -&amp;gt;&lt;br /&gt;                bag.addOccurrences(&lt;br /&gt;                    new LegoBrick(pair.getOne(), pair.getTwo(), dimensions), &lt;br /&gt;                    count)));&lt;br /&gt;        return bag;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public String topView()&lt;br /&gt;    {&lt;br /&gt;        return IntInterval.oneTo(this.dimensions.width())&lt;br /&gt;                .collect(i -&amp;gt; this.topViewShape().repeat(this.length()))&lt;br /&gt;                .makeString(System.lineSeparator());&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    private String topViewShape()&lt;br /&gt;    {&lt;br /&gt;        return switch (this.type)&lt;br /&gt;        {&lt;br /&gt;            case TILE, SLOPE_BRICK, SLOPE_BRICK_OUTSIDE_CORNER, GRILL -&amp;gt; &lt;br /&gt;                this.color.getSquare();&lt;br /&gt;            default -&amp;gt; this.color.getCircle();&lt;br /&gt;        };&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    @Override&lt;br /&gt;    public String toString()&lt;br /&gt;    {&lt;br /&gt;        return this.topView();&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public String lengthView()&lt;br /&gt;    {&lt;br /&gt;        return switch (this.type)&lt;br /&gt;        {&lt;br /&gt;            case BRICK -&amp;gt; IntInterval.oneTo(2)&lt;br /&gt;                    .collect(i -&amp;gt; this.sideViewShape().repeat(this.length()))&lt;br /&gt;                    .makeString(System.lineSeparator());&lt;br /&gt;            default -&amp;gt; this.sideViewShape().repeat(this.length());&lt;br /&gt;        };&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public String widthView()&lt;br /&gt;    {&lt;br /&gt;        return switch (this.type)&lt;br /&gt;        {&lt;br /&gt;            case BRICK -&amp;gt; IntInterval.oneTo(2)&lt;br /&gt;                    .collect(i -&amp;gt; this.sideViewShape().repeat(this.width()))&lt;br /&gt;                    .makeString(System.lineSeparator());&lt;br /&gt;            default -&amp;gt; this.sideViewShape().repeat(this.width());&lt;br /&gt;        };&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    private String sideViewShape()&lt;br /&gt;    {&lt;br /&gt;        return this.color.getSquare();&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public int length()&lt;br /&gt;    {&lt;br /&gt;        return this.dimensions.length();&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    public int width()&lt;br /&gt;    {&lt;br /&gt;        return this.dimensions.width();&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;For each code example in the rest of this blog, I will include JUnit tests. The setup code for each of the LegoBrickTest tests is as follows. Each unit test will use the bricks field which is an ImmutableBag&amp;lt;LegoBrick&amp;gt;. The setUp code generates LegoBrick instances for all of the multiple sized BrickType and for all instances of the ColorÂ enum.&lt;/p&gt;&lt;pre&gt;public class LegoBrickTest&lt;br /&gt;{&lt;br /&gt;    private ImmutableBag&amp;lt;LegoBrick&amp;gt; bricks;&lt;br /&gt;&lt;br /&gt;    @BeforeEach&lt;br /&gt;    void setUp()&lt;br /&gt;    {&lt;br /&gt;        ImmutableSet&amp;lt;Dimensions&amp;gt; sizes =&lt;br /&gt;                Sets.immutable.with(&lt;br /&gt;                        new Dimensions(1, 2),&lt;br /&gt;                        new Dimensions(2, 2),&lt;br /&gt;                        new Dimensions(1, 3),&lt;br /&gt;                        new Dimensions(2, 3),&lt;br /&gt;                        new Dimensions(2, 4));&lt;br /&gt;        Bag&amp;lt;LegoBrick&amp;gt; bag =&lt;br /&gt;                LegoBrick.generateMultipleSizedBricks(5, Color.all(), sizes);&lt;br /&gt;        this.bricks = bag.toImmutableBag();&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Examples ofÂ select&lt;/h4&gt;&lt;p&gt;If you want to filter a collection inclusively with a Predicate, use the select method. Hereâ€™s the first example from the LegoBrick class, where I generate and filter LegoBrick instances using select followed by cartesianProduct to combine BrickType withÂ Color.&lt;/p&gt;&lt;pre&gt;public static Bag&amp;lt;LegoBrick&amp;gt; generateMultipleSizedBricks(&lt;br /&gt;    int count, &lt;br /&gt;    SetIterable&amp;lt;Color&amp;gt; colors, &lt;br /&gt;    SetIterable&amp;lt;Dimensions&amp;gt; sizes)&lt;br /&gt;{&lt;br /&gt;    MutableBag&amp;lt;LegoBrick&amp;gt; bag = Bags.mutable.empty();&lt;br /&gt;    var cartesianProduct = Sets.immutable.with(BrickType.values())&lt;br /&gt;            .select(BrickType::hasMultipleSizes)&lt;br /&gt;            .cartesianProduct(colors);&lt;br /&gt;    cartesianProduct.each(pair -&amp;gt; sizes.forEach(dimensions -&amp;gt;&lt;br /&gt;            bag.addOccurrences(&lt;br /&gt;                new LegoBrick(pair.getOne(), pair.getTwo(), dimensions), &lt;br /&gt;                count)));&lt;br /&gt;    return bag;&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;I first create an ImmutableSet&amp;lt;BrickType&amp;gt; using all the values in the BrickType enum. Then I filter inclusively all of the BrickType instances that have multiple sizes using select(BrickType::hasMultipleSizes). The call to &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/SetIterable.html#cartesianProduct(org.eclipse.collections.api.set.SetIterable)&quot;&gt;cartesianProduct&lt;/a&gt; takes the filtered BrickType instances and combines them with all the Color instances. The final each call generates LegoBrick instances for all of the specified Dimensions and the requested count.&lt;/p&gt;&lt;p&gt;The next example uses multiple calls to select, in order to filter a specific set of LegoBrick instances.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectRedPlateBricksWidthTwo()&lt;br /&gt;{&lt;br /&gt;    ImmutableBag&amp;lt;LegoBrick&amp;gt; select =&lt;br /&gt;            this.bricks.select(brick -&amp;gt; brick.width() == 2)&lt;br /&gt;                    .select(brick -&amp;gt; brick.color() == Color.RED)&lt;br /&gt;                    .select(brick -&amp;gt; brick.type() == BrickType.PLATE);&lt;br /&gt;&lt;br /&gt;    MutableSortedSet&amp;lt;LegoBrick&amp;gt; set = &lt;br /&gt;            select.toSortedSetBy(LegoBrick::length);&lt;br /&gt;&lt;br /&gt;    String expectedBricks = &quot;&quot;&quot;&lt;br /&gt;            ğŸ”´ğŸ”´&lt;br /&gt;            ğŸ”´ğŸ”´,&lt;br /&gt;            ğŸ”´ğŸ”´ğŸ”´&lt;br /&gt;            ğŸ”´ğŸ”´ğŸ”´,&lt;br /&gt;            ğŸ”´ğŸ”´ğŸ”´ğŸ”´&lt;br /&gt;            ğŸ”´ğŸ”´ğŸ”´ğŸ”´&quot;&quot;&quot;;&lt;br /&gt;    Assertions.assertEquals(expectedBricks, set.makeString(&quot;,\n&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This code filters out all bricks with width size 2, color RED, that have a BrickType of PLATE. The return result of this is an ImmutableBag&amp;lt;LegoBrick&amp;gt;, which is the same type as the source this.bricks. Since select on ImmutableBag is eager, each call to select here creates a new ImmutableBag. The excess copying could be avoided by either using asLazy, or combining all of the individual select calls into a single Predicate using ands. The following code shows how asLazy can be usedÂ instead.&lt;/p&gt;&lt;pre&gt;LazyIterable&amp;lt;LegoBrick&amp;gt; select =&lt;br /&gt;        this.bricks.asLazy()&lt;br /&gt;                .select(brick -&amp;gt; brick.width() == 2)&lt;br /&gt;                .select(brick -&amp;gt; brick.color() == Color.RED)&lt;br /&gt;                .select(brick -&amp;gt; brick.type() == BrickType.PLATE);&lt;br /&gt;&lt;br /&gt;MutableSortedSet&amp;lt;LegoBrick&amp;gt; set =&lt;br /&gt;        select.toSortedSetBy(LegoBrick::length);&lt;/pre&gt;&lt;p&gt;Notice the return type for select here now returns &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/LazyIterable.html&quot;&gt;LazyIterable&lt;/a&gt;. The code here does not do any computation until the call to &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#toSortedSetBy(org.eclipse.collections.api.block.function.Function)&quot;&gt;toSortedSetBy&lt;/a&gt;.&lt;/p&gt;&lt;h4&gt;Examples ofÂ reject&lt;/h4&gt;&lt;p&gt;If you want to filter a collection exclusively with a Predicate, use the reject method. The following code shows reject being used to exclusively filter some LegoBrick instances.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectTilesAndRejectLessThanLengthFour()&lt;br /&gt;{&lt;br /&gt;    ImmutableBag&amp;lt;LegoBrick&amp;gt; select = this.bricks&lt;br /&gt;            .select(brick -&amp;gt; brick.type() == BrickType.TILE);&lt;br /&gt;    ImmutableBag&amp;lt;LegoBrick&amp;gt; reject = select&lt;br /&gt;            .reject(brick -&amp;gt; brick.length() &amp;lt; 4);&lt;br /&gt;    MutableSortedSet&amp;lt;LegoBrick&amp;gt; bricks =&lt;br /&gt;            reject.toSortedSetBy(LegoBrick::color);&lt;br /&gt;&lt;br /&gt;    String expectedBricks = &quot;&quot;&quot;&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥,&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨,&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦,&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©,&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�,&lt;br /&gt;            â¬›â¬›â¬›â¬›&lt;br /&gt;            â¬›â¬›â¬›â¬›&quot;&quot;&quot;;&lt;br /&gt;    Assertions.assertEquals(expectedBricks, bricks.makeString(&quot;,\n&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;In this code, any LegoBrick instances less than four in length are excluded. The reject method returns an ImmutableBag when called on an ImmutableBag. The reject method is covariantly overridden just likeÂ select.&lt;/p&gt;&lt;p&gt;This code can be made lazy by calling asLazy. Notice what happens to the return type when you call asLazy. The result of the code is the same whether it is done eagerly or lazily. The amount of computation and performance mayÂ differ.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectTilesAndRejectLessThanLengthFour()&lt;br /&gt;{&lt;br /&gt;    LazyIterable&amp;lt;LegoBrick&amp;gt; select = this.bricks.asLazy()&lt;br /&gt;            .select(brick -&amp;gt; brick.type() == BrickType.TILE);&lt;br /&gt;    LazyIterable&amp;lt;LegoBrick&amp;gt; reject = select&lt;br /&gt;            .reject(brick -&amp;gt; brick.length() &amp;lt; 4);&lt;br /&gt;    MutableSortedSet&amp;lt;LegoBrick&amp;gt; bricks =&lt;br /&gt;            reject.toSortedSetBy(LegoBrick::color);&lt;br /&gt;&lt;br /&gt;    String expectedBricks = &quot;&quot;&quot;&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥,&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨,&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦,&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©,&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�,&lt;br /&gt;            â¬›â¬›â¬›â¬›&lt;br /&gt;            â¬›â¬›â¬›â¬›&quot;&quot;&quot;;&lt;br /&gt;    Assertions.assertEquals(expectedBricks, bricks.makeString(&quot;,\n&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Example of partition&lt;/h4&gt;&lt;p&gt;If you want to split a collection based on Predicate, use the method partition. This has the effect of simultaneously filtering inclusively and exclusively in a single pass iteration. Note that partition is a terminal operation and must return a result, so it cannot be accomplished lazily.&lt;/p&gt;&lt;p&gt;The following code shows how to partition LegoBrick instances using a switch expression with two groups of three colorsÂ each.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectRejectPartition()&lt;br /&gt;{&lt;br /&gt;    PartitionMutableSortedSet&amp;lt;LegoBrick&amp;gt; bricks =&lt;br /&gt;            this.bricks.select(brick -&amp;gt; brick.type() == BrickType.TILE)&lt;br /&gt;                    .reject(brick -&amp;gt; brick.length() &amp;lt; 4)&lt;br /&gt;                    .toSortedSetBy(LegoBrick::color)&lt;br /&gt;                    .partition(brick -&amp;gt; switch (brick.color())&lt;br /&gt;                    {&lt;br /&gt;                        case GREEN, WHITE, YELLOW -&amp;gt; true;&lt;br /&gt;                        case BLUE, RED, BLACK -&amp;gt; false;&lt;br /&gt;                    });&lt;br /&gt;&lt;br /&gt;    String selectedBricks = &quot;&quot;&quot;&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨&lt;br /&gt;            ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨,&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©&lt;br /&gt;            ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©,&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�&lt;br /&gt;            â¬œï¸�â¬œï¸�â¬œï¸�â¬œï¸�&quot;&quot;&quot;;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;         selectedBricks, &lt;br /&gt;         bricks.getSelected().makeString(&quot;,\n&quot;));&lt;br /&gt;&lt;br /&gt;    String rejectedBricks = &quot;&quot;&quot;&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥&lt;br /&gt;            ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥,&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦&lt;br /&gt;            ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦,&lt;br /&gt;            â¬›â¬›â¬›â¬›&lt;br /&gt;            â¬›â¬›â¬›â¬›&quot;&quot;&quot;;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;         rejectedBricks, &lt;br /&gt;         bricks.getRejected().makeString(&quot;,\n&quot;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The return type of the method partition is covariant. So for the MutableSortedSet that is returned by toSortedSetBy, the method partition retuns a PartitionMutableSortedSet. Every PartitionIterable subtype has getSelected and getRejected methods which are also covariant.&lt;/p&gt;&lt;p&gt;Iâ€™ve covered several forms of filtering using Eclipse Collections. You can find more examples of filtering in the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/ec-by-example-filtering-4f14b906f718&quot;&gt;EC by Example: Filtering&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The following blog has additional examples about partitioning.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/ec-by-example-partitioning-d2704f826e66&quot;&gt;EC by Example: Partitioning&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Operation: Transform&lt;/h3&gt;&lt;p&gt;The method name for a transformation operation in Eclipse Collections is &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#toSortedSetBy(org.eclipse.collections.api.block.function.Function)&quot;&gt;collect&lt;/a&gt;. In Java Streams, the equivalent method name is map. The method collect takes a Function as a parameter and will transform one type (e.g. Integer) to another type (e.g. String). Iâ€™m going to start off by showing how to use collect to solve the &lt;a href=&quot;https://wiki.c2.com/?FizzBuzzTest&quot;&gt;FizzBuzz&lt;/a&gt; problem I solved earlier in this blog withÂ forEach.&lt;/p&gt;&lt;h4&gt;FizzBuzz (ğŸ¥¤ğŸ��) with collect using CaseFunction&lt;/h4&gt;&lt;p&gt;FizzBuzz is a transformation problem. You need to convert a range of 100 int values to String values. The result for each int will depend on if it is divisible by 3, divisible by 5, divisible by both 3 and 5, or divisible by neither. The following code example shows how to use a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/block/function/CaseFunction.html&quot;&gt;CaseFunction&lt;/a&gt; with the collect method on an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/list/Interval.html&quot;&gt;Interval&lt;/a&gt; to solve the FizzBuzzÂ problem.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectFizzBuzz()&lt;br /&gt;{&lt;br /&gt;    LazyIterable&amp;lt;String&amp;gt; iterable = Interval.oneTo(15)&lt;br /&gt;            .collect(new CaseFunction&amp;lt;Integer, String&amp;gt;(Object::toString)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 15 == 0, e -&amp;gt; &quot;ğŸ¥¤ğŸ��&quot;)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 3 == 0, e -&amp;gt; &quot;ğŸ¥¤&quot;)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 5 == 0, e -&amp;gt; &quot;ğŸ��&quot;));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            iterable.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The collect method on Interval is lazy, and it returns LazyIterable.&lt;/p&gt;&lt;h4&gt;FizzBuzz (ğŸ¥¤ğŸ��) with collect using IntCaseFunction&lt;/h4&gt;&lt;p&gt;The following code example shows how to use a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/block/function/primitive/IntCaseFunction.html&quot;&gt;IntCaseFunction&lt;/a&gt; with the collect method on an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/list/primitive/IntInterval.html&quot;&gt;IntInterval&lt;/a&gt; to solve the FizzBuzzÂ problem.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectFizzBuzz()&lt;br /&gt;{&lt;br /&gt;    ImmutableList&amp;lt;String&amp;gt; list = IntInterval.oneTo(15)&lt;br /&gt;            .collect(new IntCaseFunction&amp;lt;&amp;gt;(Integer::toString)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 15 == 0, e -&amp;gt; &quot;ğŸ¥¤ğŸ��&quot;)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 3 == 0, e -&amp;gt; &quot;ğŸ¥¤&quot;)&lt;br /&gt;                    .addCase(i -&amp;gt; i % 5 == 0, e -&amp;gt; &quot;ğŸ��&quot;));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            list.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Notice that the collect method on IntInterval is eager, and it returns an ImmutableList. This difference between Interval and IntInterval was an evolutionary design decision. Interval was created well before Eclipse Collections had &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html&quot;&gt;ImmutableCollection&lt;/a&gt; and primitive collection types. We wanted Interval to have a rich set of methods like the other &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html&quot;&gt;MutableCollection&lt;/a&gt; types at the time, without implementing those types directly, as it is an immutable type.&lt;/p&gt;&lt;h4&gt;FizzBuzz (ğŸ¥¤ğŸ��) with collect using Pattern Matching forÂ Switch&lt;/h4&gt;&lt;p&gt;Since I am using Java 20 to compile and run the code examples in this blog, I thought it would be interesting to share another example of Pattern Matching for Switch. I learned how to solve FizzBuzz using this approach from &lt;a href=&quot;https://medium.com/u/7db07b72520d&quot;&gt;Vladimir Zakharov&lt;/a&gt; who &lt;a href=&quot;https://twitter.com/zakhav/status/1647780861494820866&quot;&gt;tweeted&lt;/a&gt; a similar solution using IntStream.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectFizzBuzzUsingPatternMatchingForSwitch()&lt;br /&gt;{&lt;br /&gt;    ImmutableList&amp;lt;String&amp;gt; list = IntInterval.oneTo(15)&lt;br /&gt;            .collect(each -&amp;gt; switch ((Integer) each)&lt;br /&gt;            {&lt;br /&gt;                case Integer j when j % 15 == 0 -&amp;gt; &quot;ğŸ¥¤ğŸ��&quot;;&lt;br /&gt;                case Integer j when j % 3 == 0 -&amp;gt; &quot;ğŸ¥¤&quot;;&lt;br /&gt;                case Integer j when j % 5 == 0 -&amp;gt; &quot;ğŸ��&quot;;&lt;br /&gt;                default -&amp;gt; String.valueOf(each);&lt;br /&gt;            });&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            list.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This was the first example I have tried where I used the when clause in a switch expression. There is a clever trick that Vlad came up with here, which was the cast the int value named each to Integer in the switch so it could be matched in each case. The code for this winds up being slightly simpler using Interval, which already has boxed Integer values, so doesnâ€™t require a cast in theÂ switch.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectFizzBuzzUsingPatternMatchingForSwitch()&lt;br /&gt;{&lt;br /&gt;    LazyIterable&amp;lt;Object&amp;gt; list = Interval.oneTo(15)&lt;br /&gt;            .collect(each -&amp;gt; switch (each)&lt;br /&gt;            {&lt;br /&gt;                case Integer j when j % 15 == 0 -&amp;gt; &quot;ğŸ¥¤ğŸ��&quot;;&lt;br /&gt;                case Integer j when j % 3 == 0 -&amp;gt; &quot;ğŸ¥¤&quot;;&lt;br /&gt;                case Integer j when j % 5 == 0 -&amp;gt; &quot;ğŸ��&quot;;&lt;br /&gt;                default -&amp;gt; String.valueOf(each);&lt;br /&gt;            });&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            &quot;1, 2, ğŸ¥¤, 4, ğŸ��, ğŸ¥¤, 7, 8, ğŸ¥¤, ğŸ��, 11, ğŸ¥¤, 13, 14, ğŸ¥¤ğŸ��&quot;,&lt;br /&gt;            list.makeString());&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Examples of collect with LegoBrick useÂ case&lt;/h4&gt;&lt;p&gt;Now that I have solved FizzBuzz with forEach and collect, letâ€™s move on to using collect with the LegoBrick useÂ case.&lt;/p&gt;&lt;p&gt;This is the field and setup code for the source collection we built in the LegoBrickTest. The type the bricks are stored in is an ImmutableBag&amp;lt;LegoBrick&amp;gt;.&lt;/p&gt;&lt;pre&gt;private ImmutableBag&amp;lt;LegoBrick&amp;gt; bricks;&lt;br /&gt;&lt;br /&gt;@BeforeEach&lt;br /&gt;void setUp()&lt;br /&gt;{&lt;br /&gt;    ImmutableSet&amp;lt;Dimensions&amp;gt; sizes = Sets.immutable.with(&lt;br /&gt;            new Dimensions(1, 2),&lt;br /&gt;            new Dimensions(2, 2),&lt;br /&gt;            new Dimensions(1, 3),&lt;br /&gt;            new Dimensions(2, 3),&lt;br /&gt;            new Dimensions(2, 4));&lt;br /&gt;&lt;br /&gt;    Bag&amp;lt;LegoBrick&amp;gt; bag = &lt;br /&gt;        LegoBrick.generateMultipleSizedBricks(5, Color.all(), sizes);&lt;br /&gt;&lt;br /&gt;    this.bricks = bag.toImmutableBag();&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The first thing I will do with the bricks is collect all of the colors of the bricks. ImmutableBag allows duplicate instances, so there will be duplicate Color instances.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectColors()&lt;br /&gt;{&lt;br /&gt;    ImmutableBag&amp;lt;Color&amp;gt; colors =&lt;br /&gt;            this.bricks.collect(LegoBrick::color);&lt;br /&gt;&lt;br /&gt;    MutableBag&amp;lt;Color&amp;gt; expected = Bags.mutable.empty();&lt;br /&gt;    expected.addOccurrences(Color.BLUE, 150);&lt;br /&gt;    expected.addOccurrences(Color.BLACK, 150);&lt;br /&gt;    expected.addOccurrences(Color.GREEN, 150);&lt;br /&gt;    expected.addOccurrences(Color.WHITE, 150);&lt;br /&gt;    expected.addOccurrences(Color.YELLOW, 150);&lt;br /&gt;    expected.addOccurrences(Color.RED, 150);&lt;br /&gt;    Assertions.assertEquals(expected, colors);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The collect method is eager and covariant on an ImmutableBag and the return result is an ImmutableBag&amp;lt;Color&amp;gt;. A Bag is very useful for counting, and we can see based on the LegoBrick instances we created there are 150 bricks of eachÂ Color.&lt;/p&gt;&lt;p&gt;We can also collect all of the Dimensions of theÂ bricks.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectDimensions()&lt;br /&gt;{&lt;br /&gt;    ImmutableBag&amp;lt;Dimensions&amp;gt; dimensions =&lt;br /&gt;            this.bricks.collect(LegoBrick::dimensions);&lt;br /&gt;&lt;br /&gt;    MutableBag&amp;lt;Dimensions&amp;gt; expected = Bags.mutable.empty();&lt;br /&gt;    expected.addOccurrences(new Dimensions(1, 3), 180);&lt;br /&gt;    expected.addOccurrences(new Dimensions(1, 2), 180);&lt;br /&gt;    expected.addOccurrences(new Dimensions(2, 2), 180);&lt;br /&gt;    expected.addOccurrences(new Dimensions(2, 3), 180);&lt;br /&gt;    expected.addOccurrences(new Dimensions(2, 4), 180);&lt;br /&gt;    Assertions.assertEquals(expected, dimensions);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;There are 5 unique Dimensions that were generated, with a count of 180 ofÂ each.&lt;/p&gt;&lt;p&gt;The final transformation using collect I will demonstrate will be converting from an Object type to a primitive type.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectWidthTimesLength()&lt;br /&gt;{&lt;br /&gt;    ImmutableIntBag dimensions =&lt;br /&gt;            this.bricks.collectInt(each -&amp;gt; each.width() * each.length());&lt;br /&gt;&lt;br /&gt;    MutableIntBag expected = IntBags.mutable.empty();&lt;br /&gt;    expected.addOccurrences(2, 180);&lt;br /&gt;    expected.addOccurrences(3, 180);&lt;br /&gt;    expected.addOccurrences(4, 180);&lt;br /&gt;    expected.addOccurrences(6, 180);&lt;br /&gt;    expected.addOccurrences(8, 180);&lt;br /&gt;    Assertions.assertEquals(expected, dimensions);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;In this code I used a method named collectInt to transform each LegoBrick to its width() * length(). There are primitive forms of collect for every primitive type (boolean, byte, char, short, int, float, long, double)Â . Each primitive form return type is also covariant, so you will notice the return type for collectInt on an ImmutableBag&amp;lt;LegoBrick&amp;gt; is an ImmutableIntBag.&lt;/p&gt;&lt;p&gt;There are a large number of possible variations for return types for collect, if a target collection is used as a second parameter with the available method overloads.&lt;/p&gt;&lt;p&gt;For example, I can collect the Dimensions from each LegoBrick instance in the ImmutableBag&amp;lt;LegoBrick&amp;gt; into an empty MutableSet&amp;lt;Dimensions&amp;gt;.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectDimensionsToTargetSet()&lt;br /&gt;{&lt;br /&gt;    MutableSet&amp;lt;Dimensions&amp;gt; dimensions =&lt;br /&gt;            this.bricks.collect(&lt;br /&gt;                    LegoBrick::dimensions,&lt;br /&gt;                    Sets.mutable.empty());&lt;br /&gt;&lt;br /&gt;    Set&amp;lt;Dimensions&amp;gt; expected = Sets.mutable.with(&lt;br /&gt;            new Dimensions(1, 3),&lt;br /&gt;            new Dimensions(1, 2),&lt;br /&gt;            new Dimensions(2, 2),&lt;br /&gt;            new Dimensions(2, 3),&lt;br /&gt;            new Dimensions(2, 4));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(expected, dimensions);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Here we can see there are 5 unique dimensions as the expectedÂ result.&lt;/p&gt;&lt;p&gt;Method overloads with target collection parameters are also available for the primitive collect methods. I can collect the width() * length() results from each LegoBrick instance in the ImmutableBag&amp;lt;LegoBrick&amp;gt; to an empty MutableIntSet.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectWidthTimesLengthToTargetSet()&lt;br /&gt;{&lt;br /&gt;    MutableIntSet dimensions =&lt;br /&gt;            this.bricks.collectInt(&lt;br /&gt;                    each -&amp;gt; each.width() * each.length(),&lt;br /&gt;                    IntSets.mutable.empty());&lt;br /&gt;&lt;br /&gt;    MutableIntSet expected = IntSets.mutable.with(2, 3, 4, 6, 8);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(expected, dimensions);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Iâ€™ve covered a number of ways to transform using variations of collect. There is a special form of collect which combines filtering with transforming and the method is named collectIf. I blog about collectIf and some more examples of collect in the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/ec-by-example-collect-262a46030c49&quot;&gt;EC by Example: Collect&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Operation: Find&lt;/h3&gt;&lt;p&gt;The method for finding an element of a collection matching a Predicate in Eclipse Collections is &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#detect(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;detect&lt;/a&gt;. There are forms of detect that handle situations where there are no matching elements. For these kinds of situations, there are methods named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#detectIfNone(org.eclipse.collections.api.block.predicate.Predicate,org.eclipse.collections.api.block.function.Function0)&quot;&gt;detectIfNone&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#detectOptional(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;detectOptional&lt;/a&gt;.&lt;/p&gt;&lt;h4&gt;Examples usingÂ detect&lt;/h4&gt;&lt;p&gt;The following examples demonstrate using detect where an element is found that matches the Predicate, and where no element isÂ found.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void detect()&lt;br /&gt;{&lt;br /&gt;    LegoBrick detect =&lt;br /&gt;            this.bricks.detect(brick -&amp;gt; brick.width() == 1);&lt;br /&gt;    Assertions.assertNotNull(detect);&lt;br /&gt;&lt;br /&gt;    LegoBrick detectMissing =&lt;br /&gt;            this.bricks.detect(brick -&amp;gt; brick.width() == 5);&lt;br /&gt;    Assertions.assertNull(detectMissing);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;As can be seen above, detect returns null if there is noÂ match.&lt;/p&gt;&lt;h4&gt;Examples using detectIfNone&lt;/h4&gt;&lt;p&gt;The method detectIfNone takes a Predicate and a Function0 as parameters. If no element is found matching the Predicate, the Function0 is evaluated and the result is returnedÂ instead.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void detectIfNone()&lt;br /&gt;{&lt;br /&gt;    LegoBrick detect =&lt;br /&gt;            this.bricks.detectIfNone(&lt;br /&gt;                    brick -&amp;gt; brick.width() == 1,&lt;br /&gt;                    () -&amp;gt; new LegoBrick(BrickType.BRICK, Color.RED, 1, 1));&lt;br /&gt;&lt;br /&gt;    Assertions.assertNotNull(detect);&lt;br /&gt;    Assertions.assertNotEquals(&lt;br /&gt;            new LegoBrick(BrickType.BRICK, Color.RED, 1, 1),&lt;br /&gt;            detect);&lt;br /&gt;&lt;br /&gt;    LegoBrick detectMissing =&lt;br /&gt;            this.bricks.detectIfNone(&lt;br /&gt;                    brick -&amp;gt; brick.width() == 5,&lt;br /&gt;                    () -&amp;gt; new LegoBrick(BrickType.BRICK, Color.RED, 1, 1));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(&lt;br /&gt;            new LegoBrick(BrickType.BRICK, Color.RED, 1, 1),&lt;br /&gt;            detectMissing);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Examples using detectOptional&lt;/h4&gt;&lt;p&gt;The method detectOptional takes a Predicate and returns an Optional. I generally prefer detectIfNone to this method, but this was added for developers who prefer to use Optional coding patterns.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void detectOptional()&lt;br /&gt;{&lt;br /&gt;    Optional&amp;lt;LegoBrick&amp;gt; detectOptionalFound =&lt;br /&gt;            this.bricks.detectOptional(brick -&amp;gt; brick.width() == 1);&lt;br /&gt;&lt;br /&gt;    Assertions.assertTrue(detectOptionalFound.isPresent());&lt;br /&gt;    Assertions.assertFalse(detectOptionalFound.isEmpty());&lt;br /&gt;&lt;br /&gt;    Optional&amp;lt;LegoBrick&amp;gt; detectOptionalMissing =&lt;br /&gt;            this.bricks.detectOptional(brick -&amp;gt; brick.width() == 5);&lt;br /&gt;&lt;br /&gt;    Assertions.assertFalse(detectOptionalMissing.isPresent());&lt;br /&gt;    Assertions.assertTrue(detectOptionalMissing.isEmpty());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Operation: Test&lt;/h3&gt;&lt;p&gt;Sometimes it is useful to test whether &lt;em&gt;any&lt;/em&gt;, &lt;em&gt;all&lt;/em&gt; or &lt;em&gt;none&lt;/em&gt; of the elements of a collection match the conditions of a Predicate. In Eclipse Collections, the methods that support this testing functionality are named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#anySatisfy(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;anySatisfy&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#allSatisfy(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;allSatisfy&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#noneSatisfy(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;noneSatisfy&lt;/a&gt;. All three are terminal operations and execute eagerly because their return result isÂ boolean.&lt;/p&gt;&lt;h4&gt;Examples of anySatisfy&lt;/h4&gt;&lt;p&gt;The method anySatisfy will answer true if &lt;em&gt;any&lt;/em&gt; element of the collection satisfies a given condition. The condition is specified in the form of a Predicate.&lt;/p&gt;&lt;p&gt;The following example tests to see if any bricks match the specified circleÂ colors.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void anySatisfy()&lt;br /&gt;{&lt;br /&gt;    boolean anySatisfy1 =&lt;br /&gt;            this.bricks.anySatisfy(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸ”´&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertTrue(anySatisfy1);&lt;br /&gt;&lt;br /&gt;    boolean anySatisfy2 =&lt;br /&gt;            this.bricks.anySatisfy(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸŸ£&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertFalse(anySatisfy2);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Examples of allSatisfy&lt;/h4&gt;&lt;p&gt;The method allSatisfy will answer true if &lt;em&gt;all&lt;/em&gt; elements of the collection satisfy a given condition. The condition is specified in the form of a Predicate.&lt;/p&gt;&lt;p&gt;The following example tests to see if all bricks have a color in the two specified colorÂ sets.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void allSatisfy()&lt;br /&gt;{&lt;br /&gt;    String colors1 = &quot;ğŸ”´ğŸŸ¡ğŸ”µğŸŸ¢âšªï¸�âš«ï¸�&quot;;&lt;br /&gt;    String colors2 = &quot;ğŸ”´ğŸŸ¡ğŸ”µ&quot;;&lt;br /&gt;&lt;br /&gt;    boolean allSatisfy1 =&lt;br /&gt;            this.bricks.allSatisfy(&lt;br /&gt;                    each -&amp;gt; colors1.contains(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertTrue(allSatisfy1);&lt;br /&gt;&lt;br /&gt;    boolean allSatisfy2 =&lt;br /&gt;            this.bricks.allSatisfy(&lt;br /&gt;                    each -&amp;gt; colors2.contains(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertFalse(allSatisfy2);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Examples of noneSatisfy&lt;/h4&gt;&lt;p&gt;The method noneSatisfy will answer true if &lt;em&gt;none&lt;/em&gt; of the elements of the collection satisfy a given condition. The condition is specified in the form of a Predicate.&lt;/p&gt;&lt;p&gt;The following example tests to see if none of the bricks match the specified circleÂ colors.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void noneSatisfy()&lt;br /&gt;{&lt;br /&gt;    boolean noneSatisfy1 =&lt;br /&gt;            this.bricks.noneSatisfy(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸ”´&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertFalse(noneSatisfy1);&lt;br /&gt;&lt;br /&gt;    boolean noneSatisfy2 =&lt;br /&gt;            this.bricks.noneSatisfy(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸŸ£&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertTrue(noneSatisfy2);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Operation: Count&lt;/h3&gt;&lt;p&gt;The method named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#count(org.eclipse.collections.api.block.predicate.Predicate)&quot;&gt;count&lt;/a&gt;, returns an int value representing the total number of elements that return true when evaluating a specified Predicate. There is also a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html#countBy(org.eclipse.collections.api.block.function.Function)&quot;&gt;countBy&lt;/a&gt; method which counts elements and groups them by some specified Function.&lt;/p&gt;&lt;h4&gt;Example ofÂ count&lt;/h4&gt;&lt;p&gt;The following example counts the number of elements that match the specified circleÂ colors.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void count()&lt;br /&gt;{&lt;br /&gt;    int count1 =&lt;br /&gt;            this.bricks.count(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸ”´&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(150, count1);&lt;br /&gt;&lt;br /&gt;    int count2 =&lt;br /&gt;            this.bricks.count(&lt;br /&gt;                    each -&amp;gt; &quot;ğŸŸ£&quot;.equals(each.color().getCircle()));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(0, count2);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Example ofÂ countBy&lt;/h4&gt;&lt;p&gt;The following example counts the number of elements by each circleÂ color.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void countBy()&lt;br /&gt;{&lt;br /&gt;    ImmutableBag&amp;lt;String&amp;gt; countBy =&lt;br /&gt;            this.bricks.countBy(each -&amp;gt; each.color().getCircle());&lt;br /&gt;&lt;br /&gt;    MutableBag&amp;lt;String&amp;gt; expected = Bags.mutable.empty();&lt;br /&gt;    expected.addOccurrences(&quot;ğŸ”µ&quot;, 150);&lt;br /&gt;    expected.addOccurrences(&quot;ğŸŸ¢&quot;, 150);&lt;br /&gt;    expected.addOccurrences(&quot;ğŸŸ¡&quot;, 150);&lt;br /&gt;    expected.addOccurrences(&quot;âšªï¸�&quot;, 150);&lt;br /&gt;    expected.addOccurrences(&quot;ğŸ”´&quot;, 150);&lt;br /&gt;    expected.addOccurrences(&quot;âš«ï¸�&quot;, 150);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(expected, countBy);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#ca2e&quot;&gt;Back to SectionÂ Links&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;This series will help you getÂ started&lt;/h3&gt;&lt;p&gt;In this four part series, I have introduced topics that will help any developer get started using Eclipse Collections. There is a lot more to learn about using Eclipse Collections. Eclipse Collections has been evolving for almost two decades, and has had features added to meet the needs of production use cases in many Financial Services applications and other application domains. Some developers use Eclipse Collections for the performance optimization and primitive collections. Others use it for the fluent and functional API. Others use it for non-standard collection types like Bag, Multimap, and BiMap. There are many reasons to use Eclipse Collections in an application.&lt;/p&gt;&lt;p&gt;Thank you for reading this blog series. I hope you find this Getting Started series helpful. I hope it will be a good reference for your application development needs with Eclipse Collections. If youâ€™d like to learn more about what Eclipse Collections contains that you will not find in the JDK, then check out the following blogÂ series.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2&quot;&gt;Blog Series: The missing Java data structures no one ever told you about&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a72eb23cce0e&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 05 May 2023 13:47:51 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: Xtext job</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-6332295228613738575</guid>
	<link>http://javaclipse.blogspot.com/2023/04/xtext-job.html</link>
	<description>&lt;p&gt; Do you want to have...&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a very challenging and never boring job on an extreme complex piece of software?&lt;/li&gt;&lt;li&gt;agile and intercultural working environment in Germany?&lt;/li&gt;&lt;li&gt;work for a &lt;b&gt;real&lt;/b&gt; high-tech company (we build semiconductor test hardware to test chips from tomorrow for almost all chip companies on the world)?&lt;/li&gt;&lt;li&gt;a top notch RHEL workstation with 256 GB RAM, SSD and 16 core Xeon?&lt;/li&gt;&lt;li&gt;a recent Thinkpad of your choice?&lt;/li&gt;&lt;li&gt;possibility to work 50% or more in home office?&lt;/li&gt;&lt;li&gt;not only good salary but also other benefits?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://advantest-career.de/en/ueber-uns/&quot;&gt;We&lt;/a&gt; (&lt;a href=&quot;https://www.advantest.com/about/offices/aeg.html&quot;&gt;Advantest Europe GmbH&lt;/a&gt;) are hiring! We are the leader in semiconductor testing industry and also in the top 10 employees in the IT industry in Germany (see &lt;a href=&quot;https://www.kununu.com/de/advantest-europe-gmbh&quot;&gt;our Kununu profile&lt;/a&gt;).&lt;/p&gt;&lt;div&gt;&lt;br /&gt;I have &lt;a href=&quot;https://recruiting.adp.com/srccar/public/nghome.guid?c=2168307&amp;amp;d=External&amp;amp;prc=RMPOD4&amp;amp;r=5000945485006&amp;amp;from_login=1&quot; target=&quot;_blank&quot;&gt;1 open job position for &lt;b&gt;Eclipse/Xtext&lt;/b&gt; developer&lt;/a&gt; in my team in &lt;a href=&quot;https://goo.gl/maps/FgrdmJnCh8T2&quot;&gt;our main office&lt;/a&gt; in BÃ¶blingen (and of course we have &lt;a href=&quot;https://recruiting.adp.com/srccar/public/RTI.home?c=2168307&amp;amp;d=External&quot; target=&quot;_blank&quot;&gt;way more other job offers&lt;/a&gt;).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;The main job focus is &lt;a href=&quot;https://www.eclipse.org/Xtext/&quot;&gt;Xtext&lt;/a&gt; support in house in the context of the very complex, Eclipse based IDE, used as the front end for the semiconductor tester. Other responsibility will be helping with the &lt;a href=&quot;https://www.eclipse.org/Xtext/&quot;&gt;Xtext project&lt;/a&gt; maintenance in general (bug fixes, releng jobs etc).&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;What do we want from you?&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;You should have a proven Xtext development experience&lt;/li&gt;&lt;li&gt;You should be able to mentor other engineers in all Xtext related areas&lt;/li&gt;&lt;li&gt;You should be able to express yourself very good (both spoken/written) in English or German&lt;/li&gt;&lt;li&gt;You should have fun reading thread dumps and debugging unknown code&lt;/li&gt;&lt;li&gt;You should have very good both computer science education and core Java knowledge&lt;/li&gt;&lt;li&gt;Ideally you should have experience with open source projects development&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;The position is in my team, I will be your team lead.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;We speak English (main job language), German, Java and few other languages here. &lt;/div&gt;&lt;div&gt;If you are interested, just drop me a mail.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 26 Apr 2023 08:40:30 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation publishes its study about Open Services Cloud</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-publishes-its-study-about-open-services-cloud</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-publishes-its-study-about-open-services-cloud</link>
	<description>&lt;p&gt;&lt;strong&gt;BRUSSELS, Belgium – April 24th, 2023 – &lt;/strong&gt;The Eclipse Foundation, one of the world’s largest open source software foundations, today published its study about Cloud Interoperability to foster the European Digital Market. The report provides an analysis of the current market of the European cloud services ecosystem and perspectives:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To unlock the cloud industry,&lt;/li&gt;
	&lt;li&gt;To ease current digital market limitations, &lt;/li&gt;
	&lt;li&gt;To simplify the complexity behind managed cloud services usage, &lt;/li&gt;
	&lt;li&gt;And to open new opportunities for all: users, developers, and service providers. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As part of this publication, the Eclipse Foundation will be hosting a launch event on April 25th at 1:30 PM CEST in Brussels, open to all parties interested in contributing to an open cloud ecosystem. Registration and more information on this event can be found here: &lt;a href=&quot;https://events.eclipse.org/2023/unlockthecloud/&quot;&gt;https://events.eclipse.org/2023/unlockthecloud/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“EU participants are grossly underrepresented in today's cloud ecosystem. This new open source industry collaboration will level the playing field and enable Europe to not only fully embrace the cloud, but build its own innovative industry,” said Mike Milinkovich, executive director, the Eclipse Foundation. “As one of the critical ingredients to growth for multiple industries underpinning the EU’s economy, growing the region’s leadership in the cloud ecosystem will be the foundation for the future economic prosperity of Europe.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building cloud interoperability with the Open Services Cloud&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Having reached nearly €190B in 2022, the European cloud services market is growing rapidly. It drives many of the 14 strategic industrial ecosystems defined in the 2021 &lt;a href=&quot;https://commission.europa.eu/strategy-and-policy/priorities-2019-2024/europe-fit-digital-age/european-industrial-strategy_en#:~:text=Europe%20is%20embarking%20on%20a,we%20enter%20this%20new%20age.&quot;&gt;EU industrial strategy&lt;/a&gt; and is forecasted to grow at an annual rate of 13% over the next decade.&lt;/p&gt;

&lt;p&gt;Despite this compelling growth, the European cloud ecosystem is still limited in its ability to expand. To increase balance and boost cloud consumer purchasing power in the European market, the study introduces how Open Services Cloud platform brings three core innovations to streamline the process of using multiple clouds: a descriptive configuration language, a management portal, and a portable services and data solution. &lt;/p&gt;

&lt;p&gt;The Open Services Cloud levels the playing field between cloud users and CSPs and ISVs. Especially beneficial to smaller businesses and start-ups, the Open Services Cloud opens the door for the emergence of a stronger European ecosystem of cloud service industry.&lt;/p&gt;

&lt;p&gt;On April 25th, we will be hosting an in-person event in Brussels where you will learn from industry leaders, discover the results of our new study on cloud interoperability, and find out more about where the EU Data Act and the Digital Markets Act are heading when it comes to European cloud services. Register &lt;a href=&quot;https://events.eclipse.org/2023/unlockthecloud/&quot;&gt;here&lt;/a&gt; to participate. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;

&lt;p&gt;514 Media Ltd for the Eclipse Foundation, AISBL (France, Italy, Spain)&lt;/p&gt;

&lt;p&gt;Benoit Simoneau&lt;/p&gt;

&lt;p&gt;benoit@514-media.com&lt;/p&gt;

&lt;p&gt;M: +44 (0) 7891 920 370&lt;/p&gt;</description>
	<pubDate>Mon, 24 Apr 2023 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Manoj N Palat: Eclipse IDE – What the future Holds!</title>
	<guid isPermaLink="false">http://eclipseide100.wordpress.com/?p=9</guid>
	<link>https://eclipseide100.wordpress.com/2023/04/20/eclipse-ide-what-the-future-holds/</link>
	<description>&lt;p&gt;The Eclipse IDE Working Group Steering Committee recently discussed the&lt;a href=&quot;https://www.linkedin.com/posts/eclipse-foundation_eclipseide-eclipse-software-activity-7049022504144621568-hC5U?utm_source=share&amp;amp;utm_medium=member_desktop&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; future of the Eclipse IDE&lt;/a&gt; — Many of you must have seen this&lt;a href=&quot;https://www.linkedin.com/posts/eclipse-foundation_eclipseide-eclipse-software-activity-7049022504144621568-hC5U?utm_source=share&amp;amp;utm_medium=member_desktop&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; LinkedIn post&lt;/a&gt;. Stakeholders from different companies met in Frankfurt to discuss the way forward for the Eclipse IDE&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://eclipseide100.files.wordpress.com/2023/04/caba2-0tn-rhz9xnq6xnrwj.png&quot; /&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Eclipse IDE WG stakeholders at Yatta&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;The stakeholders included a variety of roles — customers, partners, developers, founders, evangelists and more. This was not just a discussion,they came prepared with ideas on how the Eclipse IDE could evolve in the near and far future — and brainstormed how to get there.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://eclipseide100.files.wordpress.com/2023/04/98fae-0o4e1bunkh9nqwyfl.png&quot; /&gt;&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Eclipse IDE Splash Screen 2023–06&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;Aren’t you curious to find out what happened in that room? What did they discuss? What is the vision of the &lt;strong&gt;Eclipse IDE Working Group&lt;/strong&gt;?&lt;/p&gt;



&lt;p&gt;They are planning to let you in on all of it.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;On April 26th, 12:00 UTC — Come be a part of Eclipse!&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Join Zoom Meeting&lt;br /&gt;&lt;a href=&quot;https://eclipse.zoom.us/j/82041269789?pwd=M1Jpaysrd1Y2R3RQOFZtTnk3bGtjUT09&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://eclipse.zoom.us/j/82041269789?pwd=M1Jpaysrd1Y2R3RQOFZtTnk3bGtjUT09&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Meeting ID: 820 4126 9789&lt;br /&gt;Passcode: 875753&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://medium.com/tag/eclipse-ide?source=post_page-----4d9686ecc688---------------eclipse_ide-----------------&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 20 Apr 2023 04:45:41 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Open Letter to the European Commission on the Cyber Resilience Act</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/open-letter-european-commission-cyber-resilience-act</guid>
	<link>https://newsroom.eclipse.org/news/announcements/open-letter-european-commission-cyber-resilience-act</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Dear Members of the European Parliament,&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Dear Representatives to the Council of the European Union,&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We, the undersigned, represent leading governance institutions within the European and global open source software community. We write to express our concern that the greater open source community has been underrepresented during the development of the Cyber Resilience Act (CRA) to date and wish to ensure this is remedied throughout the co-legislative process by lending our support.&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Open source software (OSS) represents more than 70% of the software present in products with digital elements in Europe. Yet, our community does not have the benefit of an established relationship with the co-legislators. The software and other technical artefacts produced by us are unprecedented in their contribution to the technology industry along with our digital sovereignty and associated economic benefits on many levels. With the CRA, more than 70% of the software in Europe is about to be regulated without an in-depth consultation. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As acknowledged in the EU’s Open Source Software Strategy 2020-2023, open source software plays a critical role in the digital economy, powering everything from cloud infrastructure to mobile applications to public transportation systems. In Europe alone, we represent about &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;€&lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;100 billion in economic impact. It is therefore essential that any legislation that impacts the software industry takes into account the unique needs and perspectives of open source software, as well as our modern methodologies used to create software.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We deeply share the CRA’s aim to improve the cybersecurity of digital products and services in the EU and embrace the urgent need to protect citizens and economies by improving software security.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;However, our voices and expertise should be heard and have an opportunity to inform public authorities' decisions. If the CRA is, in fact, implemented as written, it will have a chilling effect on open source software development as a global endeavour, with the net effect of undermining the EU’s own expressed goals for innovation, digital sovereignty, and future prosperity.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Moving forward, we urge you to engage with the open source community and take our concerns into account as you consider the implementation of the Cyber Resilience Act. Specifically, moving forward, we urge you to:&lt;/span&gt; &lt;/p&gt;

&lt;ol&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Recognise the unique characteristics of open source software and ensure that the Cyber Resilience Act does not unintentionally harm the open source ecosystem.&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Consult with the open source community during the co-legislative process.&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ensure that any development under the CRA takes into account the diversity of open and transparent open source software development practices.&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Establish a mechanism for ongoing dialogue and collaboration between the European institutions and the open source community, to ensure that future legislation and policy decisions are informed.&lt;/span&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The undersigned organisations collectively represent the governance of much of the open source software which industry and society rely on. We offer our collective expertise, including envisioning how these professional organisations may support a more inclusive and effective process to inform the CRA today. The same increase in dialog and collaboration will continue to support the CRA’s successful implementation in this new regulatory paradigm. We are prepared to send a representative delegation to meet with the members now. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We appreciate your attention to this matter and look forward to working with you to ensure that the Cyber Resilience Act reflects the concerns and contributions of the entire software industry, including the open source community.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Co-signed by the Executive Directors, Board Chairs, and Presidents on behalf of their respective organisations:&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://esop.pt/en&quot;&gt;&lt;strong&gt;Associaçāo de Empresas de Software Open Source Portuguesas (ESOP)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cnll.fr/&quot;&gt;&lt;strong&gt;CNLL, the French Open Source Business Association&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.documentfoundation.org/&quot;&gt;&lt;strong&gt;The Document Foundation (TDF)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/&quot;&gt;&lt;strong&gt;Eclipse Foundation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apell.info/&quot;&gt;&lt;strong&gt;European Open Source Software Business Associations (APELL) &lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://coss.fi/&quot;&gt;&lt;strong&gt;COSS - Finnish Centre for Open Systems and Solutions &lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://linuxfoundation.eu/&quot;&gt;&lt;strong&gt;Linux Foundation Europe&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://openforumeurope.org/&quot;&gt;&lt;strong&gt;Open Forum Europe (OFE)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://osb-alliance.de/&quot;&gt;&lt;strong&gt;Open Source Business Alliance (OSBA)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://opensource.org/&quot;&gt;&lt;strong&gt;Open Source Initiative (OSI)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://coss.fi/&quot;&gt;&lt;strong&gt;Open Systems and Solutions (COSS)&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ow2.org/&quot;&gt;&lt;strong&gt;OW2&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.softwareheritage.org/&quot;&gt;&lt;strong&gt;Software Heritage Foundation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 17 Apr 2023 11:56:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Help Identify IoT and Edge Computing Trends By Participating in Our Annual Survey</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/help-identify-iot-and-edge-computing-trends-participating-our-annual-survey</guid>
	<link>https://newsroom.eclipse.org/news/announcements/help-identify-iot-and-edge-computing-trends-participating-our-annual-survey</link>
	<description>Eclipse Foundation head of marketing Karla Ferrer discusses what's new in the 2023 IoT &amp;amp; Edge Developer and Adoption Survey, and what trends we expect to gain insight on.</description>
	<pubDate>Wed, 12 Apr 2023 18:46:45 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Eclipse Theia Community Release</title>
	<guid isPermaLink="false">7337 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-eclipse-theia-community-release</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Contributor Award: Eclipse Theia Community Release&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award for this month goes to &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; for initiating the Theia Community Release. The community release is a new, special type of release done every three months in addition to the monthly releases.&lt;/p&gt;

&lt;p&gt;Selecting the right release cycle is crucial for software projects, including open source projects. The general trend is towards short release cycles, allowing fast deployment of innovations and fixes. Eclipse Theia takes this approach with a monthly release schedule by default. However, Theia is very often used as a platform for custom products. For many of these adopters, a monthly update of the base technology is often not the best fit. Furthermore, several other technologies provide integrations with Theia and are looking for a good point in time to ensure compatibility.&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/devops-g2ad9f65b2_1920.jpg&quot; style=&quot;width: 600px; height: 268px;&quot; /&gt;&lt;br /&gt;
Source: Pixabay&lt;/p&gt;

&lt;p&gt;To solve the balancing act between different release cycles, STMicroelectronics initiated the community release for the Eclipse Theia project. Community releases are published every three months and are derived from the monthly releases. Community releases have a longer consolidation period, allowing integrators to ensure compatibility with the new version.&lt;/p&gt;

&lt;p&gt;Theia has recently completed its second community release (2023-02), and the process was well received by adopters and contributors. Initiating the idea of a community release is a nice example for the openness of the Eclipse Theia ecosystem. Not only can contributors influence the technical direction of a project, the community can also influence and improve the underlying development processes and the project’s governance.&lt;/p&gt;

&lt;p&gt;Thanks to STMicroelectronics for this great initiative!&lt;/p&gt;

&lt;p&gt;The Cloud DevTools Working Group provides a vendor-neutral ecosystem of open-source projects focused on defining, implementing and promoting best-in-class web and cloud-based development tools. It is hosted at the Eclipse Foundation, current members of the group include &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=848&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=731&quot;&gt;RedHat&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1069&quot;&gt;Renesas&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1194&quot;&gt;TypeFox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-04-12 10:31&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia&quot; hreflang=&quot;en&quot;&gt;Theia&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia-contributor-award&quot; hreflang=&quot;en&quot;&gt;Theia Contributor Award&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 12 Apr 2023 14:31:19 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.36 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/04/12/eclipse-theia-1-36-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/04/12/eclipse-theia-1-36-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.36 release! The release contains 50 merged pull requests and we welcome two new contributors. In this article, we will highlight some selected improvements...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/04/12/eclipse-theia-1-36-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.36 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Welcome to our new website!</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/04/11/welcome-to-our-new-website/</guid>
	<link>https://eclipsesource.com/blogs/2023/04/11/welcome-to-our-new-website/</link>
	<description>&lt;p&gt;We&amp;amp;rsquo;re excited to welcome you to the new EclipseSource website! We have rebuilt it from the ground up utilizing the latest trends in website technology. We are very happy with the result and hope...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/04/11/welcome-to-our-new-website/&quot; rel=&quot;nofollow&quot;&gt; Welcome to our new website!&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.27.0.Final for Eclipse 2023-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.27.0.final.html</guid>
	<link>https://tools.jboss.org/blog/4.27.0.final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.27.0.Final build for Eclipse 2023-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2023-03/4.27.0.Final.html&quot;&gt;JBoss Tools 4.27.0 Final&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.27.0.Final.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We made several fixes in our server and javaee component to support jakarta namespaces.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.2 runtime provider now incorporates Hibernate Core version 6.2.0.CR4, Hibernate Ant version 6.2.0.CR4 and Hibernate Tools version 6.2.0.CR4.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.27.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stéphane Bouchet&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 07 Apr 2023 10:03:20 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Eclipse JKube 1.12 is now available!</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/eclipse-jkube-1-12</guid>
	<link>https://blog.marcnuri.com/eclipse-jkube-1-12</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;div class=&quot;alert &quot;&gt;A newer version of Eclipse JKube is available, jump to &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13&quot; title=&quot;Eclipse JKube 1.13 is now available!&quot;&gt;Eclipse JKube 1.13 announcement&lt;/a&gt;.&lt;/div&gt;&lt;p&gt;On behalf of the &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;Eclipse JKube&lt;/a&gt; team and everyone who has contributed, I'm happy to announce that Eclipse JKube &lt;code&gt;1.12.0&lt;/code&gt; has been &lt;a href=&quot;https://github.com/eclipse/jkube/releases/tag/v1.12.0&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/releases/tag/v1.12.0&quot;&gt;released&lt;/a&gt; and is now available from &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.12.0/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.12.0/&quot;&gt;Maven Central&lt;/a&gt; ğŸ�‰.&lt;/p&gt;&lt;p&gt;Thanks to all of you who have contributed with issue reports, pull requests, feedback, and spreading the word with blogs, videos, comments, and so on. We really appreciate your help, keep it up!&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12/#whats-new&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;whats-new&quot;&gt;&lt;/span&gt;What's new?&lt;/h2&gt;&lt;p&gt;Without further ado, let's have a look at the most significant updates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Support for &lt;code&gt;CronJob&lt;/code&gt; controller generation&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12#resource-limits-xml&quot; title=&quot;Link to the Setting resource limits through XML/DSL configuration section&quot;&gt;Setting resource limits through XML/DSL configuration&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Concurrent Remote Dev sessions&lt;/li&gt;&lt;li&gt;ğŸ�› Many other bug-fixes and minor improvements&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12/#resource-limits-xml&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;resource-limits-xml&quot;&gt;&lt;/span&gt;Setting resource limits through XML/DSL configuration&lt;/h3&gt;&lt;p&gt;You can now set resource limits for your containers through XML/DSL configuration. The following code snippet shows how you can leverage this new feature in your &lt;code&gt;pom.xml&lt;/code&gt; configuration:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;resources&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;containerResources&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;requests&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;cpu&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1337m&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;cpu&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;memory&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;42Gi&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;memory&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;requests&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;limits&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;cpu&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1337m&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;cpu&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;            &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;memory&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;42Gi&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;memory&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;limits&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;containerResources&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;resources&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12/#using-this-release&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;using-this-release&quot;&gt;&lt;/span&gt;Using this release&lt;/h2&gt;&lt;p&gt;If your project is based on Maven, you just need to add the Kubernetes Maven plugin or the OpenShift Maven plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.12.0&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your project is based on Gradle, you just need to add the Kubernetes Gradle plugin or the OpenShift Gradle plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.12.0'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-12/#how-can-you-help&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;how-can-you-help&quot;&gt;&lt;/span&gt;How can you help?&lt;/h2&gt;&lt;p&gt;If you're interested in helping out and are a first-time contributor, check out the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;&quot;first-timers-only&quot;&lt;/a&gt; tag in the issue repository. We've tagged extremely easy issues so that you can get started contributing to Open Source and the Eclipse organization.&lt;/p&gt;&lt;p&gt;If you are a more experienced developer or have already contributed to JKube, check the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/help%20wanted&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/help%20wanted&quot;&gt;&quot;help wanted&quot;&lt;/a&gt; tag.&lt;/p&gt;&lt;p&gt;We're also excited to read articles and posts mentioning our project and sharing the user experience. Feedback is the only way to improve.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube/issues&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://gitter.im/eclipse/jkube&quot;&gt;Gitter&lt;/a&gt; | &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jkube-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://accounts.eclipse.org/mailing-list/jkube-dev&quot;&gt;Mailing list&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://stackoverflow.com/questions/tagged/jkube&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;span class=&quot;post-image__pusher aligncenter&quot;&gt;&lt;/span&gt;&lt;figure class=&quot;post-image &quot;&gt;&lt;span class=&quot;post-image__scrim&quot;&gt;&lt;/span&gt;&lt;a class=&quot;post-image__link&quot; href=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; title=&quot;Eclipse JKube Logo&quot;&gt;&lt;span class=&quot;post-image__image-container&quot;&gt;&lt;div class=&quot;gatsby-image-wrapper gatsby-image-wrapper-constrained post-image__image aligncenter&quot;&gt;&lt;source type=&quot;image/webp&quot; /&gt;&lt;img alt=&quot;Eclipse JKube Logo&quot; src=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;</description>
	<pubDate>Mon, 03 Apr 2023 15:45:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>John Kellerman: An Emerging Open VSX Working Group!</title>
	<guid isPermaLink="false">7331 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/emerging-open-vsx-working-group</link>
	<description>&lt;span&gt;An Emerging Open VSX Working Group!&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;A little over a month ago, I wrote a &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/help-us-sustain-open-vsxorg&quot;&gt;blog&lt;/a&gt; about the need for us in the Eclipse Community to establish a sustainable, long term funding and operational model for the Open VSX Registry at open-vsx.org. The current deployment hosts over 2,600 extensions from over 1,600 different publishers and is a critical, vendor-neutral resource for development environments consuming VSX extensions, including those based on &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/open-vsx_1.png&quot; style=&quot;width: 600px; height: 402px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Based on discussions with various stakeholders, we proposed a new working group specifically for the Open VSX Registry and began looking for interested organizations. I'm pleased to say that we have had a great deal of interest and are nearing critical mass to start the working group. As part of the &lt;a href=&quot;http://www.eclipse.org/org/workinggroups/process.php&quot;&gt;Eclipse Foundation Working Group Process&lt;/a&gt;, one of our first steps will be a meeting of interested organizations. We will be hosting a Zoom call, open to all, on Tuesday, April 4, at 11:00 AM EDT. If you would like to be added to the calendar entry, email us at &lt;a href=&quot;mailto:collaborations@eclipse-foundation.org?subject=Open%20VSX%20Call%20for%20Interested%20Organizations&amp;amp;body=Please%20add%20me%20to%20the%20call%20on%20Tuesday%2C%20April%204%2C%20at%2011%3A00%20AM%20EDT.&quot;&gt;collaborations@eclipse-foundation.org&lt;/a&gt;, or simply join using the following coordinates.&lt;/p&gt;

&lt;p&gt;Join Zoom Meeting&lt;br /&gt;
https://eclipse.zoom.us/j/83676771936?pwd=SElaa1J3eXB3UWxkTkZYNTU2eXR6QT09&lt;/p&gt;

&lt;p&gt;Meeting ID: 836 7677 1936&lt;br /&gt;
Passcode: 812536&lt;br /&gt;
One tap mobile&lt;br /&gt;
+13017158592,,83676771936#,,,,*812536# US&lt;br /&gt;
Find your local number: https://eclipse.zoom.us/u/keq9zOLgD4&lt;/p&gt;

&lt;p&gt;We’ll have a mailing list for the working group on line soon. This call will be recorded and posted to that mailing list, which will be our main communication venue for the working group.&lt;/p&gt;

&lt;p&gt;Thanks and we're looking forward to seeing you.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Thu, 2023-03-30 12:26&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/opensource-0&quot; hreflang=&quot;en&quot;&gt;OpenSource&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Thu, 30 Mar 2023 16:26:37 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: The Jakarta EE 2023 Developer Survey is now open!</title>
	<guid isPermaLink="false">7332 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-2023-developer-survey-now-open</link>
	<description>&lt;span&gt;The Jakarta EE 2023 Developer Survey is now open!&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;header&gt;&lt;p&gt;It is that time of the year: the &lt;strong&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/6357RSW&quot;&gt;Jakarta EE 2023 Developer Survey&lt;/a&gt;&lt;/strong&gt; open for your input! The survey will stay open until May 25st.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
I would like to invite you to take this year six-minute survey, and have the chance to share your thoughts and ideas for future Jakarta EE releases, and help us discover uptake of the Jakarta EE latest versions and trends that inform industry decision-makers.&lt;br /&gt;&lt;br /&gt;
Please share the survey link and to reach out to your contacts: Java developers, architects and stakeholders on the enterprise Java ecosystem and invite them to participate in the 2023 Jakarta EE Developer Survey!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/header&gt;&lt;p&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/6357RSW&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;576&quot; src=&quot;https://www.agilejava.eu/wp-content/uploads/2023/03/2023-Jakarta-EE-Developer-Survey-1-1024x576.png&quot; width=&quot;1024&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;Tanja Obradovic&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-03-29 17:24&lt;/span&gt;</description>
	<pubDate>Wed, 29 Mar 2023 21:24:11 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Getting Started with Eclipse Collections — Part 3</title>
	<guid isPermaLink="false">https://medium.com/p/e74286b01435</guid>
	<link>https://donraab.medium.com/getting-started-with-eclipse-collections-part-3-e74286b01435?source=rss-df39b86e9f04------2</link>
	<description>&lt;h3&gt;Getting Started with Eclipse Collections — Part 3&lt;/h3&gt;&lt;p&gt;Converting between Collection types using Eclipse Collections&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*I0-gJpQZ9YpIQe9rlOlD8w.png&quot; /&gt;&lt;figcaption&gt;Convert any RichIterable to a Mutable or Immutable Collection type&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Getting Started with Eclipse Collections&lt;/h3&gt;&lt;p&gt;In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-1-d5ba0098465f?source=friends_link&amp;amp;sk=adf22dc70cb22558651e791e82e5d46f&quot;&gt;part 1 of this series&lt;/a&gt;, I explained how to download the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; library from Maven Central and create collections using Eclipse Collections factories. In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-2-43f9f05a46ae?source=friends_link&amp;amp;sk=4736504869baa8a1088609ec5ff5fa09&quot;&gt;part 2&lt;/a&gt;, I explained how to add items to and remove items from different collection types. In part 3, I will explain how to use converter methods to convert any &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; type to another Collection or Map type.&lt;/p&gt;&lt;h3&gt;Converting between Collection types&lt;/h3&gt;&lt;p&gt;The methods in Eclipse Collections that enable developers to convert from one &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; type to another, start with the prefix to. Using the to&amp;lt;Type&amp;gt; methods, the data is copied from a source collection to a target collection type, and it takes linear time (O(n)). There are also methods prefixed with as which create views, and execute in constant time (O(1)), but they will not be discussed in this blog. Calling a to&amp;lt;Type&amp;gt; method, will result in a shallow copy where only the references to the data are copied.&lt;/p&gt;&lt;h3&gt;To Mutable Collections&lt;/h3&gt;&lt;p&gt;In order to convert a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; type to a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html&quot;&gt;MutableCollection&lt;/a&gt; type, start with the prefix to and look for the type you would like to convert to (List, Set, Bag, etc.). The converters to &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html&quot;&gt;MutableCollection&lt;/a&gt; types were added before there were &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html&quot;&gt;ImmutableCollection&lt;/a&gt; types in Eclipse Collections. There was a natural preference for the convenience of the shorter names, without Mutable in them.&lt;/p&gt;&lt;p&gt;The one exception of a to method answering a mutable type, is the method toString, which returns a familiar immutable Java type — String.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/582/1*PXvRbDaXO72aMSBUy0XI5Q.png&quot; /&gt;&lt;figcaption&gt;MutableCollection converters plus toArray and toString&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Mutable Converter Examples&lt;/h4&gt;&lt;p&gt;The following are examples of converting a RichIterable&amp;lt;Integer&amp;gt; to various other mutable container types in Eclipse Collections. You may recall from the other blogs in this series that &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; is the parent type of most Eclipse Collections container types.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void RichIterableTo()&lt;br /&gt;{&lt;br /&gt;    RichIterable&amp;lt;Integer&amp;gt; ri = Interval.oneTo(3);&lt;br /&gt;&lt;br /&gt;    // Lists&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; list =&lt;br /&gt;            ri.toList();&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; sortedList =&lt;br /&gt;            ri.toSortedList();&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; sortedListBy =&lt;br /&gt;            ri.toSortedListBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Sets&lt;br /&gt;    MutableSet&amp;lt;Integer&amp;gt; set =&lt;br /&gt;            ri.toSet();&lt;br /&gt;    MutableSortedSet&amp;lt;Integer&amp;gt; sortedSet =&lt;br /&gt;            ri.toSortedSet();&lt;br /&gt;    MutableSortedSet&amp;lt;Integer&amp;gt; sortedSetBy =&lt;br /&gt;            ri.toSortedSetBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Bags&lt;br /&gt;    MutableBag&amp;lt;Integer&amp;gt; bag =&lt;br /&gt;            ri.toBag();&lt;br /&gt;    MutableSortedBag&amp;lt;Integer&amp;gt; sortedBag =&lt;br /&gt;            ri.toSortedBag();&lt;br /&gt;    MutableSortedBag&amp;lt;Integer&amp;gt; sortedBagBy =&lt;br /&gt;            ri.toSortedBagBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Maps&lt;br /&gt;    MutableMap&amp;lt;String, Integer&amp;gt; map =&lt;br /&gt;            ri.toMap(Object::toString, Functions.identity());&lt;br /&gt;    MutableSortedMap&amp;lt;String, Integer&amp;gt; sortedMap =&lt;br /&gt;            ri.toSortedMap(Object::toString, Functions.identity());&lt;br /&gt;    MutableSortedMap&amp;lt;String, Integer&amp;gt; sortedMapBy =&lt;br /&gt;            ri.toSortedMapBy(Object::toString, &lt;br /&gt;                             Object::toString, &lt;br /&gt;                             Functions.identity());&lt;br /&gt;&lt;br /&gt;    // BiMap&lt;br /&gt;    MutableBiMap&amp;lt;String, Integer&amp;gt; biMap =&lt;br /&gt;            ri.toBiMap(Object::toString, Functions.identity());&lt;br /&gt;&lt;br /&gt;    // JDK Types&lt;br /&gt;    Object[] array = ri.toArray();&lt;br /&gt;    String string = ri.toString();&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;To Immutable Collections&lt;/h3&gt;&lt;p&gt;In order to convert a &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html&quot;&gt;RichIterable&lt;/a&gt; type to an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html&quot;&gt;ImmutableCollection&lt;/a&gt; type, start with the prefix to and look for the type you would like to convert to (&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/ImmutableList.html&quot;&gt;ImmutableList&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/ImmutableSet.html&quot;&gt;ImmutableSet&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/ImmutableBag.html&quot;&gt;ImmutableBag&lt;/a&gt;, etc.). It was clear as soon as I had drawn the Immutable side of the mind map that there is currently some asymmetry with a missing method toImmutableSortedMap that should return an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/map/sorted/ImmutableSortedMap.html&quot;&gt;ImmutableSortedMap&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/761/1*ldyGAnrj_6ugHwmFBtDy2w.png&quot; /&gt;&lt;figcaption&gt;ImmutableCollection converters&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Immutable Converter Examples&lt;/h4&gt;&lt;p&gt;The following are examples of converting a RichIterable&amp;lt;Integer&amp;gt; to various immutable container types in Eclipse Collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void RichIterableToImmutable()&lt;br /&gt;{&lt;br /&gt;    RichIterable&amp;lt;Integer&amp;gt; ri = Interval.oneTo(3);&lt;br /&gt;&lt;br /&gt;    // Immutable Lists&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; list =&lt;br /&gt;            ri.toImmutableList();&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; sortedList =&lt;br /&gt;            ri.toImmutableSortedList();&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; sortedListBy =&lt;br /&gt;            ri.toImmutableSortedListBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Immutable Sets&lt;br /&gt;    ImmutableSet&amp;lt;Integer&amp;gt; set =&lt;br /&gt;            ri.toImmutableSet();&lt;br /&gt;    ImmutableSortedSet&amp;lt;Integer&amp;gt; sortedSet =&lt;br /&gt;            ri.toImmutableSortedSet();&lt;br /&gt;    ImmutableSortedSet&amp;lt;Integer&amp;gt; sortedSetBy =&lt;br /&gt;            ri.toImmutableSortedSetBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Immutable Bags&lt;br /&gt;    ImmutableBag&amp;lt;Integer&amp;gt; bag =&lt;br /&gt;            ri.toImmutableBag();&lt;br /&gt;    ImmutableSortedBag&amp;lt;Integer&amp;gt; sortedBag =&lt;br /&gt;            ri.toImmutableSortedBag();&lt;br /&gt;    ImmutableSortedBag&amp;lt;Integer&amp;gt; sortedBagBy =&lt;br /&gt;            ri.toImmutableSortedBagBy(Object::toString);&lt;br /&gt;&lt;br /&gt;    // Immutable Map&lt;br /&gt;    ImmutableMap&amp;lt;String, Integer&amp;gt; map =&lt;br /&gt;            ri.toImmutableMap(Object::toString, Functions.identity());&lt;br /&gt;&lt;br /&gt;    // Immutable BiMap&lt;br /&gt;    ImmutableBiMap&amp;lt;String, Integer&amp;gt; biMap =&lt;br /&gt;            ri.toImmutableBiMap(Object::toString, Functions.identity());&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Primitive Collections&lt;/h3&gt;&lt;p&gt;The converter methods available on primitive collection types are more limited than their object counterparts. There are currently only methods prefixed with to available on the primitive Iterable types (e.g. IntIterable, LongIterable, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/DoubleIterable.html&quot;&gt;DoubleIterable&lt;/a&gt;, etc.) that return Mutable&amp;lt;Primitive&amp;gt;Collection types. There are no toImmutable&amp;lt;Type&amp;gt; equivalents today.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*0t8zRR9UFg42Q3Q4eJVHkw.png&quot; /&gt;&lt;figcaption&gt;Primitive Iterable converters plus toArray, toSortedArray and toString&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Primitive Converter Examples&lt;/h4&gt;&lt;p&gt;The following are examples of converting an &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/IntIterable.html&quot;&gt;IntIterable&lt;/a&gt; to various mutable primitive container types. The converter methods in the examples below are available across all eight primitive Iterable types.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void IntIterableTo()&lt;br /&gt;{&lt;br /&gt;    IntIterable ii = IntInterval.oneTo(3);&lt;br /&gt;&lt;br /&gt;    // Primitive Lists&lt;br /&gt;    MutableIntList list = &lt;br /&gt;            ii.toList();&lt;br /&gt;    MutableIntList sortedList = &lt;br /&gt;            ii.toSortedList();&lt;br /&gt;    MutableIntList sortedListBy = &lt;br /&gt;            ii.toSortedListBy(i -&amp;gt; -i);&lt;br /&gt;&lt;br /&gt;    // Set&lt;br /&gt;    MutableIntSet set = &lt;br /&gt;            ii.toSet();&lt;br /&gt;&lt;br /&gt;    // Bag&lt;br /&gt;    MutableIntBag bag = &lt;br /&gt;            ii.toBag();&lt;br /&gt;&lt;br /&gt;    // JDK Types&lt;br /&gt;    int[] array = &lt;br /&gt;            ii.toArray();&lt;br /&gt;    int[] sortedArray =&lt;br /&gt;            ii.toSortedArray();&lt;br /&gt;    String string = &lt;br /&gt;            ii.toString();&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;From Mutable To Immutable (Object Collections)&lt;/h3&gt;&lt;p&gt;There is a method named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html#toImmutable()&quot;&gt;toImmutable&lt;/a&gt; available on every &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html&quot;&gt;MutableCollection&lt;/a&gt; type that knows how to convert a MutableCollection to its &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html&quot;&gt;ImmutableCollection&lt;/a&gt; equivalent.&lt;/p&gt;&lt;h4&gt;Code examples of toImmutable (Object Collections)&lt;/h4&gt;&lt;p&gt;The following are code examples showing the toImmutable methods available across various MutableCollection and MutableMap types.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void toImmutable()&lt;br /&gt;{&lt;br /&gt;    // Collection&lt;br /&gt;    MutableCollection&amp;lt;Integer&amp;gt; collection =&lt;br /&gt;            Lists.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; immutableCollection =&lt;br /&gt;            collection.toImmutable();&lt;br /&gt;&lt;br /&gt;    // List&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; list =&lt;br /&gt;            Lists.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; immutableList =&lt;br /&gt;            list.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Sets&lt;br /&gt;    MutableSet&amp;lt;Integer&amp;gt; set =&lt;br /&gt;            Sets.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableSet&amp;lt;Integer&amp;gt; immutableSet =&lt;br /&gt;            set.toImmutable();&lt;br /&gt;    MutableSortedSet&amp;lt;Integer&amp;gt; sortedSet =&lt;br /&gt;            SortedSets.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableSortedSet&amp;lt;Integer&amp;gt; immutableSortedSet =&lt;br /&gt;            sortedSet.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Bags&lt;br /&gt;    MutableBag&amp;lt;Integer&amp;gt; bag =&lt;br /&gt;            Bags.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableBag&amp;lt;Integer&amp;gt; immutableBag =&lt;br /&gt;            bag.toImmutable();&lt;br /&gt;    MutableSortedBag&amp;lt;Integer&amp;gt; sortedBag =&lt;br /&gt;            SortedBags.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableSortedBag&amp;lt;Integer&amp;gt; immutableSortedBag =&lt;br /&gt;            sortedBag.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Stack&lt;br /&gt;    MutableStack&amp;lt;Integer&amp;gt; stack =&lt;br /&gt;            Stacks.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableStack&amp;lt;Integer&amp;gt; immutableStack =&lt;br /&gt;            stack.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Maps&lt;br /&gt;    MutableMap&amp;lt;Integer, Integer&amp;gt; map =&lt;br /&gt;            Maps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableMap&amp;lt;Integer, Integer&amp;gt; immutableMap =&lt;br /&gt;            map.toImmutable();&lt;br /&gt;    MutableSortedMap&amp;lt;Integer, Integer&amp;gt; sortedMap =&lt;br /&gt;            SortedMaps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableSortedMap&amp;lt;Integer, Integer&amp;gt; immutableSortedMap =&lt;br /&gt;            sortedMap.toImmutable();&lt;br /&gt;&lt;br /&gt;    // BiMap&lt;br /&gt;    MutableBiMap&amp;lt;Integer, Integer&amp;gt; biMap =&lt;br /&gt;            BiMaps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableBiMap&amp;lt;Integer, Integer&amp;gt; immutableBiMap =&lt;br /&gt;            biMap.toImmutable();&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;From Mutable To Immutable (Primitive Collections)&lt;/h3&gt;&lt;p&gt;There is a method named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/primitive/MutableIntCollection.html#toImmutable()&quot;&gt;toImmutable&lt;/a&gt; available on every &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/primitive/MutableIntCollection.html&quot;&gt;Mutable&amp;lt;Primitive&amp;gt;Collection&lt;/a&gt; type that knows how to convert a Mutable&amp;lt;Primitive&amp;gt;Collection to its &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/primitive/ImmutableIntCollection.html&quot;&gt;Immutable&amp;lt;Primitive&amp;gt;Collection&lt;/a&gt; equivalent.&lt;/p&gt;&lt;h4&gt;Code examples of toImmutable (Primitive Collections)&lt;/h4&gt;&lt;p&gt;The following are code examples showing the toImmutable methods available across various Mutable&amp;lt;Primitive&amp;gt;Collection and Mutable&amp;lt;Primitive&amp;gt;Map types.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void toImmutablePrimitive()&lt;br /&gt;{&lt;br /&gt;    // Collection&lt;br /&gt;    MutableIntCollection collection =&lt;br /&gt;            IntLists.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableIntCollection immutableCollection =&lt;br /&gt;            collection.toImmutable();&lt;br /&gt;&lt;br /&gt;    // List&lt;br /&gt;    MutableIntList list =&lt;br /&gt;            IntLists.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableIntList immutableList =&lt;br /&gt;            list.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Set&lt;br /&gt;    MutableIntSet set =&lt;br /&gt;            IntSets.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableIntSet immutableSet =&lt;br /&gt;            set.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Bag&lt;br /&gt;    MutableIntBag bag =&lt;br /&gt;            IntBags.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableIntBag immutableBag =&lt;br /&gt;            bag.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Stack&lt;br /&gt;    MutableIntStack stack =&lt;br /&gt;            IntStacks.mutable.with(1, 2, 3);&lt;br /&gt;    ImmutableIntStack immutableStack =&lt;br /&gt;            stack.toImmutable();&lt;br /&gt;&lt;br /&gt;    // Maps&lt;br /&gt;    MutableIntIntMap intIntMap =&lt;br /&gt;            IntIntMaps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableIntIntMap immutableIntIntMap =&lt;br /&gt;            intIntMap.toImmutable();&lt;br /&gt;    MutableIntObjectMap&amp;lt;Integer&amp;gt; intObjectMap = &lt;br /&gt;            IntObjectMaps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableIntObjectMap&amp;lt;Integer&amp;gt; immutableIntObjectMap = &lt;br /&gt;            intObjectMap.toImmutable();&lt;br /&gt;    MutableObjectIntMap&amp;lt;Integer&amp;gt; objectIntMap = &lt;br /&gt;            ObjectIntMaps.mutable.with(1, 1, 2, 2, 3, 3);&lt;br /&gt;    ImmutableObjectIntMap&amp;lt;Integer&amp;gt; immutableObjectIntMap = &lt;br /&gt;            objectIntMap.toImmutable();&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;The past, present, future of Converter Methods&lt;/h3&gt;&lt;p&gt;I wrote a couple of blogs, two years ago, about the converter methods that were available in Eclipse Collections at the time and the ones I wanted to see in Java as well as future versions of Eclipse Collections. The blogs were inspired at the time by the introduction of the toList method to the Stream interface in Java 16.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/stream-tolist-and-other-converter-methods-ive-wanted-since-java-2-c620500cb7ab&quot;&gt;Stream.toList() and other converter methods I’ve wanted since Java 2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/improving-the-symmetry-of-converter-methods-in-eclipse-collections-922d74a3f065&quot;&gt;Improving the symmetry of converter methods in Eclipse Collections&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The future I envisioned two years ago is almost complete, at least for Eclipse Collections. There is minor work to do in the Eclipse Collections object collection hierarchy. There is also an opportunity to improve symmetry by adding the toImmutable&amp;lt;Type&amp;gt; variety of methods to the primitive collections.&lt;/p&gt;&lt;h3&gt;“Into” the Unknown!&lt;/h3&gt;&lt;p&gt;There is a method defined on RichIterable that can be used as a catchall method to convert a type to any possible Collection type. The method is named into, and can accept any implementation of Collection as a target. The into method has been available since Eclipse Collections 8.0 was released (September 2016), and provides great interoperability with Collection containers from other Java Collections libraries. The signature of the method is as follows:&lt;/p&gt;&lt;pre&gt;/**&lt;br /&gt; * Adds all the elements in this iterable to the specific target Collection.&lt;br /&gt; *&lt;br /&gt; * @since 8.0&lt;br /&gt; */&lt;br /&gt;&amp;lt;R extends Collection&amp;lt;T&amp;gt;&amp;gt; R into(R target);&lt;/pre&gt;&lt;h4&gt;Code examples of into on RichIterable&lt;/h4&gt;&lt;p&gt;The following are code examples using into to convert a RichIterable implementation to a variety of specific JDK Collection types.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void intoTheUnknown()&lt;br /&gt;{&lt;br /&gt;    RichIterable&amp;lt;Integer&amp;gt; ri = Interval.oneTo(3);&lt;br /&gt;&lt;br /&gt;    // into JDK CopyOnWriteArrayList&lt;br /&gt;    CopyOnWriteArrayList&amp;lt;Integer&amp;gt; cowal = &lt;br /&gt;            ri.into(new CopyOnWriteArrayList&amp;lt;&amp;gt;());&lt;br /&gt;&lt;br /&gt;    // into JDK CopyOnWriteArraySet&lt;br /&gt;    CopyOnWriteArraySet&amp;lt;Integer&amp;gt; cowas = &lt;br /&gt;            ri.into(new CopyOnWriteArraySet&amp;lt;&amp;gt;());&lt;br /&gt;&lt;br /&gt;    // into JDK LinkedHashSet&lt;br /&gt;    LinkedHashSet&amp;lt;Integer&amp;gt; lhs = &lt;br /&gt;            ri.into(new LinkedHashSet&amp;lt;&amp;gt;());&lt;br /&gt;&lt;br /&gt;    // into JDK ArrayDeque&lt;br /&gt;    ArrayDeque&amp;lt;Integer&amp;gt; ad = &lt;br /&gt;            ri.into(new ArrayDeque&amp;lt;&amp;gt;());&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Final Thoughts&lt;/h3&gt;&lt;p&gt;Thank you for taking the time to read this blog. I hope this will be a good reference for folks to refer to in the future. I tried to be as comprehensive as possible. In the next blog in this series, I will cover in depth some of the most commonly used methods for processing information in collections.&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=e74286b01435&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 28 Mar 2023 17:29:24 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: La Fondation Eclipse rejoint la Société informatique de France</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/la-fondation-eclipse-rejoint-la-soci%C3%A9t%C3%A9-informatique-de-france</guid>
	<link>https://newsroom.eclipse.org/news/announcements/la-fondation-eclipse-rejoint-la-soci%C3%A9t%C3%A9-informatique-de-france</link>
	<description>&lt;p&gt;&lt;strong&gt;Paris, France, le 09 mars 2023 – &lt;/strong&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;La Fondation Eclipse annonce aujourd’hui avoir rejoint la Société Informatique de France afin de collaborer à une démarche commune qui vise à rassembler toutes celles et ceux pour qui faire progresser l’informatique est un métier ou une passion : enseignants, chercheurs, ingénieurs, industriels, et consultants. La Fondation Eclipse est convaincue que cette démarche doit passer par une bonne compréhension de l’open source et de ses pratiques.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;span style=&quot;font-weight: 400;&quot;&gt;« Nous sommes très heureux et fier de rejoindre la SIF et faire partie de ses membres » explique Philippe Krief, directeur des relations avec la recherche à la Fondation Eclipse. La Fondation Eclipse s'implique d’ailleurs fortement dans les projets de recherche européens depuis dix ans, en les accompagnant dans la mise en œuvre et la pérennisation de leurs résultats sous forme de projets open source.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-weight: 400;&quot;&gt;« Ces nombreuses rencontres avec la communauté de recherche européenne nous ont permis de mieux comprendre les questionnements comme les idées reçues que le milieu de la recherche peut avoir vis-à-vis de l'open source » poursuit Philippe Krief. « Notre travail consiste donc à expliquer et à rassurer nos partenaires académiques, comme industriels, sur les bonnes pratiques de l'open source, à casser certains clichés, et à les accompagner dans le développement d'un projet open source, de sa communauté, et de sa pérennisation.                          &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;«  La Société informatique de France est particulièrement heureuse d'accueillir la fondation Eclipse parmi ses membres. Cette adhésion est un signe visible de l’existence de valeurs communes et d’une ambition partagée pour une science plus ouverte et une innovation plus citoyenne. C’est bien en ce sens qu’œuvre la fondation Eclipse et que se développe chaque jour davantage l’écosystème du logiciel libre au bénéfice de l’ensemble de la société.»  souligne Yves Bertrand, président de la SIF.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;– Fin –&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;À propos de la Fondation Eclipse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;La Fondation Eclipse fournit à sa communauté mondiale de personnes et d'organisations un environnement mature, évolutif et convivial pour la collaboration et l'innovation en matière de logiciels open source. La Fondation héberge l'IDE Eclipse, Jakarta EE et plus de 400 projets open source, notamment des runtimes, des outils et des frameworks pour les applications cloud et edge, l'IoT, l'IA, l'automobile, l'ingénierie des systèmes, les conceptions de processeurs ouverts, et bien d'autres. La Fondation Eclipse est une association internationale à but non lucratif soutenue par plus de 330 membres, dont des leaders de l'industrie qui apprécient l'open source comme un catalyseur clé pour leurs stratégies commerciales. Pour en savoir plus, suivez-nous sur Twitter @ResearchEclipse, @EclipseFdn, LinkedIn ou visitez eclipse.org.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;À propos de la Société informatique de France&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;La Société Informatique de France (SIF) est la société savante française d’informatique. Elle a vu le jour en 2012 et est reconnue d'utilité publique depuis septembre 2018. Au cœur de la société, elle a vocation à porter la voix de l’informatique, science et technique, et celle des femmes et des hommes qui la font chaque jour. À ce titre, elle vise à rassembler toutes celles et ceux pour qui faire progresser l’informatique est un métier ou une passion : enseignantes, chercheuses, ingénieurs, industriels, consultantes. Société savante, la SIF vise tout particulièrement à promouvoir l’informatique, à servir et à animer sa communauté scientifique et technique, contribuer à la culture citoyenne et à l’enseignement de la discipline à tous les niveaux. Elle aspire à participer aux réflexions et initiatives sur la formation et l’emploi des informaticiennes et informaticiens et à porter la voix de la communauté dans les débats de société. Pour en savoir plus, visitez https://www.socinfo.fr.&lt;/span&gt;&lt;br /&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contact Eclipse pour la presse:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;514 Media Ltd for the Eclipse Foundation, AISBL (France, Italy, Spain)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Benoit Simoneau&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;benoit@514-media.com&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;M: +44 (0) 7891 920 370&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ref: ECF018D&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contacts SIF pour la presse :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Yves BERTRAND, &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;president@societe-informatique-de-france.fr&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;+33 (0)643 348 313&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Sylvie ALAYRANGUES, responsable communication, &lt;/span&gt;&lt;a href=&quot;mailto:sylvie.alayrangues@societe-informatique-de-france.fr&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;sylvie.alayrangues@societe-informatique-de-france.fr&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 23 Mar 2023 13:36:55 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Getting Started with Eclipse Collections — Part 2</title>
	<guid isPermaLink="false">https://medium.com/p/43f9f05a46ae</guid>
	<link>https://donraab.medium.com/getting-started-with-eclipse-collections-part-2-43f9f05a46ae?source=rss-df39b86e9f04------2</link>
	<description>&lt;h3&gt;Getting Started with Eclipse Collections — Part 2&lt;/h3&gt;&lt;p&gt;Learn how to add items to and remove items from collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*NiDgovN9AljUVH3f&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@eswaran_arulkumar?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;eswaran arulkumar&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Getting Started with Eclipse Collections&lt;/h3&gt;&lt;p&gt;In &lt;a href=&quot;https://donraab.medium.com/getting-started-with-eclipse-collections-part-1-d5ba0098465f?source=friends_link&amp;amp;sk=adf22dc70cb22558651e791e82e5d46f&quot;&gt;part 1 of this series&lt;/a&gt;, I explained how to download the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; library from Maven Central and create collections using Eclipse Collections. In part 2, I will explain how to add items to and remove items from collections.&lt;/p&gt;&lt;h3&gt;Adding to and Removing from Collections&lt;/h3&gt;&lt;p&gt;The most basic methods on a collection are the ones that add items to and remove items from the collection. Eclipse Collections has flexible and symmetric methods for growing and shrinking both MutableCollection and ImmutableCollection instances. Sometimes, there are type specific methods to add items to and remove items from a collection.&lt;/p&gt;&lt;h3&gt;Mutable Collections&lt;/h3&gt;&lt;p&gt;All MutableCollection types in Eclipse Collections, except for MutableStack, are descendants of java.util.Collection. MutableStack extends the java.lang.Iterable interface. The following class diagram shows the interesting mutable interfaces in the JDK and Eclipse Collections that define the &lt;em&gt;adding&lt;/em&gt; and &lt;em&gt;removing&lt;/em&gt; behavior for various Collection and Iterable types.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*d6bmQmq7sySKPWsqsnnkNQ.png&quot; /&gt;&lt;figcaption&gt;Mutable Collection interfaces with add/remove methods in JDK and Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In the following sections, I will explain and show examples of the adding and removing methods at the various levels of the MutableCollection type hierarchy as they are introduced. Types in the the MutableCollection hierarchy extend the type java.util.Collection. This means the mutable collections in Eclipse Collections are compatible and interchangeable with JDK Collection types. I will start by explaining the methods inherited by the various JDK Collection types including java.util.Collection, java.util.List, java.util.Set.&lt;/p&gt;&lt;h4&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Collection.html&quot;&gt;java.util.Collection&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The java.util.Collection interface in Java has add and remove methods that are the primary mechanisms for adding items to and removing items from a collection. The methods take an object as a parameter and both methods return boolean.&lt;/p&gt;&lt;p&gt;The return result for add is dependent on the Collection type. The general contract says the result will be true if the Collection is modified as a result of calling the add method. In the case of a List, the result will almost always be true. In the case of a Set, the result will depend on whether an item was added to the Set (true) or already existed in the Set (false). I recommend reading the JavaDoc for a particular type to understand the return result for add.&lt;/p&gt;&lt;p&gt;The return result for remove is consistent across Collection types. A result of true is returned if an items exists in the Collection and is removed.&lt;/p&gt;&lt;p&gt;The add method on Collection takes a generic type as a parameter. The remove method takes Object as a parameter. There are &lt;a href=&quot;https://stackoverflow.com/questions/104799/why-arent-java-collections-remove-methods-generic&quot;&gt;questions and answers on StackOverflow&lt;/a&gt; why remove takes Object as a parameter. It does allow the remove method to be less strict and more flexible.&lt;/p&gt;&lt;p&gt;There are also bulk mutation methods available on java.util.Collection. The three bulk mutation methods are addAll, removeAll, and retainAll, which all take a Collection as a parameter. There is also a special method named removeIf which takes a Predicate.&lt;/p&gt;&lt;p&gt;The following are examples using the mutating methods from java.util.Collection on an Eclipse Collections MutableList.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void javaUtilCollection()&lt;br /&gt;{&lt;br /&gt;    Collection&amp;lt;String&amp;gt; collection = Lists.mutable.empty();&lt;br /&gt;&lt;br /&gt;    // add&lt;br /&gt;    Assertions.assertTrue(collection.add(&quot;1&quot;));&lt;br /&gt;    Assertions.assertTrue(collection.add(&quot;2&quot;));&lt;br /&gt;    Assertions.assertTrue(collection.add(&quot;3&quot;));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;), collection);&lt;br /&gt;&lt;br /&gt;    // remove&lt;br /&gt;    Assertions.assertTrue(collection.remove(&quot;2&quot;));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;), collection);&lt;br /&gt;    Assertions.assertFalse(collection.remove(&quot;4&quot;));&lt;br /&gt;&lt;br /&gt;    // addAll&lt;br /&gt;    Assertions.assertTrue(collection.addAll(List.of(&quot;2&quot;)));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;, &quot;2&quot;), collection);&lt;br /&gt;    Assertions.assertTrue(collection.addAll(List.of(&quot;4&quot;, &quot;5&quot;)));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;, &quot;2&quot;, &quot;4&quot;, &quot;5&quot;), collection);&lt;br /&gt;&lt;br /&gt;    // removeAll&lt;br /&gt;    Assertions.assertTrue(collection.removeAll(List.of(&quot;2&quot;, &quot;4&quot;)));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;, &quot;5&quot;), collection);&lt;br /&gt;&lt;br /&gt;    // retainAll&lt;br /&gt;    Assertions.assertTrue(collection.retainAll(List.of(&quot;1&quot;, &quot;3&quot;)));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;), collection);&lt;br /&gt;&lt;br /&gt;    // removeIf&lt;br /&gt;    Assertions.assertFalse(collection.removeIf(&lt;br /&gt;            each -&amp;gt; Integer.parseInt(each) % 2 == 0));&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;3&quot;), collection);&lt;br /&gt;    Assertions.assertTrue(collection.removeIf(&lt;br /&gt;            each -&amp;gt; Integer.parseInt(each) % 2 != 0));&lt;br /&gt;    Assertions.assertEquals(List.of(), collection);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/List.html&quot;&gt;java.util.List&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The java.util.List interface inherits all of the adding and removing methods from java.util.Collection. List also includes an add and addAll method which allow for inserting elements at a specific index. There is also a remove method which takes an index. The remove method on java.util.List is an overload of the remove method defined on java.util.Collection. You should take care when calling remove on a java.util.List, to make sure you are calling the correct remove method. There are &lt;a href=&quot;https://stackoverflow.com/questions/4534146/properly-removing-an-integer-from-a-listinteger&quot;&gt;questions and answers on StackOverflow&lt;/a&gt; about the overloaded remove methods on java.util.List.&lt;/p&gt;&lt;p&gt;The following are examples using the mutating methods from java.util.List on an Eclipse Collections MutableList.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void javaUtilList()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;String&amp;gt; list = Lists.mutable.with(&quot;1&quot;, &quot;3&quot;, &quot;5&quot;);&lt;br /&gt;&lt;br /&gt;    // add(index, element) - Note: returns void, not boolean&lt;br /&gt;    list.add(1, &quot;2&quot;);&lt;br /&gt;    list.add(3, &quot;4&quot;);&lt;br /&gt;&lt;br /&gt;    var expected1 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected1, list);&lt;br /&gt;&lt;br /&gt;    // addAll(index, collection) - Note: returns boolean&lt;br /&gt;    Assertions.assertTrue(list.addAll(0, List.of(&quot;0&quot;)));&lt;br /&gt;&lt;br /&gt;    var expected2 = Lists.mutable.with(&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected2, list);&lt;br /&gt;&lt;br /&gt;    // remove(index) - Note: returns the element removed&lt;br /&gt;    Assertions.assertEquals(&quot;0&quot;, list.remove(0));&lt;br /&gt;    Assertions.assertEquals(&quot;2&quot;, list.remove(1));&lt;br /&gt;    Assertions.assertEquals(&quot;4&quot;, list.remove(2));&lt;br /&gt;&lt;br /&gt;    var expected3 = Lists.mutable.with(&quot;1&quot;, &quot;3&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected3, list);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Set.html&quot;&gt;java.util.Set&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The java.util.Set interface inherits all of the adding and removing methods from java.util.Collection. There are no additional adding or removing methods on java.util.Set. The return result of add on implementations of java.util.Set is slightly different than those of java.util.List. The result of calling add on java.util.List will always return true. On an implementation of java.util.Set, the return result is dependent on whether an equivalent item already existed in the Set. If an item doesn’t exist, add will return true. If an item does exist, add will return false.&lt;/p&gt;&lt;p&gt;The following are examples using the mutating methods from java.util.Set on an Eclipse Collections MutableSet.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void javaUtilSet()&lt;br /&gt;{&lt;br /&gt;    Set&amp;lt;String&amp;gt; set = Sets.mutable.empty();&lt;br /&gt;&lt;br /&gt;    // add - returns true if new element, or false if element exists&lt;br /&gt;    Assertions.assertTrue(set.add(&quot;1&quot;));&lt;br /&gt;    Assertions.assertFalse(set.add(&quot;1&quot;));&lt;br /&gt;    Assertions.assertEquals(Set.of(&quot;1&quot;), set);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html&quot;&gt;MutableCollection&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The base class for most Mutable collections in Eclipse Collections is MutableCollection. MutableCollection extends java.util.Collection. It adds several methods for growing and shrinking a collection. First, MutableCollection adds a set of bulk mutating methods that are symmetric with the bulk mutating methods in java.util.Collection, but that take java.lang.Iterable instead of java.util.Collection. The methods are addAllIterable, removeAllIterable, retainAllIterable. There is also a removeIfWith method which will take a Predicate2 and a parameter of some type.&lt;/p&gt;&lt;p&gt;The following are examples using the mutating methods from MutableCollection on an Eclipse Collections MutableList.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void mutableCollectionPart1()&lt;br /&gt;{&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; collection = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;    // addAllIterable&lt;br /&gt;    Assertions.assertTrue(&lt;br /&gt;        collection.addAllIterable(Lists.immutable.with(&quot;4&quot;, &quot;5&quot;)));&lt;br /&gt;&lt;br /&gt;    var expected1 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected1, collection);&lt;br /&gt;&lt;br /&gt;    // retainAllIterable&lt;br /&gt;    Assertions.assertTrue(&lt;br /&gt;        collection.retainAllIterable(Lists.immutable.with(&quot;4&quot;, &quot;5&quot;)));&lt;br /&gt;&lt;br /&gt;    var expected2 = Lists.mutable.with(&quot;4&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected2, collection);&lt;br /&gt;&lt;br /&gt;    // removeAllIterable&lt;br /&gt;    Assertions.assertFalse(&lt;br /&gt;        collection.removeAllIterable(Lists.immutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;)));&lt;br /&gt;    Assertions.assertEquals(expected2, collection);&lt;br /&gt;    Assertions.assertTrue(&lt;br /&gt;        collection.removeAllIterable(Lists.immutable.with(&quot;5&quot;)));&lt;br /&gt;&lt;br /&gt;    var expected3 = Lists.mutable.with(&quot;4&quot;);&lt;br /&gt;    Assertions.assertEquals(expected3, collection);&lt;br /&gt;&lt;br /&gt;    // removeIfWith&lt;br /&gt;    Assertions.assertFalse(&lt;br /&gt;        collection.removeIfWith(Predicates2.equal(), &quot;5&quot;));&lt;br /&gt;    Assertions.assertTrue(&lt;br /&gt;        collection.removeIfWith(Predicates2.equal(), &quot;4&quot;));&lt;br /&gt;    Assertions.assertTrue(collection.isEmpty());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The other methods that MutableCollection includes for growing and shrinking a collection are with, withAll, without, and withoutAll. These methods are symmetric with add, addAll, remove, and removeAll from java.util.Collection. The difference is in the return type. The methods from java.util.Collection all return boolean. The with* methods on MutableCollection all return MutableCollection.&lt;/p&gt;&lt;p&gt;I wrote about the with* methods in the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/as-a-matter-of-factory-part-3-method-chaining-224217074d31&quot;&gt;As a matter of Factory — Part 3 (Method Chaining)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The with* methods allow collection instances to become fluent builders for themselves, by allowing chained calls to add, addAll, remove, and removeAll.&lt;/p&gt;&lt;p&gt;The following are examples using the with* methods from MutableCollection on an Eclipse Collections MutableList.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void mutableCollectionPart2()&lt;br /&gt;{&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; collection = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;&lt;br /&gt;    // with - returns MutableCollection&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; with =&lt;br /&gt;            collection.with(&quot;4&quot;).with(&quot;5&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertSame(with, collection);&lt;br /&gt;    var expected1 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;);&lt;br /&gt;    Assertions.assertEquals(expected1, collection);&lt;br /&gt;&lt;br /&gt;    // withAll - returns MutableCollection&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; withAll =&lt;br /&gt;            collection.withAll(List.of(&quot;6&quot;));&lt;br /&gt;&lt;br /&gt;    Assertions.assertSame(withAll, collection);&lt;br /&gt;    var expected2 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);&lt;br /&gt;    Assertions.assertEquals(expected2, collection);&lt;br /&gt;&lt;br /&gt;    // without - returns MutableCollection&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; without =&lt;br /&gt;            collection.without(&quot;5&quot;).without(&quot;6&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertSame(without, collection);&lt;br /&gt;    var expected3 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;);&lt;br /&gt;    Assertions.assertEquals(expected3, collection);&lt;br /&gt;&lt;br /&gt;    // withoutAll - returns MutableCollection&lt;br /&gt;    MutableCollection&amp;lt;String&amp;gt; withoutAll =&lt;br /&gt;            collection.withoutAll(List.of(&quot;4&quot;));&lt;br /&gt;&lt;br /&gt;    Assertions.assertSame(withAll, collection);&lt;br /&gt;    var expected4 = Lists.mutable.with(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);&lt;br /&gt;    Assertions.assertEquals(expected4, collection);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Covariant return types for with* methods&lt;/h4&gt;&lt;p&gt;The interfaces &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/MutableList.html&quot;&gt;MutableList&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/MutableSet.html&quot;&gt;MutableSet&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/MutableBag.html&quot;&gt;MutableBag&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/sorted/MutableSortedSet.html&quot;&gt;MutableSortedSet&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/sorted/MutableSortedBag.html&quot;&gt;MutableSortedBag&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/MutableBagIterable.html&quot;&gt;MutableBagIterable&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/MutableSetIterable.html&quot;&gt;MutableSetIterable&lt;/a&gt; all override with, withAll, without, and withoutAll from MutableCollection providing a more specific return type. This is an extremely convenient and useful behavior.&lt;/p&gt;&lt;p&gt;The following code examples show how the with method is covariant by collection type in Eclipse Collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void covariantReturnTypesForWithMethods()&lt;br /&gt;{&lt;br /&gt;    // with - MutableList&lt;br /&gt;    MutableList&amp;lt;?&amp;gt; list = Lists.mutable.empty()&lt;br /&gt;            .with(&quot;1&quot;)&lt;br /&gt;            .with(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;2&quot;), list);&lt;br /&gt;&lt;br /&gt;    // with - MutableSet&lt;br /&gt;    MutableSet&amp;lt;?&amp;gt; set = Sets.mutable.empty()&lt;br /&gt;            .with(&quot;1&quot;)&lt;br /&gt;            .with(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Set.of(&quot;1&quot;, &quot;2&quot;), set);&lt;br /&gt;&lt;br /&gt;    // with - MutableBag&lt;br /&gt;    MutableBag&amp;lt;?&amp;gt; bag = Bags.mutable.empty()&lt;br /&gt;            .with(&quot;1&quot;)&lt;br /&gt;            .with(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Bags.mutable.with(&quot;1&quot;, &quot;2&quot;), bag);&lt;br /&gt;&lt;br /&gt;    // with - MutableSortedSet&lt;br /&gt;    MutableSortedSet&amp;lt;?&amp;gt; sortedSet = SortedSets.mutable.empty()&lt;br /&gt;            .with(&quot;1&quot;)&lt;br /&gt;            .with(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(SortedSets.mutable.with(&quot;1&quot;, &quot;2&quot;), sortedSet);&lt;br /&gt;&lt;br /&gt;    // with - MutableSortedBag&lt;br /&gt;    MutableSortedBag&amp;lt;?&amp;gt; sortedBag = SortedBags.mutable.empty()&lt;br /&gt;            .with(&quot;1&quot;)&lt;br /&gt;            .with(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(SortedBags.mutable.with(&quot;1&quot;, &quot;2&quot;), sortedBag);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The with* methods are extremely helpful for defining Collector implementations similar to the ones defined in the &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/impl/collector/Collectors2.html&quot;&gt;Collectors2&lt;/a&gt; class in Eclipse Collections. The covariant overrides that return the specific types make it possible to simply use method references, instead of having to write out a multi-statement lambda.&lt;/p&gt;&lt;p&gt;The following code shows how to use the withAll method as a method reference on MutableList and MutableSet to define the combiner argument for a Collector.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectorsDefinedUsingCovariantWithAllMethods()&lt;br /&gt;{&lt;br /&gt;    var mutableListCollector = Collector.of(&lt;br /&gt;            Lists.mutable::empty,&lt;br /&gt;            MutableList::add,&lt;br /&gt;            MutableList::withAll);&lt;br /&gt;&lt;br /&gt;    MutableList&amp;lt;?&amp;gt; mutableList = List.of(1, 2, 3)&lt;br /&gt;            .stream()&lt;br /&gt;            .collect(mutableListCollector);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(List.of(1, 2, 3), mutableList);&lt;br /&gt;&lt;br /&gt;    var mutableSetCollector = Collector.of(&lt;br /&gt;            Sets.mutable::empty,&lt;br /&gt;            MutableSet::add,&lt;br /&gt;            MutableSet::withAll);&lt;br /&gt;&lt;br /&gt;    MutableSet&amp;lt;?&amp;gt; mutableSet = Set.of(1, 2, 3)&lt;br /&gt;            .stream()&lt;br /&gt;            .collect(mutableSetCollector);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Set.of(1, 2, 3), mutableSet);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Note, it is not nearly as nice or concise defining a Collector for java.util.ArrayList or java.util.HashSet, because addAll returns boolean.&lt;/p&gt;&lt;p&gt;The following code shows how a multi-statement lambda is required to implement the combiner argument of a Collector for ArrayList and HashSet.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectorsDefinedUsingAddAllMethods()&lt;br /&gt;{&lt;br /&gt;    var arrayListCollector = Collector.of(&lt;br /&gt;            ArrayList::new,&lt;br /&gt;            List::add,&lt;br /&gt;            (left, right) -&amp;gt; {&lt;br /&gt;                left.addAll(right);&lt;br /&gt;                return left;&lt;br /&gt;            });&lt;br /&gt;&lt;br /&gt;    List&amp;lt;?&amp;gt; list = List.of(1, 2, 3)&lt;br /&gt;            .stream()&lt;br /&gt;            .collect(arrayListCollector);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(List.of(1, 2, 3), list);&lt;br /&gt;&lt;br /&gt;    var hashSetCollector = Collector.of(&lt;br /&gt;            HashSet::new,&lt;br /&gt;            Set::add,&lt;br /&gt;            (left, right) -&amp;gt; {&lt;br /&gt;                left.addAll(right);&lt;br /&gt;                return left;&lt;br /&gt;            });&lt;br /&gt;&lt;br /&gt;    Set&amp;lt;?&amp;gt; set = Set.of(1, 2, 3)&lt;br /&gt;            .stream()&lt;br /&gt;            .collect(hashSetCollector);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Set.of(1, 2, 3), set);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/MutableBagIterable.html&quot;&gt;MutableBagIterable&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The interface MutableBagIterable is a parent interface of MutableBag and MutableSortedBag. In addition to the methods it inherits from java.util.Collection and MutableCollection, it also includes addOccurrences and removeOccurrences. A Bag looks like a Collection and supports the same adding and removing semantics, but internally keeps a Map of keys to counts. These two methods allow you to increment or decrement the counts directly without having to loop and call add or remove a certain number of times.&lt;/p&gt;&lt;p&gt;The following code example shows how to use addOccurrences and removeOccurrences on MutableBagIterable.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void mutableBagIterable()&lt;br /&gt;{&lt;br /&gt;    MutableBagIterable&amp;lt;Integer&amp;gt; bagIterable1 = Bags.mutable.with(1);&lt;br /&gt;&lt;br /&gt;    // addOccurences&lt;br /&gt;    bagIterable1.addOccurrences(2, 4);&lt;br /&gt;    bagIterable1.addOccurrences(3, 6);&lt;br /&gt;&lt;br /&gt;    // removeOccurences&lt;br /&gt;    bagIterable1.removeOccurrences(2, 2);&lt;br /&gt;    bagIterable1.removeOccurrences(3, 3);&lt;br /&gt;&lt;br /&gt;    Bag&amp;lt;Integer&amp;gt; expected1 = Bags.mutable.withOccurrences(1, 1, 2, 2, 3, 3);&lt;br /&gt;    Assertions.assertEquals(expected1, bagIterable1);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/stack/MutableStack.html&quot;&gt;MutableStack&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The one collection interface that does not extend java.util.Collection or MutableCollection is MutableStack. MutableStack defines push and pop for adding and removing elements in LIFO (Last-in, First-out) order. The return result of push is void, and the return result of pop is the element at the top of the stack that is removed. There are variations of pop that take a count, and that will return a List of elements popped off the stack.&lt;/p&gt;&lt;p&gt;The following code example shows how to use push and variations of pop on a MutableStack.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void mutableStack()&lt;br /&gt;{&lt;br /&gt;    MutableStack&amp;lt;Integer&amp;gt; stack = Stacks.mutable.empty();&lt;br /&gt;&lt;br /&gt;    // push&lt;br /&gt;    stack.push(1);&lt;br /&gt;    stack.push(2);&lt;br /&gt;    stack.push(3);&lt;br /&gt;&lt;br /&gt;    var expected1 = Stacks.mutable.with(1, 2, 3);&lt;br /&gt;    Assertions.assertEquals(expected1, stack);&lt;br /&gt;&lt;br /&gt;    // pop&lt;br /&gt;    Assertions.assertEquals(3, stack.pop());&lt;br /&gt;    Assertions.assertEquals(2, stack.pop());&lt;br /&gt;    Assertions.assertEquals(1, stack.pop());&lt;br /&gt;&lt;br /&gt;    // push&lt;br /&gt;    expected1.forEach(stack::push);&lt;br /&gt;&lt;br /&gt;    var expected2 = Stacks.mutable.with(3, 2, 1);&lt;br /&gt;    Assertions.assertEquals(expected2, stack);&lt;br /&gt;&lt;br /&gt;    // pop with count&lt;br /&gt;    ListIterable&amp;lt;Integer&amp;gt; popCount = stack.pop(3);&lt;br /&gt;&lt;br /&gt;    var expected3 = Lists.mutable.with(1, 2, 3);&lt;br /&gt;    Assertions.assertEquals(expected3, popCount);&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Immutable Collections&lt;/h3&gt;&lt;p&gt;The ImmutableCollection interface is the base interface for all immutable collections in Eclipse Collections with the exception of ImmutableStack. ImmutableCollection does not extend java.util.Collection, because if it did, it would essentially be a contractually mutable interface.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ELNuIRRL9WRmkb8JkNX-hg.png&quot; /&gt;&lt;figcaption&gt;Immutable Collection interfaces with newWith*/newWithout* methods in Eclipse Collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In Eclipse Collections, the ImmutableCollection interfaces are contractually immutable. This means they have no mutating methods defined on the interfaces. The implementations of ImmutableCollection are also structurally immutable.&lt;/p&gt;&lt;p&gt;The following blog explains how an ImmutableCollection hierarchy could be defined using Sealed Types in Java to provide the trifecta of immutability — &lt;em&gt;contractual&lt;/em&gt;, &lt;em&gt;structural&lt;/em&gt;, and &lt;em&gt;verifiable&lt;/em&gt;. Eclipse Collections only supports &lt;em&gt;contractual&lt;/em&gt; and &lt;em&gt;structural&lt;/em&gt; immutability today.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/immutable-collections-in-java-using-sealed-types-ae8eb580fc1e&quot;&gt;Immutable Collections in Java using Sealed Types&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html&quot;&gt;ImmutableCollection&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Adding items to or removing items from an ImmutableCollection is not possible. What is possible is copying the elements of the ImmutableCollection to a new ImmutableCollection with a new element or without an existing element. While it is possible to grow and shrink ImmutableCollection instances this way, it may not be desirable. Every call to newWith* or newWithout* will result in a copy of the ImmutableCollection being made. If a lot of adds or removes are required, it would be advisable to convert the ImmutableCollection to a MutableCollection type first and then finally call toImmutable after all of the adds and/or removes are complete.&lt;/p&gt;&lt;p&gt;Here are some examples of using the methods newWith, newWithAll, newWithout and newWithoutAll on an ImmutableCollection.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void immutableCollection()&lt;br /&gt;{&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; collection = Lists.immutable.empty();&lt;br /&gt;&lt;br /&gt;    // newWith&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyAdd1 = collection.newWith(1);&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyAdd2 = copyAdd1.newWith(2);&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyAdd3 = copyAdd2.newWith(3);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.with(1), copyAdd1);&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.with(1,2), copyAdd2);&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.with(1,2,3), copyAdd3);&lt;br /&gt;&lt;br /&gt;    // newWithout&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyRemove3 = copyAdd3.newWithout(3);&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyRemove2 = copyRemove3.newWithout(2);&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyRemove1 = copyRemove2.newWithout(1);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.with(1,2), copyRemove3);&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.with(1), copyRemove2);&lt;br /&gt;    Assertions.assertEquals(Lists.immutable.empty(), copyRemove1);&lt;br /&gt;&lt;br /&gt;    // newWithAll&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyAddAll = &lt;br /&gt;        collection.newWithAll(Lists.mutable.with(1, 2, 3));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Lists.mutable.with(1,2,3), copyAddAll);&lt;br /&gt;&lt;br /&gt;    // newWithoutAll&lt;br /&gt;    ImmutableCollection&amp;lt;Integer&amp;gt; copyRemoveAll = &lt;br /&gt;        copyAddAll.newWithoutAll(Lists.mutable.with(1, 2));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Lists.mutable.with(3), copyRemoveAll);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Co-variant return types for newWith* methods&lt;/h4&gt;&lt;p&gt;The interfaces &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/list/ImmutableList.html&quot;&gt;ImmutableList&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/ImmutableSet.html&quot;&gt;ImmutableSet&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/ImmutableBag.html&quot;&gt;ImmutableBag&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/sorted/ImmutableSortedSet.html&quot;&gt;ImmutableSortedSet&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/sorted/ImmutableSortedBag.html&quot;&gt;ImmutableSortedBag&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/ImmutableBagIterable.html&quot;&gt;ImmutableBagIterable&lt;/a&gt;, and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/set/ImmutableSetIterable.html&quot;&gt;ImmutableSetIterable&lt;/a&gt; all override newWith, newWithAll, newWithout, and newWithoutAll from ImmutableCollection providing a more specific return type.&lt;/p&gt;&lt;p&gt;The following code examples show how the newWith method is covariant by collection type in Eclipse Collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void covariantReturnTypesForNewWithMethods()&lt;br /&gt;{&lt;br /&gt;    // newWith - ImmutableList&lt;br /&gt;    ImmutableList&amp;lt;?&amp;gt; list = Lists.immutable.empty()&lt;br /&gt;            .newWith(&quot;1&quot;)&lt;br /&gt;            .newWith(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(List.of(&quot;1&quot;, &quot;2&quot;), list);&lt;br /&gt;&lt;br /&gt;    // newWith - ImmutableSet&lt;br /&gt;    ImmutableSet&amp;lt;?&amp;gt; set = Sets.immutable.empty()&lt;br /&gt;            .newWith(&quot;1&quot;)&lt;br /&gt;            .newWith(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Set.of(&quot;1&quot;, &quot;2&quot;), set);&lt;br /&gt;&lt;br /&gt;    // with - MutableBag&lt;br /&gt;    ImmutableBag&amp;lt;?&amp;gt; bag = Bags.immutable.empty()&lt;br /&gt;            .newWith(&quot;1&quot;)&lt;br /&gt;            .newWith(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(Bags.mutable.with(&quot;1&quot;, &quot;2&quot;), bag);&lt;br /&gt;&lt;br /&gt;    // with - MutableSortedSet&lt;br /&gt;    ImmutableSortedSet&amp;lt;?&amp;gt; sortedSet = SortedSets.immutable.empty()&lt;br /&gt;            .newWith(&quot;1&quot;)&lt;br /&gt;            .newWith(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(SortedSets.mutable.with(&quot;1&quot;, &quot;2&quot;), sortedSet);&lt;br /&gt;&lt;br /&gt;    // with - MutableSortedBag&lt;br /&gt;    ImmutableSortedBag&amp;lt;?&amp;gt; sortedBag = SortedBags.immutable.empty()&lt;br /&gt;            .newWith(&quot;1&quot;)&lt;br /&gt;            .newWith(&quot;2&quot;);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(SortedBags.mutable.with(&quot;1&quot;, &quot;2&quot;), sortedBag);&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Primitive Collections&lt;/h3&gt;&lt;p&gt;The methods for adding elements to and removing elements from primitive collections are very similar to their object collection counterparts. On mutable primitive collections, there are methods named add, addAll, remove, removeAll, with, withAll, without, withoutAll. There are covariant overrides for the with* methods. On the immutable primitive collections there are methods names newWith, newWithAll, newWithout, newWithoutAll and there are also covariant overrides for each of these methods on the various container types (List, Set, Bag, Stack).&lt;/p&gt;&lt;p&gt;The following are some examples of using various adding/removing methods on mutable primitive collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void mutablePrimitiveCollections()&lt;br /&gt;{&lt;br /&gt;    MutableIntSet set = IntSets.mutable.empty();&lt;br /&gt;&lt;br /&gt;    // add&lt;br /&gt;    Assertions.assertTrue(set.add(1));&lt;br /&gt;    Assertions.assertFalse(set.add(1));&lt;br /&gt;&lt;br /&gt;    // remove&lt;br /&gt;    Assertions.assertTrue(set.remove(1));&lt;br /&gt;    Assertions.assertFalse(set.remove(1));&lt;br /&gt;&lt;br /&gt;    // with&lt;br /&gt;    set.with(1).with(2).with(3).with(4);&lt;br /&gt;    MutableIntSet expected1 = IntSets.mutable.with(1, 2, 3, 4);&lt;br /&gt;    Assertions.assertEquals(expected1, set);&lt;br /&gt;&lt;br /&gt;    // without&lt;br /&gt;    set.without(2).without(4);&lt;br /&gt;    MutableIntSet expected2 = IntSets.mutable.with(1, 3);&lt;br /&gt;    Assertions.assertEquals(expected2, set);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The following are some examples of using various growing/shrinking methods on immutable primitive collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void immutablePrimitiveCollections()&lt;br /&gt;{&lt;br /&gt;    // newWith&lt;br /&gt;    ImmutableIntSet set1 = IntSets.immutable.empty()&lt;br /&gt;            .newWith(1).newWith(2).newWith(3).newWith(4).newWith(5);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(IntSets.mutable.with(1, 2, 3, 4, 5), set1);&lt;br /&gt;&lt;br /&gt;    // newWithout&lt;br /&gt;    ImmutableIntSet set2 = IntSets.immutable.with(1, 2, 3, 4, 5)&lt;br /&gt;            .newWithout(1).newWithout(3).newWithout(5);&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(IntSets.mutable.with(2, 4), set2);&lt;br /&gt;&lt;br /&gt;    // newWithAll&lt;br /&gt;    ImmutableIntSet set3 = set2.newWithAll(IntSets.mutable.with(1, 3, 5));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(set1, set3);&lt;br /&gt;&lt;br /&gt;    // newWithoutAll&lt;br /&gt;    ImmutableIntSet set4 = set3.newWithoutAll(IntSets.mutable.with(1, 3, 5));&lt;br /&gt;&lt;br /&gt;    Assertions.assertEquals(set2, set4);&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Final Thoughts&lt;/h3&gt;&lt;p&gt;Thank you for taking the time to read this blog. I hope this will be a good reference for folks to refer to in the future. I tried to be as comprehensive as possible. In the next blog in this series, I will cover in depth how to convert between collection types using converted methods.&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=43f9f05a46ae&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 21 Mar 2023 14:13:18 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Organising Your Eclipse Open Source Project Team</title>
	<guid isPermaLink="true">http://blog.waynebeaton.ca/posts/edp/organising-project-team/</guid>
	<link>http://blog.waynebeaton.ca/posts/edp/organising-project-team/</link>
	<description>Originally posted on January 27, 2020
The Eclipse Foundation Development Process (EDP) says nothing about how teams should organise.
The EDP defines a committer role: committers are those developers who have the ability to make decisions for the project (e.g., push commits to project Git repositories and configure build servers). We often say that the committers are the ones with the real power: theyâ€™re the ones that hold all of the keys to all of the project resources.</description>
	<pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Diagram Editors in Theia with Eclipse GLSP</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/03/16/diagram-editors-in-theia-with-eclipse-glsp/</guid>
	<link>https://eclipsesource.com/blogs/2023/03/16/diagram-editors-in-theia-with-eclipse-glsp/</link>
	<description>&lt;p&gt;Eclipse GLSP became the default solution for diagram editors for many web-based tool projects. Although GLSP can be used independently, Eclipse Theia is the reference target for GLSP. We recently gave...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/03/16/diagram-editors-in-theia-with-eclipse-glsp/&quot; rel=&quot;nofollow&quot;&gt; Diagram Editors in Theia with Eclipse GLSP&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.29 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink203</guid>
	<link>https://eclipse.org/webtools/releases/3.29</link>
	<description>&lt;div&gt;
      The Eclipse Web Tools Platform 3.29 has been released!
      &lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
      and updates can be performed using the Eclipse IDE 2023-03
      &lt;a href=&quot;http://download.eclipse.org/releases/2023-03/&quot;&gt;Update Site&lt;/a&gt;
      or through any of the related
      &lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
      .
      Release 3.29 is included in the 2023-03
      &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2023-03/r/eclipse-ide-enterprise-java-and-web-developers&quot;&gt;
        Eclipse IDE for Enterprise Java and Web Developers
      &lt;/a&gt;
      , with selected portions also included in several
      &lt;a href=&quot;https://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
      . Adopters can download
      &lt;a href=&quot;https://download.eclipse.org/webtools/downloads/drops/R3.29.0/R-3.29.0-20230303230236/repository/&quot;&gt;the R3.29 p2 repository&lt;/a&gt;
      directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink203&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 15 Mar 2023 22:59:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Take the 2023 Jakarta EE Developer Survey</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/take-2023-jakarta-ee-developer-survey</guid>
	<link>https://newsroom.eclipse.org/news/announcements/take-2023-jakarta-ee-developer-survey</link>
	<description>This is the sixth edition of the survey, which started in 2018. Since its inception, thousands of software developers, architects, and decision-makers from around the world have participated.</description>
	<pubDate>Wed, 15 Mar 2023 13:00:00 +0000</pubDate>
</item>
<item>
	<title>Mikael Barbero: New SLSA++ Survey Reveals Real-World Developer Approaches to Software Supply Chain Security</title>
	<guid isPermaLink="true">https://mikael.barbero.tech/blog/post/2023-03-15-slsa-pp-survey/</guid>
	<link>https://mikael.barbero.tech/blog/post/2023-03-15-slsa-pp-survey/</link>
	<description>&lt;p&gt;Answering even basic questions about software supply chain security has been surprisingly hard. For instance, how widespread are the different practices associated with software supply chain security? And do software professionals view these practices as useful or not? Easy or hard? To help answer these and related questions, Chainguard, the &lt;a href=&quot;https://www.eclipse.org/org/foundation/&quot;&gt;Eclipse Foundation&lt;/a&gt;, the &lt;a href=&quot;https://foundation.rust-lang.org/&quot;&gt;Rust Foundation&lt;/a&gt;, and the &lt;a href=&quot;https://openssf.org/&quot;&gt;Open Source Security Foundation&lt;/a&gt; (OpenSSF) partnered to field a &lt;a href=&quot;https://outreach.eclipse.foundation/slsa-supply-chain-security-survey&quot;&gt;software supply chain security survey&lt;/a&gt;. The questions were primarily, but not exclusively, derived from the security requirements associated with the &lt;a href=&quot;https://slsa.dev/&quot;&gt;Supply-chain Levels for Software Artifacts&lt;/a&gt; (SLSA) supply chain integrity framework version 0.1 (the version when the survey was conducted), hence SLSA++.&lt;/p&gt;
&lt;p&gt;In light of the recent &lt;a href=&quot;https://www.whitehouse.gov/briefing-room/statements-releases/2023/03/02/fact-sheet-biden-harris-administration-announces-national-cybersecurity-strategy/&quot;&gt;White House National Cybersecurity Strategy&lt;/a&gt;, which emphasizes organizations use best practices and frameworks for secure software development, it’s important to understand how individual contributors responsible for this work–like developers, open source maintainers and security practitioners–are adopting software supply chain security practices and guidelines. The new SLSA++ survey provides insights into these trends, what’s working and what’s not working.&lt;/p&gt;
&lt;p&gt;The survey, conducted in the summer and fall of 2022, includes data from nearly 170 respondents at a wide range of organizations, large and small, some security-focused in their role and others not. All respondents answered a series of questions for ten different software supply chain security practices. Three key findings stand out:&lt;/p&gt;
&lt;h2 id=&quot;some-software-supply-chain-security-practices-are-already-widely-adopted&quot;&gt;Some software supply chain security practices are already widely adopted.&lt;/h2&gt;
&lt;p&gt;Many practices already have strong or moderate adoption. For instance, over half of the respondents report always using a centralized build service. Other practices, such as digital signatures, were practiced less often: only 25% of respondents reported that their team always signs built artifacts. These findings are consistent with &lt;a href=&quot;https://cloud.google.com/blog/products/devops-sre/dora-2022-accelerate-state-of-devops-report-now-out&quot;&gt;Google’s 2022 State of DevOps report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;figure&gt;
&lt;img alt=&quot;Prevalence of Selected Software Supply Chain Security Practices&quot; src=&quot;https://mikael.barbero.tech/blog/post/2023-03-15-slsa-pp-survey/slsapp.jpg&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;most-practices-are-considered-helpful-though-there-is-surprisingly-little-variation-in-the-perceived-level-of-helpfulness&quot;&gt;Most practices are considered helpful though there is surprisingly little variation in the perceived level of helpfulness.&lt;/h2&gt;
&lt;p&gt;For each software supply chain security practice in the survey, at least 50% of the respondents labeled the practice as either extremely helpful or very helpful. Surprisingly though, the perceived helpfulness varies only slightly from practice to practice among the practices surveyed. Finally, the extent to which a participant views a particular practice as helpful is positively correlated with the likelihood that the participant’s organization adopts that practice. Whether these practices are viewed as helpful and then used or whether used practices are used and then viewed as helpful can’t be determined from the survey data.&lt;/p&gt;
&lt;h2 id=&quot;some-slsa-practices-are-considered-substantially-more-difficult-than-others&quot;&gt;Some SLSA practices are considered substantially more difficult than others.&lt;/h2&gt;
&lt;p&gt;Hermetic builds and reproducible builds were considered much more difficult than the other practices. Over 50% of respondents stated that those practices were either extremely difficult or very difficult. Other practices, such as scanning container images, were considered relatively easy. Additionally, the perceived difficulty of these practices had no statistically significant relationship with adoption.&lt;/p&gt;
&lt;p&gt;In summary, the survey results suggest that software supply chain security practices are not an unattainable ideal. Some software supply chain security practices already enjoy widespread adoption. Also importantly, because perceived usefulness, not difficulty, appears to currently explain trends in adoption of these practices, parties interested in promoting these practices should consider explaining the benefits of these different practices rather than simply focusing on better tools.&lt;/p&gt;
&lt;p&gt;A report detailing the survey, including its methodology, can be found &lt;a href=&quot;https://outreach.eclipse.foundation/slsa-supply-chain-security-survey&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If interested in learning more about the findings and how organizations can implement the SLSA framework join Chainguard, OpenSSF, Rust Foundation and Eclipse Foundation for a virtual discussion on March 22, 2023 from 11-12 PM ET / 8-9 AM PT. Sign up for a calendar reminder &lt;a href=&quot;https://www.crowdcast.io/c/slsa-practice&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authors: David A. Wheeler, The Linux Foundation; John Speed Meyers, Chainguard; Mikaël Barbero, Eclipse Foundation; and Rebecca Rumbul, Rust Foundation&lt;/strong&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 15 Mar 2023 12:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Adoptium Working Group Reports Significant Momentum for Open Source Java in 2023</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/adoptium-working-group-reports-significant-momentum-open-source-java-2023</guid>
	<link>https://newsroom.eclipse.org/news/announcements/adoptium-working-group-reports-significant-momentum-open-source-java-2023</link>
	<description>&lt;p&gt;&lt;strong&gt;BRUSSELS, Belgium – &lt;/strong&gt;&lt;strong&gt;MARCH 14, 2023&lt;/strong&gt;&lt;strong&gt; – &lt;/strong&gt;The&lt;a href=&quot;https://www.eclipse.org/&quot;&gt; Eclipse Foundation&lt;/a&gt;, one of the world’s largest open source software foundations, in collaboration with the &lt;a href=&quot;https://adoptium.net/&quot;&gt;Adoptium Working Group&lt;/a&gt;, today announced significant momentum for the global open source Java ecosystem. This momentum comes in the wake of new licensing fee structures being introduced into the industry. In some cases, enterprises that have paid tens of thousands of dollars are now facing fees of millions of dollars for access to Java. &lt;/p&gt;

&lt;p&gt;As a result, the uptake of free-to-use high-quality Java has never been higher. In February 2023 the Eclipse Foundation delivered over 12.3M downloads of Java SE TCK certified and AQAvit quality verified Eclipse Temurin binaries, more than double the number delivered in the same month last year. Eclipse Temurin has also become the default Java option for GitHub Actions, and multiple widely used cloud container images. As the entire open source Java ecosystem continues to experience a Renaissance, millions of developers and large Enterprise users are turning to the &lt;a href=&quot;https://adoptium.net/marketplace/&quot;&gt;Adoptium Marketplace&lt;/a&gt; for their open Java runtimes. What’s more, the Adoptium Working Group is welcoming new strategic and enterprise members including Bloomberg, Google, and Rivos.&lt;/p&gt;

&lt;p&gt;“In a macroeconomic climate where we are all forced to do more with less, options like Eclipse Temurin mean that businesses have choices for free-to-use quality Java runtimes without having to expend additional resources,” said Mike Milinkovich, executive director of the Eclipse Foundation. “With new members joining every month, the quality and consistency of the Adoptium Working Group’s output will only continue to grow to address that pressure.”&lt;/p&gt;

&lt;p&gt;The Adoptium Working Group, which was founded by multiple participants, including many Java developers and vendors such as Alibaba Cloud, Azul, Huawei, IBM, iJUG, Microsoft, and Red Hat, provides the Java ecosystem with fully compatible, high-quality distributions of Java based on OpenJDK source code. For enterprises that rely on Java and wish to ensure an open, community-led future for this important open source option, joining the Working Group represents a critical step in taking control of their own technical destiny. &lt;/p&gt;

&lt;p&gt;“2023 is shaping up to be an incredibly productive year for the Adoptium Working Group and for the entire open source Java ecosystem,” said Tim Ellison, PMC Lead for Eclipse Adoptium. “With our focus on secure development practices and high quality deliveries there has never been a better time for organizations to choose a free-to-use Java runtime.”&lt;/p&gt;

&lt;p&gt;The Eclipse Adoptium project and the governing Adoptium Working Group are the continuation of the original AdoptOpenJDK mission, which was established in 2017 to address the general lack of an open, vendor-neutral, reproducible build and test system for OpenJDK across multiple platforms. Adoptium is now the leading provider of high-quality OpenJDK-based binaries used by Java developers across embedded systems, desktops, traditional servers, modern cloud platforms, and mainframes. The Adoptium Marketplace extends this leadership role and gives even more organizations a means of distributing their binaries. &lt;/p&gt;

&lt;p&gt;If your organization is interested in participating in the Adoptium Working Group, you can view the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/adoptium-charter.php&quot;&gt;Charter&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/wpga/adoptium-working-group-participation-agreement.pdf&quot;&gt;Participation Agreement&lt;/a&gt;, or email us at &lt;a href=&quot;mailto:membership@eclipse.org&quot;&gt;membership@eclipse.org&lt;/a&gt;. You can also participate as a sponsor; interested parties can view the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/sponsorship/working-group-sponsorship-agreement.pdf&quot;&gt;Sponsorship Agreement&lt;/a&gt;. Both membership and sponsorship help assure sustainability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supporting Quotes from Adoptium Members: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“We are excited to participate in the Adoptium Working Group and contribute to the future of Eclipse Temurin. Google is committed to making Google Cloud a premier cloud for Java developers and workflows, and we believe an open, secure, and high-quality vendor-neutral JDK distribution is a critical component to that.” Dan Gazineu, Engineering Manager, Google Cloud SDK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Azul&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Third-party Java runtimes were already on the rise prior to Oracle’s recent pricing changes, and we expect that trend to accelerate rapidly moving forward,” said Simon Ritter, Deputy CTO, Azul. “Java provides immense value across the DevSecOps lifecycle, but Oracle’s new employee-based pricing is divorced from that value. Customers are increasingly frustrated over what they see as arbitrary pricing changes, audit risks and a lack of overall predictability. Thankfully, drop-in replacements for Oracle abound, and offer a compelling value for Java-based enterprises.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Red Hat&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“As a long term contributor to open source Java SE, Red Hat applauds the sustained growth and uptake of OpenJDK and Temurin throughout modern, business-critical enterprise software solutions,” said Mark Little, VP, Engineering, Red Hat. “Adoptium is a leading example of a community-powered approach to delivering secure, reliable and high-performing open source software. Red Hat’s engagement in the Adoptium Working Group and confidence in the community is reflected in our expanded support offerings that include development and production use cases of Temurin, similar to the award-winning support that comes with the Red Hat build of OpenJDK. We wish Adoptium every continued success.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Tue, 14 Mar 2023 10:45:00 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools for Eclipse 2023-03M3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.27.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.27.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.27.0.AM1 (Developer Milestone 1) build for Eclipse 2023-03M3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2023-03/4.27.0.AM1.html&quot;&gt;JBoss Tools 4.27.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.27.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;components-depreciation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#components-depreciation&quot;&gt;&lt;/a&gt;Components Depreciation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As previously announced &lt;a href=&quot;https://issues.redhat.com/browse/JBIDE-28678&quot;&gt;here&lt;/a&gt;, we’re in the process to remove the Central / update tab from JBossTools in next release. This work can be followed &lt;a href=&quot;https://issues.redhat.com/browse/JBIDE-28852&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;That means that all the current extra features that can be installed via this tab needs to be available through a new channel. This channel already exists as p2 repo, but using &lt;a href=&quot;https://www.eclipse.org/mpc/&quot;&gt;Eclipse Marketplace Client&lt;/a&gt; is more close to what’s existing right now.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Most of those additional features are already present in the &lt;a href=&quot;https://marketplace.eclipse.org/content/jboss-tools&quot;&gt;Jboss marketplace entry&lt;/a&gt;, so it’s just a matter of use it to install your favorite feature.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-application-explorer-view-service-creation-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-application-explorer-view-service-creation-support&quot;&gt;&lt;/a&gt;OpenShift Application Explorer view service creation support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The missing create service feature that was available with odo 2.X is now back in this release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.21.0.AM1.html#operator-based-services&quot;&gt;See the previous annoucement&lt;/a&gt; on this feature&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-application-explorer-view-service-binding-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-application-explorer-view-service-binding-support&quot;&gt;&lt;/a&gt;OpenShift Application Explorer view service binding support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you have created a service, you can link it to a component using a binding.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;link service&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/link-service.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new Hibernate 6.2 runtime provider incorporates Hibernate Core version 6.2.0.CR2, Hibernate Ant version 6.2.0.CR2 and Hibernate Tools version 6.2.0.CR2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.1 runtime provider now incorporates Hibernate Core version 6.1.7.Final, Hibernate Ant version 6.1.7.Final and Hibernate Tools version 6.1.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.15.Final and Hibernate Tools version 5.6.15.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.27.0.AM1.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stéphane Bouchet&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sat, 11 Mar 2023 12:06:25 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Product Liability Directive: More Bad News for Open Source</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1732</guid>
	<link>https://eclipse-foundation.blog/2023/03/10/product-liability-directive-more-bad-news-for-open-source/</link>
	<description>&lt;p&gt;In my previous two &lt;a href=&quot;https://eclipse-foundation.blog/2023/02/23/cyber-resilience-act-good-intentions-and-unintended-consequences/&quot;&gt;blog posts&lt;/a&gt; I discussed concerns with the European Cyber Resilience Act (“CRA”) which we believe will harm both the open source community and the innovation economy in Europe. But the CRA needs to be understood as part of a larger legislative framework. In this post we will examine the potential impact of the proposed changes to the European &lt;a href=&quot;https://ec.europa.eu/transparency/documents-register/detail?ref=COM(2022)495&amp;amp;lang=en&quot;&gt;Product Liability Directive&lt;/a&gt; (“PLD”) on the open source community and ecosystem. &lt;/p&gt;



&lt;p&gt;As in previous discussions I think it is important to note that the intentions of the PLD are good. No one can argue that the time has come to protect consumers from poor software. But at the same time, it is important to ensure that the consumer liability obligations are borne by the economic actors who deliver products and services to consumers, and not by the open source community which enables so much benefit to society by providing free software but does not share in the profits of the delivery. &lt;/p&gt;



&lt;p&gt;As I understand it, the purpose of the CRA is to establish which parties are &lt;em&gt;responsible &lt;/em&gt;for ensuring the quality of software products, particularly as it relates to cybersecurity. The purpose of the PLD is to establish which parties are &lt;em&gt;liable&lt;/em&gt; for defects which cause harm to individuals or their property. So strictly speaking, my assertion in my previous blog posts that the CRA will break the limited liability obligations that underpins free software was incorrect. It is the PLD which is doing that. &lt;/p&gt;



&lt;p&gt;The European Commission presented a draft of the revisions to the PLD last September, and it is going through the process of being adopted by the European Parliament and the Council of the European Union. As a Directive, the PLD will be interpreted by each member state of the European Union and applied to updates of the local laws in each country. The specific intent of these revisions are to update the PLD of 1985 to address issues related to the modern digital economy. One of the key features of the PLD is its “no fault liability” model where injured parties can seek redress without demonstrating any error or fault on the part of the product manufacturer. The proposed revision explicitly expands the scope of no fault liability to cover software and artificial intelligence, and adds “loss or corruption of data” as a harm that could be suffered by a consumer. &lt;/p&gt;



&lt;p&gt;There are numerous legal summaries of the PLD available, but &lt;a href=&quot;https://insightplus.bakermckenzie.com/bm/consumer-goods-retail_1/eu-modernised-product-liability-directive-proposal-finally-arrives&quot;&gt;this one&lt;/a&gt; from the law firm Baker Mackenzie provides a nice overview, as does &lt;a href=&quot;https://products.cooley.com/2022/10/06/radical-reform-of-eu-product-liability-laws-long-awaited-proposals-published/&quot;&gt;this one&lt;/a&gt; from the law firm Cooley. &lt;/p&gt;



&lt;p&gt;It has long been understood that product liability could not be completely waived by open source licenses in Europe. Hence, the “…to the extent permissible by law…” statements you see in many licenses. Since at least 1985, there have been strict provisions in Europe that you were always liable for harm caused to natural persons or their personal property as a result of using a defective product. From the perspective of an open source developer, the PLD extends and modernizes this legal framework in the following important ways:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;It explicitly extends the definition of product to include software and artificial intelligence;&lt;/li&gt;



&lt;li&gt;It explicitly extends the definition of harm to include loss or corruption of data;&lt;/li&gt;



&lt;li&gt;The definition of manufacturer (formerly producer) has been extended to cover developers, providers of software, providers of digital services, and online marketplaces;&lt;/li&gt;



&lt;li&gt;It makes it clear that a cybersecurity vulnerability is a product defect, and that failure to update a product to protect against a vulnerability may result in liability;&lt;/li&gt;



&lt;li&gt;It makes it clear that if a component is defective, liability may extend to the manufacturer of the component (e.g. the developer of the open source software), in addition to the manufacturer of the end product;&lt;/li&gt;



&lt;li&gt;Distribution of a product or component in Europe explicitly incurs liability obligations on the part of the distributor, unless they can identify a responsible economic actor in Europe; and&lt;/li&gt;



&lt;li&gt;There is an attempt to exclude open source from the provisions of the Directive, but as &lt;a href=&quot;https://eclipse-foundation.blog/2023/01/15/european-cyber-resiliency-act-potential-impact-on-the-eclipse-foundation/&quot;&gt;previously discussed&lt;/a&gt; the “…outside the course of a commercial activity…” language means that the exclusion is not helpful in practice. &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Article 7 of the PLD goes to great lengths to identify the economic operators who can be held liable for a defective product, with a particular emphasis on identifying an entity in Europe who can bear the responsibility for a defective product made available in the single market. If you parse Article 7, who get something like the following to determine the party in Europe liable for a defective product:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;If the manufacturer is European, then the manufacturer is liable.&lt;/li&gt;



&lt;li&gt;Otherwise, if the importer or manufacturer’s authorized representative are European, then the importer and/or manufacturer’s authorized representative are liable.&lt;/li&gt;



&lt;li&gt;If none of the above conditions apply, each distributor is liable (each distributor is given 1 month to identify one of the above economic operators to hold the bag)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Note that the manufacturer of a defective component also becomes liable.&lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;Should Open Source Developers be Worried?&lt;/h3&gt;



&lt;p&gt;I think they should. Particularly if they are located in Europe. &lt;/p&gt;



&lt;p&gt;Huge caveat here. I’ve been studying the PLD for a couple of weeks now, and every time I read it I think of more corner cases and more scenarios. If anyone finds fault in my analysis or logic, do please let me know!&lt;/p&gt;



&lt;h4 class=&quot;wp-block-heading&quot;&gt;Scenario One&lt;/h4&gt;



&lt;p&gt;Imagine a scenario where a year ago or so a consumer in Europe lost data as a result of using the Wizbang product from BigCo GmbH. The vulnerability in Wizbang was caused by the famous Log4shell bug. As part of its normal build process, BigCo downloaded the Apache Log4j jar file from Maven Central. Under the PLD framework, the Apache Software Foundation  (“ASF”) is the manufacturer of the Apache Log4j jar file and Sonatype (the company controlling Maven Central) is the distributor of the Log4j component as they made the Log4j software available to the European market. (The relevant definition reads “…‘making available on the market’ means any supply of a product for distribution, consumption or use on the Union market in the course of a commercial activity, whether in return for payment or free of charge”). Both the ASF and Sonatype are US based organizations.&lt;/p&gt;



&lt;p&gt;Under the PLD, BigCo, the ASF, and Sonatype are all ‘economic operators’ involved in the development of the Wizbang defective product. As mentioned above, Article 7 of the PLD lays out the liability obligations for each of the various types of economic operators. &lt;/p&gt;



&lt;p&gt;My read of the PLD is that as the European manufacturer of Wizbang and the importer of the Log4j component, BigCo GmbH would be liable to consumers of the defective product. I &lt;strong&gt;think&lt;/strong&gt; the ASF would not be held liable for the defect in Log4j because it does not meet the definition of an economic operator in Europe. I.e. the ASF has no legal presence in Europe. Similarly, Maven Central is a distributor in this context, but the algorithm in Article 7 puts the importer ahead of the distributor in the queue for liability obligations. &lt;/p&gt;



&lt;h4 class=&quot;wp-block-heading&quot;&gt;Scenario Two&lt;/h4&gt;



&lt;p&gt;Same as above, but instead the defective open source component is (say) the Eclipse Modeling Framework (EMF), so the component manufacturer is the Eclipse Foundation AISBL, a European-based open source foundation. &lt;/p&gt;



&lt;p&gt;My read of the PLD is that as the European manufacturers of the Wizbang product and the EMF component, BigCo GmbH and the Eclipse Foundation would both be jointly and severally liable to consumers of the defective product. If I am correct, this scenario puts European open source projects, communities, and foundations at a disadvantage relative to their international peers. &lt;/p&gt;



&lt;h4 class=&quot;wp-block-heading&quot;&gt;Summary&lt;/h4&gt;



&lt;p&gt;The good news is that I can’t think of a scenario where Maven Central, or services like it, become liable as a distributor under the PLD. The components they distribute would be used by a manufacturer and there are several layers of economic operators in front of a component distributor before liability results. The same seems to be true for open source foundations based outside of Europe. &lt;/p&gt;



&lt;p&gt;The bad news is that it does appear that the PLD as currently worded would expose European-based open source projects to product liability. I have to assume that this was an unintended consequence.&lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;Proposed Enhancements&lt;/h3&gt;



&lt;p&gt;I hypothesize that when some people think of open source software components and the open source supply chain, they think of something like a braking system module that is assembled into a passenger car. After all, terminology like “component” and “supply chain” lends itself perfectly to that interpretation. I believe that a closer analogy would be inputs to a chemical process. Don’t think of a “braking component”, think acetate or sulphuric acid. I think this analogy is correct because beyond the sheer malleability of software, it is important to recall that open source software is by definition not restricted to any field of use. Every piece of open source software can (and is) used for any purpose that anyone can find for it. To give just one example, the Eclipse IDE platform was designed to implement desktop developer tools. But over the years it has ended up being used in scientific instruments on the International Space Station, to control medical imaging devices, mission planning for the Mars Rover, operations control of major railway networks, and ground station control software for space satellites. The adopters of open source have rich imaginations indeed.&lt;/p&gt;



&lt;p&gt;The point of the above is that it is essential that open source software be excluded from the strict, no-fault liability obligations of the PLD. Not because open source developers are entitled to special treatment, but because the liability truly rests with the organization that placed the open source software into a product, and placed that product into the hands of a consumer. It is the act of using open source software that makes it critical, not the act of publishing or distributing it. &lt;/p&gt;



&lt;p&gt;To that end, I feel that the correct enhancement is to strengthen the exclusion of open source in the PLD to make it much clearer than it currently is.&lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;The Gory Details&lt;/h3&gt;



&lt;p&gt;For those who want to look into the language of the PLD, here are what I noticed as the relevant sections and what they mean. (Emphasis added by me in a few places.)&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(12) Products in the digital age can be tangible or intangible. Software, such as operating systems, firmware, computer programs, applications or AI systems, is increasingly common on the market and plays an increasingly important role for product safety. Software is capable of being placed on the market as a standalone product and may subsequently be integrated into other products as a component, and is capable of causing damage through its execution. In the interest of legal certainty it should therefore be clarified that software is a product for the purposes of applying no-fault liability, irrespective of the mode of its supply or usage, and therefore irrespective of whether the software is stored on a device or accessed through cloud technologies. The source code of software, however, is not to be considered as a product for the purposes of this Directive as this is pure information. &lt;strong&gt;The developer or producer of software, &lt;/strong&gt;including AI system providers within the meaning of [Regulation (EU) …/… (AI Act)],&lt;strong&gt; should be treated as a manufacturer.&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;So Recital 12 makes it clear that software is a product under the PLD and that the developer is the manufacturer. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(13) In order not to hamper innovation or research, &lt;strong&gt;this Directive should not apply to free and open-source software developed or supplied outside the course of a commercial activity.&lt;/strong&gt; This is in particular the case for software, including its source code and modified versions, that is openly shared and freely accessible, usable, modifiable and redistributable. However where software is supplied in exchange for a price or personal data is used other than exclusively for improving the security, compatibility or interoperability of the software, and is therefore supplied in the course of a commercial activity, the Directive should apply.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 13 provides a carve out for open source. However, it retains the same fatal flaw as the CRA in that the carve out applies only to “software developed or supplied outside the course of a commercial activity”, which is woefully misplaced if it is intended to provide any protection of the open source ecosystem from the scope of this legislation. To see why, please see Maarten Aertsen’s &lt;a href=&quot;https://blog.nlnetlabs.nl/open-source-software-vs-the-cyber-resilience-act/&quot;&gt;blog post&lt;/a&gt;. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(23) In order to reflect the increasing prevalence of inter-connected products, the assessment of a product’s safety should also take into account the effects of other products on the product in question. The effect on a product’s safety of its ability to learn after deployment should also be taken into account, to reflect the legitimate expectation that a product’s software and underlying algorithms are designed in such a way as to prevent hazardous product behaviour. In order to reflect that in the digital age many products remain within the manufacturer’s control beyond the moment at which they are placed on the market, the moment in time at which a product leaves the manufacturer’s control should also be taken into account in the assessment of a product’s safety. &lt;strong&gt;A product can also be found to be defective on account of its cybersecurity vulnerability.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 23 makes it clear that a cybersecurity vulnerability can be considered a product defect, and hence explicitly incur liability. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(26) The protection of the consumer requires that any manufacturer involved in the production process can be made liable, in so far as their product or a component supplied by them is defective. &lt;strong&gt;Where a manufacturer integrates a defective component from another manufacturer into a product, an injured person should be able to seek compensation for the same damage from either the manufacturer of the product or from the manufacturer of the component.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 26 makes it clear that if an open source component is integrated into a product, and that open source component is found to be defective, the developer of that open source component may be liable. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(38) The possibility for economic operators to avoid liability by proving that a defect came into being after they placed the product on the market or put it into service should also be restricted when a product’s defectiveness consists in the lack of software updates or upgrades necessary to address cybersecurity vulnerabilities and maintain the product’s safety. Such vulnerabilities can affect the product in such a way that it causes damage within the meaning of this Directive. In recognition of manufacturers’ responsibilities under Union law for the safety of products throughout their lifecycle, such as under Regulation (EU) 2017/745 of the European Parliament and of the Council,&lt;strong&gt; manufacturers should also be liable for damage caused by their failure to supply software security updates or upgrades that are necessary to address the product’s vulnerabilities in response to evolving cybersecurity risks. &lt;/strong&gt;Such liability should not apply where the supply or installation of such software is beyond the manufacturer’s control, for example where the owner of the product does not install an update or upgrade supplied for the purpose of ensuring or maintaining the level of safety of the product.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 38 makes it clear that a failure to properly update a product to protect any security vulnerabilities is considered a defect and incur liability on the part of the manufacturer. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(40) Situations may arise in which two or more parties are liable for the same damage, in particular where a defective component is integrated into a product that causes damage. In such a case,&lt;strong&gt; the injured person should be able to seek compensation both from the manufacturer that integrated the defective component into its product and from the manufacturer of the defective component itself.&lt;/strong&gt; In order to ensure consumer protection, all parties should be held liable jointly and severally in such situations. &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 40 makes it clear that the manufacturer of a defective component is liable to the consumer, as well as the manufacturer of the end product. &lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;(42) &lt;strong&gt;The objective of consumer protection would be undermined if it were possible to limit or exclude an economic operator’s liability through contractual provisions. Therefore no contractual derogations should be permitted.&lt;/strong&gt; For the same reason, it should not be possible for provisions of national law to limit or exclude liability, such as by setting financial ceilings on an economic operator’s liability.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Recital 42 makes it clear that the limitations of liability and no warranty clauses in open source licenses are superseded by the PLD.&lt;/p&gt;</description>
	<pubDate>Fri, 10 Mar 2023 13:49:50 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: The Eclipse Theia Community Release 2023-02</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/03/09/the-eclipse-theia-community-release-2023-02/</guid>
	<link>https://eclipsesource.com/blogs/2023/03/09/the-eclipse-theia-community-release-2023-02/</link>
	<description>&lt;p&gt;We are happy to announce the second Eclipse Theia community release “2023-02”, version 1.34.x!
Don’t know about Eclipse Theia, yet? It is the next-generation platform for building IDEs and tools for...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/03/09/the-eclipse-theia-community-release-2023-02/&quot; rel=&quot;nofollow&quot;&gt; The Eclipse Theia Community Release 2023-02&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Open Source Software Leader the Eclipse Foundation Previews its Showcase at Embedded World 2023</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/open-source-software-leader-eclipse-foundation-previews-its-showcase-embedded</guid>
	<link>https://newsroom.eclipse.org/news/announcements/open-source-software-leader-eclipse-foundation-previews-its-showcase-embedded</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Come see the Eclipse Foundation and Zettascale in Hall 4, Booth 4-554&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;BRUSSELS, Belgium – MARCH 8, 2023 – &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Eclipse Foundation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, one of the world’s largest open source software foundations, today announced a preview of what it will be showcasing at this year’s Embedded World Exhibition and Conference, taking place in Nuremberg, Germany from March 14-16. As one of the most highly anticipated technology events in all of Europe, Embedded World offers unprecedented insight into the world of embedded systems, from components and modules to operating systems, hardware and software design, M2M communication, services, and various issues related to complex system design. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;This year, the Eclipse Foundation will be showcasing its Software Defined Vehicle (SDV) Working Group and its SDV strategy, a look at open source security for the software supply chain, a spotlight on European Commission research projects on the Cloud-to-Edge continuum, its Eclipse IoT and Edge Native Working Group projects, and an overall educational strategy on how organizations can succeed with open source. The Eclipse Foundation will also be joined in its booth by OpenHardware and by member company Zettascale, an innovative firm contributing to open source communication middleware (Eclipse Zenoh &amp;amp; Eclipse Cyclone DDS) that underpin next-generation robotics, transportation, and mission-critical applications.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;“We’re very excited to be back to this great event in person,” said Mike Milinkovich, executive director of the Eclipse Foundation. “Embedded World is the ideal event for us, as it matches our growth markets and technical priorities perfectly.”&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Eclipse Foundation intends to provide Embedded World participants with deep insights into the following areas:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Software Defined Vehicle: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The SDV Working Group’s mission is to foster collaboration across industries to create an open technology platform for the software defined vehicle of the future. The working group community has chosen a “code first” approach to facilitate more agile and faster time-to-market software development.  Meet the thriving SDV community with projects from Bosch, Microsoft, Cariad, T-Systems and more. We will be presenting our projects, and our vision to build a first showcase SDV Distribution.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Security Best Practices for Embedded Systems: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Eclipse Foundation is committed to ensuring the security of its projects' software supply chain. We have a dedicated security team that focuses on developing and implementing robust security policies and we’re bringing this expertise to Embedded World. Our team is actively involved in providing guidance and education to our projects on the best practices for software security. You'll have the opportunity to learn about these best practices and how they can benefit your project and community. By promoting and implementing these best practices, we aim to create a secure environment that benefits both our projects and their communities. In addition to providing education and guidance on best practices, our security team also offers a range of services and resources to help our projects maintain the highest level of security. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Eclipse Research and our research projects on Cloud to Edge Continuum: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Eclipse Foundation has been a partner in publicly funded research projects since 2014. We help organizations to successfully create, publish, and sustain an open source software platform, making the results of research projects available for commercial and public exploitation. Visit us to learn more about five ongoing research projects shaping the future of the European Cloud to Edge Continuum:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;EuCloudEdgeIoT.eu: Building the European, Cloud, Edge &amp;amp; IoT Continuum for business and research &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;NEMO: Next Generation Meta Operating System&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;NEPHELE: A software stack and orchestration framework for the compute continuum&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;SPADE: Multi-purpose physical-cyber agri-forest drones ecosystem for governance and environmental observation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;TRANSACT: Towards safe and secure distributed cyber-physical systems&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;IoT, Edge Native and Sparkplug: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Eclipse Foundation is the home of over 50 open source projects related to IoT and Edge Computing. From protocol implementations to comprehensive platforms for software updates and device connectivity, our toolkit is the most comprehensive in the industry. Drop by to get an overview or stop for a short demo of key components. We are particularly proud of our Sparkplug open specification, which brings out-of-the-box interoperability to MQTT infrastructure and is on its way to become an ISO/IEC international standard. You will also get to meet Frédéric Desbiens, author of “Building Enterprise IoT Solutions with Eclipse IoT Technologies,” published by Apress in December 2022. Bring your copy and get it signed!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Learn How to Succeed with Open Source: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We will present how open source best practices, and how, beyond open source, the Eclipse Foundation enables open collaborations between industry players. This presentation targets more specifically companies that are new to open source and want to understand how to better embrace open source as a strategic advantage.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.295; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;If your organization is interested in participating in these projects or would like to meet with us at Embedded World conference, please stop by our booth in Hall 4, Booth 4-554, or email us at membership@eclipse.org.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;About the Eclipse Foundation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://twitter.com/EclipseFdn&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;@EclipseFdn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;LinkedIn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; or visit&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://eclipse.org&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;eclipse.org&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001; background-color: #ffffff; padding: 0pt 0pt 8pt 0pt;&quot;&gt;&lt;span style=&quot;font-size: 9pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #222222;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;About ZettaScale &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001; background-color: #ffffff; padding: 0pt 0pt 8pt 0pt;&quot;&gt;&lt;span style=&quot;font-size: 10.5pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1e1e1e;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;ZettaScale's mission is to bring to every connected human and machine the unconstrained freedom to communicate, compute and store — anywhere, at any scale, efficiently and securely. The company develops open source communication middleware (Eclipse Zenoh &amp;amp; Eclipse Cyclone DDS) that underpins next-generation robotics, transportation and mission critical applications. As devices in the physical world become connected, instrumented and interdependent, ZettaScale enables device creators to easily achieve robust, secure and scalable communication.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001; text-align: center; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;###&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Media contacts:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Stephanie Brüls / Susanne Pawlik&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Sendlinger Straße 42A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;80331 Munich&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;EclipseFoundation@schwartzpr.de&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;+49 (89) 211 871 – 64 / -35&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jay Nichols&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;jay@nicholscomm.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.3800000000000001;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;+1 408-772-1551&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 08 Mar 2023 12:00:03 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 3.2.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2023-03-08-release-announcement-320.html</guid>
	<link>https://www.eclipse.org/ditto/2023-03-08-release-announcement-320.html</link>
	<description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.2.0&quot;&gt;3.2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Version 3.2.0 brings a new &lt;strong&gt;History API&lt;/strong&gt;, &lt;strong&gt;Eclipse Hono&lt;/strong&gt; connection type, &lt;strong&gt;case-insensitive searches&lt;/strong&gt; and
other smaller improvements, e.g. on the Ditto UI and in the JS client.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you use Eclipse Ditto it would be great to support the project by putting your logo there.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.2.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New &lt;strong&gt;History API&lt;/strong&gt; in order to be able to:
    &lt;ul&gt;
      &lt;li&gt;access historical state of things/policies/connections (with either given revision number or timestamp)&lt;/li&gt;
      &lt;li&gt;stream persisted events of things/policies via async APIs (WebSocket, Connections) and things also via existing SSE (Server-Sent-Events) API&lt;/li&gt;
      &lt;li&gt;configure deletion retention of events in the database for each entity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Addition of new &lt;strong&gt;Eclipse Hono&lt;/strong&gt; connection type for Ditto managed connections&lt;/li&gt;
  &lt;li&gt;Option to do &lt;strong&gt;case-insensitive searches&lt;/strong&gt; and addition of a new RQL operator to declare case-insensitive like: &lt;code class=&quot;highlighter-rouge&quot;&gt;ilike&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;UI enhancements:
    &lt;ul&gt;
      &lt;li&gt;Push notifications on the Ditto UI using SSE (Server-Sent-Events), e.g. on thing updates&lt;/li&gt;
      &lt;li&gt;Autocomplete functionality for the search slot&lt;/li&gt;
      &lt;li&gt;Added configuring &lt;code class=&quot;highlighter-rouge&quot;&gt;Bearer&lt;/code&gt; auth type for the “devops” authentication&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JavaScript client:
    &lt;ul&gt;
      &lt;li&gt;Support for &lt;strong&gt;“merge” / “patch”&lt;/strong&gt; functionality in the &lt;strong&gt;JS client&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional enhancements are also included:&lt;/p&gt;

&lt;p&gt;None in this release.&lt;/p&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Undo creating implicitly created policy as part of thing creation if creation of thing failed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_320.html&quot;&gt;3.2.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Rodrigo Pinto: Eclipse Cloud DevTools Contributor of the Month!</title>
	<guid isPermaLink="false">7322 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/rodrigo-pinto-eclipse-cloud-devtools-contributor-month</link>
	<description>&lt;span&gt;Rodrigo Pinto: Eclipse Cloud DevTools Contributor of the Month!&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award for this month goes to Rodrigo Pinto of &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt; for his significant contributions to &lt;a href=&quot;https://github.com/eclipse-cdt-cloud/theia-trace-extension&quot;&gt;Trace Compass Cloud&lt;/a&gt; and the Eclipse Cloud DevTools Ecosystem. He is a committer on Trace Compass’s UI components based on Eclipse Theia. To hear him, check out his &lt;a href=&quot;https://youtu.be/KHuIv6JVo2Q&quot;&gt;talk at TheiaCon 2022&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://www.rodrigoplp.com/static/1f44aac2f9831cf21499cdb713bbe8c8/bba09/Eu.webp&quot; style=&quot;height: 247px; width: 200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rodrigo has worked on the Trace Compass project and innovated it in many positive ways. To start, he has helped make the UI faster and more responsive. One of his key contributions was progressive loading in Eclipse Trace Compass. When loading a multi-gigabyte or terabyte sized trace, now the user can see the progress in an intuitive way. Rodrigo’s focus on making data more digestible brings great value to the project. He is working on porting trace compass to a VS Code extension.&lt;br /&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://www.eclipse.org/tracecompass/img/tc_icon_256x256.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rodrigo is the ideal open source engineer, as he balances strong empathy, a curiosity towards new platforms and techniques as well as a drive for improvements. He has worked diligently on many aspects of his own volition, such as improving documentation and training videos. These items are not in the git log of a project, but contribute to them in an equal way. He is proof that a project is more than its code. Rodrigo has always driven to make Trace Compass a more inclusive environment by ramping up new talent whenever he could.&lt;br /&gt;
He has also collaborated with UX developers and universities to help build the community.&lt;/p&gt;

&lt;p&gt;These and many more reasons are why this Eclipse Cloud DevTools contributor award is very well deserved, congratulations Rodrigo!&lt;/p&gt;

&lt;p&gt;The Cloud DevTools Working Group provides a vendor-neutral ecosystem of open-source projects focused on defining, implementing and promoting best-in-class web and cloud-based development tools. It is hosted at the Eclipse Foundation, current members of the group include &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=656&quot;&gt;IBM&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=731&quot;&gt;RedHat&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=665&quot;&gt;SAP&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=848&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1069&quot;&gt;Renesas&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1194&quot;&gt;TypeFox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Mon, 2023-03-06 14:11&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia&quot; hreflang=&quot;en&quot;&gt;Theia&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia-contributor-award&quot; hreflang=&quot;en&quot;&gt;Theia Contributor Award&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Mon, 06 Mar 2023 19:11:35 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: 2023 Eclipse Board of Directors Election Results</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/2023-eclipse-board-directors-election-results</guid>
	<link>https://newsroom.eclipse.org/news/announcements/2023-eclipse-board-directors-election-results</link>
	<description>&lt;p&gt;The Eclipse Foundation would like to thank everyone who participated in this year’s elections process and is pleased to announce the results of the 2023 Eclipse Foundation Contributing Member and Committer Member elections for representatives to the Foundation’s Board of Directors. These positions are a vitally important part of the Eclipse Foundation's governance.&lt;/p&gt;
&lt;p&gt;Gunnar Wagenknecht is returning, and Johannes Matheis and Hendrik Ebbers will be joining as Contributing Member representatives. Ed Merks, Matthew Khouzam, and Shelley Lambert will all be returning as the Committer representatives. Congratulations! We look forward to working with them on the Board, effective April 1, 2023.&lt;/p&gt;
&lt;p&gt;We would like to thank George Adams, Jan Westercamp, Otávio Santana, and Naci Dai for running in this year’s election. We would also like to thank Torkild Ulvøy Resheim for his many years of service to the Eclipse Foundation Board and the community which it governs.&lt;/p&gt;</description>
	<pubDate>Mon, 06 Mar 2023 14:52:12 +0000</pubDate>
</item>
<item>
	<title>Mikael Barbero: March 2023 Update on Security improvements at the Eclipse Foundation</title>
	<guid isPermaLink="true">https://mikael.barbero.tech/blog/post/2023-03-03-update-security-improvemets/</guid>
	<link>https://mikael.barbero.tech/blog/post/2023-03-03-update-security-improvemets/</link>
	<description>&lt;p&gt;Thanks to &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/open-source-security-eclipse-foundation&quot;&gt;financial support&lt;/a&gt; from the &lt;a href=&quot;https://openssf.org/community/alpha-omega/&quot;&gt;OpenSSF’s Alpha-Omega project&lt;/a&gt;, the Eclipse Foundation is glad to have made significant improvements in the last couple of months.&lt;/p&gt;
&lt;h2 id=&quot;two-factor-authentication&quot;&gt;Two Factor Authentication&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse-tycho&quot;&gt;Eclipse Tycho&lt;/a&gt;, &lt;a href=&quot;https://github.com/eclipse-m2e&quot;&gt;Eclipse m2e&lt;/a&gt;, and &lt;a href=&quot;https://github.com/eclipse-rap&quot;&gt;Eclipse RAP&lt;/a&gt; have all enforced 2FA for all their committers on GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2701&quot;&gt;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2701&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2702&quot;&gt;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2702&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2611&quot;&gt;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2611&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Meanwhile, we’ve seen an increase of adoption of 2FA globally on all Eclipse Projects at Github, increasing from 63.7% to &lt;strong&gt;67%&lt;/strong&gt; since the begining of the year. We are now starting to actively enforce 2FA for projects with a dedicated GitHub organization.&lt;/p&gt;
&lt;h2 id=&quot;security-audits&quot;&gt;Security Audits&lt;/h2&gt;
&lt;p&gt;We have successfully initiated the 3 security audits that will all be performed by &lt;a href=&quot;https://www.trailofbits.com/&quot;&gt;Trail of Bits&lt;/a&gt; in collaboration with &lt;a href=&quot;https://ostif.org/&quot;&gt;OSTIF&lt;/a&gt;. The projects that will be covered in these audits are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/jetty/&quot;&gt;Eclipse Jetty&lt;/a&gt;: an open-source Java-based web server that provides a HTTP server and servlet container.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/jkube/&quot;&gt;Eclipse JKube&lt;/a&gt;: a toolkit for building container images and deploying them to Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mosquitto.org/&quot;&gt;Eclipse Mosquito&lt;/a&gt;: an open-source IoT platform that enables the development and management of connected devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Threat modeling for one out of the three audits have been completed. Code review is underway. The timeline has been locked in for threat modeling and code review for the second security audit. The schedule of the third one is still a work in progress, but will likely be delayed due to project’s constraint. This last one will likely complete in May.&lt;/p&gt;
&lt;h2 id=&quot;hiring&quot;&gt;Hiring&lt;/h2&gt;
&lt;p&gt;We have build capacity since the beginning of the year, &lt;a href=&quot;https://www.eclipse.org/org/foundation/staff.php&quot;&gt;hiring 3 talented people&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Marta Rybczynska&lt;/strong&gt;, Technical Program Manager. They bring a wealth of experience and knowledge to the team. She initially focusing on improving security / vulnerability policies, procedures, and guidelines that adhere to industry best practices. She started early January.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thomas Neidhart&lt;/strong&gt;, Software Engineer. He is initially focusing on SLSA attestation generation and GitHub management tooling. He started mid-January.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Francisco Perez&lt;/strong&gt;, Software Engineer. He will work closely with Eclipse Foundation Projects to enhance their software supply chain security. He started begining of March.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’re also in talks with a SecOps professional to improve the security of our infrastructure and introduce new tools and services, such as a self-hosted &lt;a href=&quot;https://www.sigstore.dev&quot;&gt;sigstore&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;rework-of-the-cve-process&quot;&gt;Rework of the CVE process&lt;/h2&gt;
&lt;p&gt;We have started gathering feedback from projects about Eclipse’s security processes. We are performing interviews with committers and project leads, starting with projects selected for the audit or having a recent security vulnerability. We have contacted six projects, conducted four interviews, and gathered helpful feedback.&lt;/p&gt;
&lt;p&gt;The common outcome is a request for more detailed documentation and clarification of the process. Proposals for updated documentations are currently under review. More interviews are planned. We’ve extended the experimentation of GitHub security advisories. We have also worked on a SECURITY.md template for all Eclipse Foundation projects.&lt;/p&gt;
&lt;h2 id=&quot;github-organizations-and-repositories-management&quot;&gt;GitHub organizations and repositories management&lt;/h2&gt;
&lt;p&gt;We have re-started the work on a custom tool to enforce and create security related configurations of organizations and their associated repositories on GitHub. The tool is codenamed &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/security/otterdog/&quot;&gt;OtterDog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What is currently supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;descriptive definition of required organization settings / webhooks, repositories and associated branch protection rules&lt;/li&gt;
&lt;li&gt;mechanism to fetch the current configuration from an organization hosted on GitHub&lt;/li&gt;
&lt;li&gt;verification on how the required configuration differs from the current live configuration hosted on GitHub&lt;/li&gt;
&lt;li&gt;update mechanism to enforce the required configuration on GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some work has been done in order to improve the usability of the tool. The tool will output in a concise way what settings / resources will be changed / created prior to applying the configuration to GitHub by comparing the current live settings on GitHub to the intended configuration.&lt;/p&gt;
&lt;p&gt;A credential provider for &lt;a href=&quot;https://www.passwordstore.org&quot;&gt;pass&lt;/a&gt; (in addition to existing one for &lt;a href=&quot;https://bitwarden.com&quot;&gt;Bitwarden&lt;/a&gt;) has been added to support using the tool for our first organization: &lt;a href=&quot;https://github.com/eclipse-cbi/&quot;&gt;Eclipse CBI&lt;/a&gt; which hosts various tools and projects for common build infrastructure at the Eclipse Foundation.&lt;/p&gt;
&lt;h2 id=&quot;slsa-tools&quot;&gt;SLSA tools&lt;/h2&gt;
&lt;p&gt;We started to work on &lt;a href=&quot;https://gitlab.eclipse.org/netomi/slsa-tools&quot;&gt;slsa-tools&lt;/a&gt; which is a collection of tools written in Java to operate on SLSA provenance files. The idea behind this project is to have a rich set of tools to verify / generate provenance files for the Java ecosystem.&lt;/p&gt;
&lt;p&gt;Existing SLSA tools are implemented in Go which make it somewhat cumbersome to use them in certain settings, e.g. to develop a Jenkins plugin to generate provenance files for builds.&lt;/p&gt;
&lt;p&gt;The medium-term goal is to develop such a Jenkins plugin with features similar to the existing &lt;a href=&quot;https://github.com/slsa-framework/slsa-github-generator/&quot;&gt;slsa-github-generator&lt;/a&gt; action for GitHub.&lt;/p&gt;</description>
	<pubDate>Fri, 03 Mar 2023 09:00:00 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - January and February, 2023</title>
	<guid isPermaLink="false">7317 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-january-and-february-2023</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Digest - January and February, 2023&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;Welcome to the first Cloud DevTools Digest of 2023. This first edition covers activities from both January and February.&lt;/p&gt;

&lt;h3&gt;Help Us Sustain the Open VSX Registry&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/open-vsx_1.png&quot; style=&quot;width: 500px; height: 335px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In February, I published an &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/help-us-sustain-open-vsxorg&quot;&gt;article&lt;/a&gt; on our need to evolve how we fund and govern our Open VSX Registry deployment. If you have a commercial, or personal, interest in this deployment, please be sure to read up. We need your help to keep this property going.&lt;/p&gt;

&lt;h3&gt;NEW Theia Whitepaper&lt;/h3&gt;

&lt;p&gt;We're excited about our new Eclipse Theia brief, &lt;a href=&quot;https://outreach.eclipse.foundation/theia-ide-developer-tools?utm_campaign=Eclipse%20Theia%20Brief&amp;amp;utm_medium=email&amp;amp;_hsmi=247582469&amp;amp;_hsenc=p2ANqtz-9QWOJi8dQkBU5N1QPsW7Gzi4mlYt02_M_b8WWECCPnUMdITzg92z4e6JHvlOxQbMDTLqMBWFgWcIJ7L1dCaHabrHKyRPtnBKS3ES7DMfgyOOx0aOw&amp;amp;utm_content=247582469&amp;amp;utm_source=hs_email&quot;&gt;Why Eclipse Theia Is Ideal to Build Modern IDEs and Developer Tools&lt;/a&gt;. Find out how Theia gives developers what they need to build fully customized, next-generation IDEs and tools for desktop and cloud environments.&lt;/p&gt;

&lt;h3&gt;Sirius and Sirius Web&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://www.eclipse.org/sirius/common_assets/images/logos/logo_sirius.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In three articles, &lt;a href=&quot;https://cedric.brun.io/&quot;&gt;Cédric Brun&lt;/a&gt; from &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;OBEO&lt;/a&gt;, discusses Sirius and Siruis Web. In the &lt;a href=&quot;https://cedric.brun.io/eclipse/Solutions-to-build-graphical-modeler/&quot;&gt;first&lt;/a&gt;, he provides a thorough description of the technologies and work required to build a web-based graphical diagramming tool.  In the &lt;a href=&quot;https://cedric.brun.io/eclipse/sirius-web-jupyter-notebook/&quot;&gt;second&lt;/a&gt;, based on a talk at EclipseCon 2022, he demonstrates the integration of Sirius Web and Jupyter notebooks. And in the &lt;a href=&quot;https://cedric.brun.io/eclipse/engineering-tools-technologies/&quot;&gt;final article&lt;/a&gt;, he recounts the strong release record for Sirius and Sirius Web.&lt;/p&gt;

&lt;h3&gt;GLSP&lt;/h3&gt;

&lt;p&gt;This is a great &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/17/diagram-editors-with-glsp-why-flexibility-is-key/&quot;&gt;article&lt;/a&gt; about the flexibility of GLSP and its use in the construction of web-based graphical diagramming tools. Included is a link to talk &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt; gave on the topic at EclipseCon 2022.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Getting Started with Theia&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/25/getting-started-with-theia-the-nextgen-eclipse-platform/&quot;&gt;article&lt;/a&gt; by &lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximllian, and Philip&lt;/a&gt; includes a nice video on how to get started with Theia building tools or IDEs.&lt;/p&gt;

&lt;h3&gt;Theia Cloud&lt;/h3&gt;

&lt;p&gt;In another nice article by &lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximllian, and Philip&lt;/a&gt;, they introduce &lt;a href=&quot;https://theia-cloud.io/&quot;&gt;Theia Cloud&lt;/a&gt;, a framework based on Kubernetes for deploying and running tools built on Theia. Included is a link to the recording of a session they did at EclipseCon 2022.&lt;/p&gt;

&lt;h3&gt;Contributor Award for Jan&lt;/h3&gt;

&lt;p&gt;The Eclipse &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-theia-developers-detachable-views&quot;&gt;Cloud DevTools Contributor Award for January&lt;/a&gt; went to the dedicated Theia developers at &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt; for enabling &quot;&lt;a href=&quot;https://eclipsesource.com/blogs/2022/10/13/eclipse-theia-1-30-release-news-and-noteworthy/&quot;&gt;Detachable Views&quot; in Eclipse Theia&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Contributor Award for Feb&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-matthew-khouzam-strategic-contributions&quot;&gt;Cloud DevTools Contributor Award for February&lt;/a&gt; went to Matthew Khouzam of &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt; for his ongoing work on multiple fronts in support of the Cloud DevTools ecosystem.&lt;/p&gt;

&lt;h3&gt;JKube 1.11&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/JKube.png&quot; style=&quot;width: 450px; height: 138px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.marcnuri.com/tag/eclipse&quot;&gt;Mark Nuri &lt;/a&gt;wrote about the most recent &lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11&quot;&gt;JKube release, 1.11&lt;/a&gt;. The release includes enhancements to the Remote Development feature including support for a SOCKS 5 proxy and remote port discovery.&lt;/p&gt;

&lt;h3&gt;Theia 1.33 and 1.34&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximllian, and Philip&lt;/a&gt; summarize in their blog two recent Theia releases, &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/13/eclipse-theia-1-33-release-news-and-noteworthy/&quot;&gt;1.33&lt;/a&gt; and and &lt;a href=&quot;https://eclipsesource.com/blogs/2023/02/02/eclipse-theia-1-34-release-news-and-noteworthy/&quot;&gt;1.34&lt;/a&gt;. We see enhancements to debug view and TreeView, support for terminal profiles.&lt;/p&gt;

&lt;h3&gt;Cloud Tool Time Webinars&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh5.googleusercontent.com/UKY-b4WND1Lgirn3T_B_CuBkGkaMW48WsOCGCJifOOx4lnLRdfVy7oLI-wV-X7P4Nx1USxWIF-ZDZBjIXeWKcFgBl86sq83hP09cVY6U5ed43HvQZj43tryThsjyjKWXwNXZQ78t9z0NO0tAQPWWV6I&quot; width=&quot;255.97222222222226&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are now scheduling Cloud Tool Time webinars for 2023. Be sure to &lt;a href=&quot;https://forms.gle/K8ZuJ26YqoyMC9dD7&quot; style=&quot;text-decoration: none;&quot;&gt;Sign up&lt;/a&gt; now to get on the calendar and let us help tell your story. You can see past sessions on our &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSBxx8gLh0i9LlN2bZW6H1L&quot; style=&quot;text-decoration: none;&quot;&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; style=&quot;height: 117px; width: 371px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs, extension marketplaces, frameworks and more.&lt;/p&gt;

&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;

&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Thu, 2023-03-02 10:10&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/opensource-0&quot; hreflang=&quot;en&quot;&gt;OpenSource&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Thu, 02 Mar 2023 15:10:12 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.35 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/03/02/eclipse-theia-1-35-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/03/02/eclipse-theia-1-35-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.35 release! The release contains 45 merged pull requests and we welcome two new contributors. In this article we will highlight some selected improvements...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/03/02/eclipse-theia-1-35-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.35 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mikael Barbero: Shell Hole: How Advanced Prompts are Putting Software Developers at Risk</title>
	<guid isPermaLink="true">https://mikael.barbero.tech/blog/post/2023-03-01-shell-shock/</guid>
	<link>https://mikael.barbero.tech/blog/post/2023-03-01-shell-shock/</link>
	<description>&lt;p&gt;Advanced shell prompts, such as those provided by theme engines like &lt;a href=&quot;https://ohmyz.sh&quot;&gt;oh-my-zsh&lt;/a&gt; and &lt;a href=&quot;https://ohmyposh.dev&quot;&gt;oh-my-posh&lt;/a&gt;, have become increasingly popular among software developers due to their convenience, versatility, and customizability. However, the use of plugins that are executed outside of any sandbox and have full access to the developer shell environment, presents significant security risks, especially for Open Source Software developers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Source Software (OSS) developers are primary targets for software supply chain attacks&lt;/strong&gt; because they often have access to a wide range of sensitive information and powerful tools that can be used to amplify the impact of a successful attack. OSS developers often have access not only to source code, but also access keys and credentials, which can be exfiltrated and used for malicious purposes. By compromising a single OSS developer, attackers can potentially gain access to the sensitive information and powerful tools of many other developers and users. This can enable them to launch more sophisticated and damaging attacks, potentially affecting a large number of individuals, organizations, and even whole industries.&lt;/p&gt;
&lt;p&gt;For these reasons, OSS developers are primary targets for software supply chain attacks, and it’s crucial for them to be aware of the risks and to take steps to protect themselves and their users. &lt;strong&gt;This includes verifying the authenticity and security of any software they use, keeping software up to date, and being vigilant for signs of compromise&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;figure&gt;
&lt;img alt=&quot;&amp;gt;&amp;gt;Oh My ZSH!&quot; src=&quot;https://mikael.barbero.tech/blog/post/2023-03-01-shell-shock/ohmyzsh.jpg&quot; /&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://ohmyz.sh&quot;&gt;Oh My ZSH!&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Shell theme engines and other advanced shell prompts is an example of the tools that have gain in popularity in the last couple of years and does not seem to considered as much as a threat as some others like projects dependencies or IDE plugins. &lt;strong&gt;A compromised shell prompt plugin can steal valuable information and credentials&lt;/strong&gt; in several ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keylogging&lt;/strong&gt;: The plugin can capture keystrokes, including sensitive information such as passwords, credit card numbers, and access tokens.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;: The plugin can take screenshots of the user’s screen, potentially capturing sensitive information displayed on the screen.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data exfiltration&lt;/strong&gt;: The plugin can exfiltrate data from the user’s system, such as sensitive files, source code, or even access tokens.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remote access&lt;/strong&gt;: The plugin can open a remote connection to an attacker-controlled system, allowing the attacker to gain access to the user’s system and steal sensitive information.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Credentials harvesting&lt;/strong&gt;: The plugin can harvest sensitive information such as passwords, access tokens, and private keys from the user’s system, such as:
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;System keychain&lt;/em&gt;: Windows Credential Manager, macOS Keychain, Gnome Keyring or KDE KWallet. If misconfigured, they don’t require systematic authorization to read entries.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;User’s configuration files&lt;/em&gt; which are sometime used to store sensitive information.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Shell history&lt;/em&gt; may contain sensitive information passed as arguments to commands (e.g., `curl -H ‘Authorization: Bearer xxxxxx’).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Environment variables&lt;/em&gt;: environment variables are sometimes used to share credentials with applications without having to pass explicit parameters.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Browser Cookies&lt;/em&gt; file store can be inspected to steal session tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Network reconnaissance&lt;/strong&gt;: The plugin can gather information about the user’s network, such as IP addresses, hostnames, and open ports, which can be used to launch more targeted attacks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s worth noting that these are just a few examples of how a compromised shell prompt plugin can steal valuable information and credentials. The actual methods used by attackers may vary and will depend on the attacker’s goals.&lt;/p&gt;
&lt;p&gt;To mitigate these risks, it is important for software developers to properly configure and secure their advanced shell prompts. This includes verifying the authenticity and security of any plugins before use, regularly patching and updating systems, and monitoring for suspicious activity. Additionally, it is also important to educate developers on the proper use of advanced shell prompts, and the risks associated with them.&lt;/p&gt;
&lt;p&gt;In conclusion, advanced shell prompts like &lt;a href=&quot;https://ohmyz.sh&quot;&gt;oh-my-zsh&lt;/a&gt; and &lt;a href=&quot;https://ohmyposh.dev&quot;&gt;oh-my-posh&lt;/a&gt; are powerful tools that can greatly enhance productivity and automation for software developers. However, the use of plugins that are executed outside of any sandbox and have full access to the user shell environment, presents significant security risks. &lt;strong&gt;Software developers are particularly vulnerable to software supply chain attacks, which can have serious consequences for their software development environments&lt;/strong&gt;. It is important for organizations to take appropriate measures to secure their command-line interfaces and educate their users on the risks associated with them, especially when it comes to using plugins from untrusted sources.&lt;/p&gt;</description>
	<pubDate>Wed, 01 Mar 2023 08:00:00 +0000</pubDate>
</item>
<item>
	<title>Christopher Guindon: Migrating to Google Analytics 4: Recommendations for Eclipse Project Websites</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/migrating-to-google-analytics-4-our-recommendations-for-any-eclipse-project-website/</guid>
	<link>https://www.chrisguindon.com/post/migrating-to-google-analytics-4-our-recommendations-for-any-eclipse-project-website/</link>
	<description>&lt;p&gt;As part of our commitment to providing support to our community, we would like to take a moment to share some recommendations regarding the use of Google Analytics (GA) for Eclipse project websites.&lt;/p&gt;
&lt;p&gt;As you may be aware, &lt;a href=&quot;https://support.google.com/analytics/answer/11583528?hl=en&quot;&gt;Google Analytics 4 is being rolled out as a replacement for Universal Analytics&lt;/a&gt;. While Universal Analytics is still supported at this time, Google has announced that they will stop processing new hits for all standard Universal Analytics properties on July 1, 2023.&lt;/p&gt;
&lt;p&gt;Therefore, we strongly recommend that all projects currently using GA take some time to re-evaluate whether it is still necessary for their needs. If the data provided by GA is no longer useful or necessary, we recommend that projects remove GA from their website.&lt;/p&gt;
&lt;p&gt;If it is determined that the data is still relevant and useful for the project, we recommend that it be migrated to Google Analytics 4 manually. Google has provided a &lt;a href=&quot;https://support.google.com/analytics/answer/10759417?hl=en&quot;&gt;migration guide&lt;/a&gt; for those who are looking to upgrade.&lt;/p&gt;
&lt;p&gt;We believe this is the safest way for projects to confirm that all is well, as we cannot assume that the automatic GA migration will work as expected for everyone. Also, it’s the only way for projects to ensure that explicit consent has been given by the user via our cookie consent banner before enabling GA.&lt;/p&gt;
&lt;p&gt;As a reminder, it’s possible to add our cookie consent banner to any website by adding the following code snippet in the  section of each page:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #f92672;&quot;&gt;link&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;rel&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;href&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;//www.eclipse.org/eclipse.org-common/themes/solstice/public/stylesheets/vendor/cookieconsent/cookieconsent.min.css&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;&lt;span style=&quot;color: #f92672;&quot;&gt;script&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;//www.eclipse.org/eclipse.org-common/themes/solstice/public/javascript/vendor/cookieconsent/default.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #f92672;&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A project website with GA must then ensure that the value of the &lt;strong&gt;eclipse_cookieconsent_status&lt;/strong&gt; cookie is set to &lt;strong&gt;“allow”&lt;/strong&gt; before loading GA on a webpage.&lt;/p&gt;
&lt;p&gt;Additionally, we recommend that projects &lt;a href=&quot;https://support.google.com/analytics/answer/12938611&quot;&gt;opt-out&lt;/a&gt; from letting GA make any changes to their account. This will ensure that projects have full control over their upgrade and can manage it in a way that best suits their needs.&lt;/p&gt;
&lt;p&gt;Upgrading to GA 4 will not only provide access to new features and benefits but will also ensure that project websites are prepared for the future of Google Analytics before the end of support for Universal Analytics.&lt;/p&gt;
&lt;p&gt;As always, we are here to support you with any questions or concerns you may have. Please do not hesitate to reach out to us via &lt;a href=&quot;https://gitlab.eclipse.org/eclipsefdn/helpdesk/-/issues/2630&quot;&gt;issue #2630&lt;/a&gt; in our Helpdesk.&lt;/p&gt;
&lt;p&gt;You can also find additional information and requirements around the acceptable usage of GA for Eclipse projects in our &lt;a href=&quot;https://www.eclipse.org/org/documents/eclipse-foundation-hosted-services-privacy-and-acceptable-usage-policy.pdf&quot;&gt;Eclipse Foundation Hosted Services Privacy and Acceptable Usage Policy&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 28 Feb 2023 19:20:40 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Introducing Theia Cloud</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/02/27/introducing-theia-cloud/</guid>
	<link>https://eclipsesource.com/blogs/2023/02/27/introducing-theia-cloud/</link>
	<description>&lt;p&gt;Do you want to host your Theia-based application in the cloud and allow your users to use your custom IDE or tool from anywhere, just using a browser? In this article, we introduce Theia Cloud, a...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/02/27/introducing-theia-cloud/&quot; rel=&quot;nofollow&quot;&gt; Introducing Theia Cloud&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Cyber Resilience Act: Good Intentions and Unintended Consequences</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1726</guid>
	<link>https://eclipse-foundation.blog/2023/02/23/cyber-resilience-act-good-intentions-and-unintended-consequences/</link>
	<description>&lt;p&gt;In my &lt;a href=&quot;https://eclipse-foundation.blog/2023/01/15/european-cyber-resiliency-act-potential-impact-on-the-eclipse-foundation/&quot;&gt;previous blog post&lt;/a&gt; on the European Cyber Resilience Act (“CRA”), I touched on a topic which I feel warrants additional discussion. Specifically: &lt;/p&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;
&lt;p&gt;&lt;em&gt;Fundamentally, the core of the proposed legislation is to extend the CE Mark regime to all products with digital elements sold in Europe. Our assumption based on the current text is that this process will be applied to open source software made available under open source licenses and provided free of charge, ostensibly under licenses which disclaim any liability or warranty. We are deeply concerned that the CRA could fundamentally alter the social contract which underpins the entire open source ecosystem: open source software provided for free, for any purpose, which can be modified and further distributed for free, but without warranty or liability to the authors, contributors, or open source distributors. Legally altering this arrangement through legislation can reasonably be expected to cause unintended consequences to the innovation economy in Europe.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;First, a &lt;em&gt;mea culpa&lt;/em&gt;. In the quote above I stated that “…the proposed legislation is to extend the CE Mark regime to all products with digital elements sold in Europe.” That statement is inaccurate. It should have said “the proposed legislation is to extend the CE Mark regime to all products with digital elements &lt;strong&gt;made available&lt;/strong&gt; in Europe.” That is a critical distinction, as it makes the CRA broadly extra-territorial. In today’s world where most software is downloaded over the internet, “made available” means that the documentation, certification, and liability requirements of the CRA are expected to apply to all software worldwide. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;I honestly believe that CRA was developed with the best of intentions.&lt;/strong&gt; Software has become critically important to our economies and societies, and to date has been a completely unregulated industry. Recent events such as the SolarWinds and Apache Log4j vulnerabilities have shown that there can be very large economic impacts when something goes wrong. The Log4j event showed that open source software components can have a very large impact due to wide usage. Given that, it is a reasonable position that the time has come to implement regulations upon the software industry, and to ensure that open source software is included within the scope of those regulations. I want to stress that I believe that the open source community very much wants to be part of the solution to the industry problems that we all face with respect to supply chain security. The open source community provides extremely high quality software and takes great pride in the value that it provides to society. &lt;/p&gt;



&lt;p&gt;However, the CRA legislation (along with the companion revisions to the &lt;a href=&quot;https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A52022PC0495&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Product Liability Directive&lt;/a&gt;) in its current form will have enormous negative effects on both the open source community and the European economy. &lt;/p&gt;



&lt;p&gt;For the purposes of this blog post I am going to ignore for the moment the impact of applying the CE Mark regime to all software all at once, as that would be a long post in its own right. This post will focus on the unintended consequences of applying legal product liability obligations to the open source community and ecosystem. But before doing so, I want to spend a few moments describing what open source software is, and why it is important. If you have a good understanding of that topic, feel free to skip that section. &lt;/p&gt;



&lt;h2 class=&quot;wp-block-heading&quot;&gt;The Economics of Open Source&lt;/h2&gt;



&lt;p&gt;Today’s software systems are mind-bogglingly complex. And for most systems, a very large percentage of the overall code base provides zero product differentiating features. For example, any modern system will require code which allows it to connect to the internet to acquire and share data. Open source at its core is a simple licensing model which allows individuals, researchers, academics, and companies to come together to develop and maintain software which can be freely studied, used, modified, and redistributed. The breadth of software which has been developed under this model encompasses every field of human endeavor. But arguably the most common use case is to share the cost of developing and maintaining software which implement non-differentiating technologies used across a broad spectrum of products and applications. To be clear, “non-differentiating technologies” means implementations in software of the types of technologies that many similar applications must implement. Examples include network access, database access, user authentication, and the like. It is impossible to overstate the economic benefits of being able to reuse software in this way. Reuse decreases lifecycle costs, reduces time to market, and mitigates development risk across every type of system which contains software. Which is to say, every single aspect of social and economic activity. That is why it is estimated that most modern software and cyber-physical products contain 80 to 90 percent open source. &lt;strong&gt;It is simply not economically viable to write all software yourself while your competitors are building theirs using open source. &lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;But the economic benefits of open source only start there. In fact, there is arguably even greater value in the pace of innovation which is made possible by open source. All developers today start their development off by selecting and assembling open source components to form the basis for their product or application. And they are able to do so without asking permission from any of the providers. This ‘permissionless innovation’ has vastly accelerated the pace at which new products in all fields can be developed and brought to market. When open source was first introduced, it was primarily used to commoditize technologies which were already well understood. Today, open source is used to introduce new technologies, in sectors such as Big Data, Cloud, Edge, AI and software defined vehicle, in order to accelerate adoption and create new market segments. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;It is important to remember that open source software is provided at zero cost to the consumer. This completely decouples its value from its sale price.&lt;/strong&gt; And there are many examples of open source software which are almost immeasurably valuable: Linux, Kubernetes, Apache, and OpenJDK are just a few examples of open source which support multi-billion euro ecosystems. &lt;/p&gt;



&lt;p&gt;It is also important to recognize that open source software is a non-rivalrous good. In fact, it is an anti-rivalrous good in that the more a software component is used, the more valuable it becomes. This is incredibly important to understand: the value of a piece of open source software is not determined when it is made available. It becomes valuable (and potentially critical) when it is &lt;em&gt;used&lt;/em&gt;. And the more it is used, the more valuable and critical it becomes. As a logging framework, Log4j was not a piece of software which at face value would be expected to be security critical; it became so because it was so broadly used and adopted. &lt;/p&gt;



&lt;p&gt;Finally, &lt;a href=&quot;https://medium.com/@stephenrwalli/there-is-no-open-source-business-model-cdc4cc20238&quot;&gt;&lt;strong&gt;there is no open source business model&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt; Open source licensing has enabled an incredibly successful collaborative production model for the development of software, but that is decoupled from the commercialization of that software. Obviously, given the massive investments in open source someone must be making money somewhere. And they are. Open source technologies are used in virtually every cyber-physical, software, SaaS, and cloud product on the planet. It is also very widely used in the internal bespoke software applications that run our governments, enterprises, and industrials. When we talk of the open source supply chain, it is important to recognize that what we are discussing is the use by governments and commercial organizations of freely provided software. Unlike any other market that I am aware of, the financial resources available to manage and secure the open source software supply chains are solely available to the consumers, rather than the producers. For this reason, it is important that any compliance burden be placed on the downstream commercial adopters and consumers, rather than the producers of open source. &lt;/p&gt;



&lt;h2 class=&quot;wp-block-heading&quot;&gt;Unintended Consequences&lt;/h2&gt;



&lt;p&gt;Which brings me to the risks to Europe’s economy that I see from the CRA. The preamble to the legislation states: “For the whole EU, it is estimated that the initiative could lead to a costs reduction from incidents affecting companies by roughly EUR 180 to 290 billion annually.” On the cost side it states: “For software developers and hardware manufacturers, it will add direct compliance costs for new security requirements, conformity assessment, documentation and reporting obligations, leading to aggregated compliance costs amounting to up to roughly EUR 29 billion.” In other words, spend 29 billion to save 290 billion. The impact assessment further describes that an analysis was done which spurred the decision to extend to legislation to cover all tangible and non-tangible products: &lt;/p&gt;


&lt;p style=&quot;padding-left: 40px;&quot;&gt;&lt;em&gt;This option would ensure the setting out of specific horizontal cybersecurity requirements for all products with digital elements being placed or made available on the internal market, and would be the only option covering the entire digital supply chain.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;As discussed in my previous blog post, the CRA as currently drafted will be extended to cover virtually all open source software. This will legally obligate producers of open source software to the documentation, certification, and liability provisions of the CRA. Let us focus here solely on the liability topic.&lt;/p&gt;



&lt;p&gt;The fundamental social contract that underpins open source is that its producers freely provide the software, but accept no liability for your use, and provide no warranties. Every open source license contains “as is”, no liability, and no warranty clauses. I’ve always assumed that this is simple common sense: if I provide you with a working program that you can study, use, modify, and further distribute freely for any purpose, why should I accept any liability for your (mis)use of that program? It is the companies which commercialize the technology and make a business from it who need to accept liability and provide warranties to their paying customers, not the open source projects which they have freely consumed. &lt;strong&gt;The CRA fundamentally breaks this understanding by legislating non-avoidable liability obligations to producers of free software. &lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;What might be the consequences of forcing the producers of free and open source software made available in Europe to accept statutory liability for code that they provide? Remembering, of course, that all open source software is both developed and distributed over the internet so “made available in Europe” can arguably apply to it all. And also remembering that enormous amounts of open source software are produced worldwide by projects, communities, and nonprofit foundations which make no money off of their software, and who have always operated under the assumption that their liability obligations were extremely low. Thirdly, it is important to remember that open source software is provided for free. &lt;strong&gt;The producers of open source do not receive any revenue from users and adopters in Europe, so the usual market incentives to accept additional regulations to retain access to the European single market do not apply.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;So with the caveat that these are all hypothetical scenarios, let’s look at some potential unintended consequences of the CRA’s liability obligations. (Some of these points are also made in Brian Fox’s &lt;a href=&quot;https://blog.sonatype.com/eu-cyber-resilience-act-good-for-software-supply-chain-security-bad-for-open-source&quot;&gt;excellent blog post&lt;/a&gt;.) &lt;/p&gt;



&lt;ol&gt;
&lt;li&gt;A reasonable and rational response would be for non-European producers of open source code to state that its use is not permitted in Europe. If you are not willing to accept statutory liability obligations for something you make available for free, a notice file stating the above would be an obvious reaction. What would this mean to the European companies that build products on platforms such as Linux, Kubernetes, Apache, and OpenJDK? I would assume that the vast majority of their procurement and compliance organizations would conclude that they can no longer use those technologies in their product development. Cutting Europe off from these platforms would have catastrophic consequences.&lt;br /&gt;&lt;/li&gt;



&lt;li&gt;European producers of open source will be at a significant disadvantage relative to their international peers. Since they cannot avoid the liability obligations, they will be forced to accept them as part of their operations. For a small project hosted at (say) Github, it would probably be simpler to just terminate the project and pull its source code off of the internet. For a foundation such as the Eclipse Foundation, amongst other things I would expect that we would be forced to procure a very large liability insurance policy to mitigate the exposure of the organization and its directors and officers to potential liabilities. The result would threaten the €65 billion to €95 billion that open source software development contributes to EU GDP, as per the Commission’s &lt;a href=&quot;https://digital-strategy.ec.europa.eu/en/library/study-about-impact-open-source-software-and-hardware-technological-independence-competitiveness-and&quot;&gt;own study&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;



&lt;li&gt;The CRA extends the liability obligations to distributors of software. In the open source context, some of the most important distributors include the language and platform-specific package distribution sites such as &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;, &lt;a href=&quot;https://mvnrepository.com/repos/central&quot;&gt;Maven Central&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/&quot;&gt;PyPi&lt;/a&gt; and the like. None of those sites are in a position to accept liability for the packages they make available. As Brian Fox of Sonatype stated “…the consequence of this would be [Maven] Central, npm, PyPi and countless other repositories being suddenly inaccessible to the European Union.” As Brian is the leader of Maven Central, I am confident he understands what he’s talking about. I cannot stress enough how disruptive it would be to Europe’s business if that should occur.&lt;br /&gt;&lt;/li&gt;



&lt;li&gt;The CRA liability obligations could also force European business to stop contributing to open source projects. At the moment, it is generally understood that the risk that contributions to open source may incur a liability to the company is low. The CRA changes that equation and as a result European companies may curtail their open source collaborations. This would be extremely damaging to the innovation economy in Europe, for the reasons described in the economics section above. It also runs counter to a number of European wide strategies such as digital sovereignty which explicitly have major open source components. Initiatives such as GAIX-X, Catena-X, Dataspaces, Digital Twins, and Industrie 4.0 all explicitly rely upon open source collaboration which could be at risk under the CRA. &lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;Europe’s Cyber Resilience Act was developed with the best of intentions. And it is certainly the right time to look at what regulations are appropriate for software generally, and given its importance open source software likely needs to be included in some manner. But the liability obligations imposed by the CRA upon projects, communities, and nonprofit foundations will have negative unintended consequences on Europe’s innovation economy and digital sovereignty initiatives.&lt;/p&gt;</description>
	<pubDate>Thu, 23 Feb 2023 17:09:43 +0000</pubDate>
</item>
<item>
	<title>John Kellerman: Help Us Sustain Open-vsx.org!</title>
	<guid isPermaLink="false">7312 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/help-us-sustain-open-vsxorg</link>
	<description>&lt;span&gt;Help Us Sustain Open-vsx.org!&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/open-vsx_1.png&quot; style=&quot;width: 500px; height: 335px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Between TypeFox and the Cloud DevTools Working Group at the Eclipse Foundation, we've had a great run with the Open VSX Registry at &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://open-vsx.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://open-vsx.org/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, a vendor neutral, open source marketplace for VS code extensions. The current deployment hosts over 2500 extensions from over 1600 different publishers.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We’re working on a new funding and governance model for &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://open-vsx.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://open-vsx.org/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; that will be more sustainable in the long term. The basic structure will be an Eclipse Foundation working group, with an option to sponsor only and not participate in the governance and management of the deployment. If we do not generate enough interest in this proposed working group, we’ll be forced to decommission &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://open-vsx.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://open-vsx.org/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; by the end of May, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;If you have a commercial interest in, or your customers have a commercial interest in, the success and long term viability of &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://open-vsx.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://open-vsx.org/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; and wish to be part of the organization responsible for &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://open-vsx.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;https://open-vsx.org/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, let us know at &lt;a href=&quot;mailto:collaborations@eclipse-foundation.org?subject=I'm%20interested%20in%20the%20sustainability%20of%20open-vsx.org&quot;&gt;collaborations@eclipse-foundation.org&lt;/a&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-02-22 11:26&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/opensource-0&quot; hreflang=&quot;en&quot;&gt;OpenSource&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 22 Feb 2023 16:26:22 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Releases 2022 IoT and Edge Commercial Adoption Survey Results</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-releases-2022-iot-and-edge-commercial-adoption-survey-results</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-releases-2022-iot-and-edge-commercial-adoption-survey-results</link>
	<description>&lt;p&gt;&lt;strong&gt;BRUSSELS – February 21, 2023 – &lt;/strong&gt;The Eclipse Foundation, one of the world’s largest open source foundations, today announced the availability of its 2022 IoT and Edge Commercial Adoption Survey report, based on an online survey of more than 260 IoT and edge professionals conducted from April 1st to June 15th, 2022. The survey’s objective is to gain a better understanding of the IoT and edge computing ecosystems by identifying the requirements, priorities, and challenges faced by organizations that deploy and use commercial solutions, including those based on open source technologies. &lt;/p&gt;

&lt;p&gt;“IoT and edge computing continued to accelerate in 2022 and into 2023 with no signs of slowing down, despite the current macroeconomic climate, ” said Mike Milinkovich, executive director of the Eclipse Foundation. “These trends suggest that IoT and Edge are thought to be strategic investments that deliver true ROI. The open source model will only augment these benefits.”&lt;/p&gt;

&lt;p&gt;Survey participants represent a broad set of industries, organizations, and job functions. Nine of the top conclusions drawn from the survey data include:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;IoT technologies are being adopted at an accelerated rate. 53% of respondents currently deploy IoT solutions and an additional 24% plan to deploy within the next 12 to 24 months, while 18% are currently evaluating deployments.&lt;/li&gt;
	&lt;li&gt;Edge computing adoption is also on the rise. 53% of organizations are either utilizing or planning to utilize edge computing technologies within 12 months. Another 20% are currently evaluating the use of edge deployments.&lt;/li&gt;
	&lt;li&gt;There is a shift towards higher investments into IoT &amp;amp; Edge. 23% of respondents project spending between $100K - $1M in 2022, growing to 33% in 2023. 10% anticipate spending over $10M and growing to 12% in 2023.&lt;/li&gt;
	&lt;li&gt;There is a trend towards a larger number of IoT &amp;amp; Edge assets managed per deployment. Deployments of fewer than 1K managed assets will remain steady or decline, while larger deployments are on the rise. In terms of asset implementation, 52% are a mix of both greenfield and brownfield.&lt;/li&gt;
	&lt;li&gt;More organizations now see IoT and edge as strategic, with spending decisions being driven at the executive level 38% of the time. This increased by 3% compared to the year 2021. &lt;/li&gt;
	&lt;li&gt;73% of organizations factor open source into their deployment plans. This clearly demonstrates that the dominant IoT &amp;amp; edge platforms will either be open source or based on open source. Only 27% of organizations using IoT and Edge technologies state they do not use open source technologies.&lt;/li&gt;
	&lt;li&gt;The primary benefits of using open source according to respondents include: the ability to customize or influence code in projects (30%); flexibility (22%); as well as cost advantages (16%).&lt;/li&gt;
	&lt;li&gt;The top 3 IoT and edge operational challenges are: 1) connectivity; 2) security; and 3) data collection &amp;amp; analytics.&lt;/li&gt;
	&lt;li&gt;There is a trend towards a hybrid cloud strategy. 42% of respondents suggest that IoT deployments are using, or will use a hybrid cloud (i.e. composed of two or more distinct cloud infrastructures such as private and public).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The report also includes details on IoT and edge adoption by industry and the top concerns of commercial adopters. To find out more, interested parties can download the &lt;a href=&quot;https://outreach.eclipse.foundation/iot-edge-commercial-adoption-2022&quot;&gt;2022 IoT &amp;amp; Edge Commercial Adoption Survey Report&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The IoT and Edge Commercial Adoption Survey is sponsored by the &lt;a href=&quot;https://iot.eclipse.org/&quot;&gt;Eclipse IoT&lt;/a&gt; and &lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;Edge Native&lt;/a&gt; Working Groups. The adoption survey complements the annual &lt;a href=&quot;https://outreach.eclipse.foundation/eclipse-iot-developer-survey-2020&quot;&gt;IoT Developer Survey&lt;/a&gt;, one of the industry's most influential surveys from the development front lines, which the Eclipse Foundation has conducted for the last nine years and will continue to produce. The Foundation’s IoT and Edge Native communities represent one of the largest open source collaborations in the world spanning 45 projects from 45 members. Eclipse IoT and edge projects have been adopted by leading organizations across a variety of verticals to deliver commercial IoT and edge-based solutions and services.&lt;/p&gt;

&lt;p&gt;To learn more about how to get involved with the &lt;a href=&quot;https://iot.eclipse.org/&quot;&gt;Eclipse IoT&lt;/a&gt;, &lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;Edge Native&lt;/a&gt;, or other Eclipse Foundation Working Groups visit the &lt;a href=&quot;https://www.eclipse.org/membership/&quot;&gt;Eclipse Foundation membership &lt;/a&gt;page. Working Group members benefit from a broad range of services, including exclusive access to detailed industry research findings, marketing assistance, and expert open source governance.&lt;/p&gt;

&lt;p&gt;For further IoT &amp;amp; Edge related information, please reach us at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;mailto:IoT@eclipse.org&quot;&gt;IoT@eclipse.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;mailto:Edgenative@eclipse.org&quot;&gt;Edgenative@eclipse.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quotes From IoT &amp;amp; Edge Native Working Group Members&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eurotech&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Also this year, we are looking forward to receiving and analyzing the results presented in the IoT &amp;amp; Edge Commercial Adoption Survey Report, which provides up-to-date insights into challenges and trends in IoT and Edge Computing” commented Robert Andres, Chief Strategy Officer for Eurotech. “The report is a very valuable source of data, compiled from a significant primary research effort, conducted under the umbrella of the Eclipse Foundation.&lt;strong&gt;”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ZettaScale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“The survey reveals an interesting acceleration in the adoption of Edge Computing, which I think will be further fueled in 2023 by the technologies developed within the Eclipse IoT and Edge Working Group,” said Angelo Corsaro, PhD, ZettaScale’s CEO/CTO. “We are extremely proud to be contributing to this trend with some projects that are foundational for Edge Computing and the Cloud-to-Thing Continuum.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edgeworx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Every year this survey teaches us more about the workloads being deployed via Edge Computing and we continue to see strong Edge AI demand,&quot; said Kilton Hopkins, CTO of Edgeworx. “The Eclipse Edge Native Working Group is a central part of our strategy for meeting that demand.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter&lt;a href=&quot;https://twitter.com/ResearchEclipse&quot;&gt; @ResearchEclipse,&lt;/a&gt;&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt; @EclipseFdn&lt;/a&gt;,&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt; LinkedIn&lt;/a&gt; or visit&lt;a href=&quot;http://eclipse.org&quot;&gt; eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;###&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL (Germany)&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Stephanie Brüls / Susanne Pawlik&lt;/p&gt;

&lt;p&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p&gt;80331 Munich&lt;/p&gt;

&lt;p&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p&gt;+49 (89) 211 871 – 64 / -35&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Jay Nichols&lt;/p&gt;

&lt;p&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p&gt;+1 408-772-1551&lt;/p&gt;

&lt;p&gt;514 Media Ltd for the Eclipse Foundation, AISBL (France, Italy, Spain)&lt;/p&gt;

&lt;p&gt;Benoit Simoneau&lt;/p&gt;

&lt;p&gt;benoit@514-media.com&lt;/p&gt;

&lt;p&gt;M: +44 (0) 7891 920 370&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Tue, 21 Feb 2023 11:45:00 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Eclipse JKube 1.11 is now available!</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/eclipse-jkube-1-11</guid>
	<link>https://blog.marcnuri.com/eclipse-jkube-1-11</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;div class=&quot;alert &quot;&gt;A newer version of Eclipse JKube is available, jump to &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-13&quot; title=&quot;Eclipse JKube 1.13 is now available!&quot;&gt;Eclipse JKube 1.13 announcement&lt;/a&gt;.&lt;/div&gt;&lt;p&gt;On behalf of the &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;Eclipse JKube&lt;/a&gt; team and everyone who has contributed, I'm happy to announce that Eclipse JKube &lt;code&gt;1.11.0&lt;/code&gt; has been &lt;a href=&quot;https://github.com/eclipse/jkube/releases/tag/v1.11.0&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/releases/tag/v1.11.0&quot;&gt;released&lt;/a&gt; and is now available from &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.11.0/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.11.0/&quot;&gt;Maven Central&lt;/a&gt; ğŸ�‰.&lt;/p&gt;&lt;p&gt;Thanks to all of you who have contributed with issue reports, pull requests, feedback, and spreading the word with blogs, videos, comments, and so on. We really appreciate your help, keep it up!&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#whats-new&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;whats-new&quot;&gt;&lt;/span&gt;What's new?&lt;/h2&gt;&lt;p&gt;Without further ado, let's have a look at the most significant updates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11#jkube-image-remote-dev&quot; title=&quot;Link to the Eclipse JKube Remote Development section&quot;&gt;Eclipse JKube Remote Development&lt;/a&gt; (Preview) enhancements&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&quot;&gt;Init Containers&lt;/a&gt; via XML/DSL plugin configuration&lt;/li&gt;&lt;li&gt;ğŸ�› Many other bug-fixes and minor improvements&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#jkube-image-remote-dev&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;jkube-image-remote-dev&quot;&gt;&lt;/span&gt;Eclipse JKube Remote Development (Preview) enhancements&lt;/h3&gt;&lt;p&gt;This release brings a few improvements to the Remote Development feature:&lt;/p&gt;&lt;h4 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#remote-dev-socks-proxy&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;remote-dev-socks-proxy&quot;&gt;&lt;/span&gt;SOCKS 5 proxy&lt;/h4&gt;&lt;p&gt;In addition to the standard remote and local service configuration, you can now enable a SOCKS 5 proxy. The proxy can be then used to dynamically forward ports and resolve cluster DNS names for your local applications that support a SOCKS 5 proxy configuration.&lt;/p&gt;&lt;p&gt;You can enable the SOCKS proxy just by setting its port in the &lt;code&gt;&amp;lt;remoteDevelopment&amp;gt;&lt;/code&gt; configuration:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;remoteDevelopment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;socksPort&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1080&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;socksPort&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;remoteDevelopment&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;configuration&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you start the session, you can use the SOCKS proxy to connect to a remote service:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;curl --socks5-hostname localhost:1080 http://my-cluster-service:80/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#remote-dev-service-discovery&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;remote-dev-service-discovery&quot;&gt;&lt;/span&gt;Remote Service port discovery&lt;/h4&gt;&lt;p&gt;Your application might expose different ports depending on the environment it's running. For example, a React application is usually exposed at port &lt;code&gt;3000&lt;/code&gt; in development mode, but at port &lt;code&gt;80&lt;/code&gt; in production mode.&lt;/p&gt;&lt;p&gt;With this release, we've improved the local service port forwarding to detect the port at which your application is being exposed in the cluster. This way you can provide a local service configuration with the port pointing to where your application listens locally. JKube will take care of analyzing the cluster service to determine the port where the &lt;code&gt;Service&lt;/code&gt; listens and forward it to the local port.&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#using-this-release&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;using-this-release&quot;&gt;&lt;/span&gt;Using this release&lt;/h2&gt;&lt;p&gt;If your project is based on Maven, you just need to add the Kubernetes Maven plugin or the OpenShift Maven plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.11.0&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your project is based on Gradle, you just need to add the Kubernetes Gradle plugin or the OpenShift Gradle plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.11.0'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-11/#how-can-you-help&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;how-can-you-help&quot;&gt;&lt;/span&gt;How can you help?&lt;/h2&gt;&lt;p&gt;If you're interested in helping out and are a first-time contributor, check out the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;&quot;first-timers-only&quot;&lt;/a&gt; tag in the issue repository. We've tagged extremely easy issues so that you can get started contributing to Open Source and the Eclipse organization.&lt;/p&gt;&lt;p&gt;If you are a more experienced developer or have already contributed to JKube, check the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/help%20wanted&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/help%20wanted&quot;&gt;&quot;help wanted&quot;&lt;/a&gt; tag.&lt;/p&gt;&lt;p&gt;We're also excited to read articles and posts mentioning our project and sharing the user experience. Feedback is the only way to improve.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube/issues&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://gitter.im/eclipse/jkube&quot;&gt;Gitter&lt;/a&gt; | &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jkube-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://accounts.eclipse.org/mailing-list/jkube-dev&quot;&gt;Mailing list&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://stackoverflow.com/questions/tagged/jkube&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;span class=&quot;post-image__pusher aligncenter&quot;&gt;&lt;/span&gt;&lt;figure class=&quot;post-image &quot;&gt;&lt;span class=&quot;post-image__scrim&quot;&gt;&lt;/span&gt;&lt;a class=&quot;post-image__link&quot; href=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; title=&quot;Eclipse JKube Logo&quot;&gt;&lt;span class=&quot;post-image__image-container&quot;&gt;&lt;div class=&quot;gatsby-image-wrapper gatsby-image-wrapper-constrained post-image__image aligncenter&quot;&gt;&lt;source type=&quot;image/webp&quot; /&gt;&lt;img alt=&quot;Eclipse JKube Logo&quot; src=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;</description>
	<pubDate>Thu, 16 Feb 2023 14:30:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Matthew Khouzam for Strategic Contributions to the Cloud DevTools Ecosystem</title>
	<guid isPermaLink="false">7308 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-matthew-khouzam-strategic-contributions</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Contributor Award: Matthew Khouzam for Strategic Contributions to the Cloud DevTools Ecosystem&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award for this month goes to Matthew Khouzam at &lt;a href=&quot;https://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt; for his significant and strategic contributions in the Eclipse Cloud DevTools Ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/cloud-gcf312ab64_1920.jpg&quot; style=&quot;height: 333px; width: 500px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Most people who get in touch with the Eclipse Cloud DevTools ecosystem have likely interacted with Matthew in one way or another. It might be watching one of his conference talks, interacting with him on one of the projects he is involved in or meeting him in a strategic or technical meeting. As lead of &lt;a href=&quot;https://www.eclipse.org/cdt-cloud/&quot;&gt;CDT Cloud&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/tracecompass/&quot;&gt;TraceCompass&lt;/a&gt; incubator, product owner of TraceCompass and &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Theia&lt;/a&gt; at Ericsson, or member of the working group steering committee, Matthew played and continues to play a truly central role in the ecosystem. He brings the Cloud DevTools community to the &lt;a href=&quot;https://www.dorsal.polymtl.ca/&quot;&gt;Open and Highly Available Distributed Systems Research Laboratory&lt;/a&gt; (DORSAL) work, located in the Department of Computer Engineering and Software Engineering at École Polytechnique de Montréal. Matthew combines very deep technical insights with a strategic view on the ecosystem. He cares about developing long term strategic goals as much as he cares about tracing down specific bugs. And last but not least, his open and always constructive way of communication brings together people and transforms ideas into innovation.&lt;/p&gt;

&lt;p&gt;Open source ecosystems are often focused on technology. However, without people such as Matthew, not much would happen here in terms of collaboration and strategic evolution. Congratulations and thank you for your contributions!&lt;/p&gt;

&lt;p&gt;The Cloud DevTools Working Group provides a vendor-neutral ecosystem of open-source projects focused on defining, implementing and promoting best-in-class web and cloud-based development tools. It is hosted at the Eclipse Foundation, current members of the group include &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=656&quot;&gt;IBM&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=731&quot;&gt;RedHat&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=665&quot;&gt;SAP&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=848&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1069&quot;&gt;Renesas&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1194&quot;&gt;TypeFox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-02-15 13:42&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia&quot; hreflang=&quot;en&quot;&gt;Theia&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia-contributor-award&quot; hreflang=&quot;en&quot;&gt;Theia Contributor Award&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 15 Feb 2023 18:42:34 +0000</pubDate>
</item>
<item>
	<title>Kai Toedter: Add Social Icon to OceanWP</title>
	<guid isPermaLink="false">https://toedter.com/?p=2415</guid>
	<link>https://toedter.com/2023/02/12/add-social-icon-to-oceanwp/</link>
	<description>&lt;p&gt;Recently I migrated my WordPress-based site to the free version of the great &lt;a href=&quot;https://oceanwp.org/&quot;&gt;OceanWP theme&lt;/a&gt;.&lt;br /&gt;
While many social icons are already supported, Mastodon is currently not supported.&lt;/p&gt;
&lt;p&gt;So I filed a feature request here: &lt;a href=&quot;https://github.com/oceanwp/oceanwp/issues/433&quot;&gt;https://github.com/oceanwp/oceanwp/issues/433&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The friendly guys from OceanWP the explained, how I could add a Mastodon link with icon today.&lt;br /&gt;
After fiddling around a bit, their solution worked well for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Save your OceanWP customizer settings&lt;/li&gt;
&lt;li&gt;Create an OceanWP child theme (you can use the Ocean Extra plugin for that task)&lt;/li&gt;
&lt;li&gt;Import your saved customizer settings =&amp;gt; Now your website should look the same as before&lt;/li&gt;
&lt;li&gt;Activate child theme&lt;/li&gt;
&lt;li&gt;The theme icons to “Font Awesome”&lt;/li&gt;
&lt;li&gt;Open the Appearence/Theme File Editor&lt;/li&gt;
&lt;li&gt;Add the following code to functions.php and save&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;brush: php; title: ; notranslate&quot;&gt;function my_ocean_social_options( $array ) {
	// Mastodon icon
	$array['mastodon'] = array(
		'label' =&amp;gt; 'Mastodon',
		'icon_class' =&amp;gt; oceanwp_icon( 'mastodon', false)
	);

	return $array;

}
add_filter( 'ocean_social_options', 'my_ocean_social_options' );

function add_new_icons( $icons ) {
	$icons['mastodon']= array(
                'sili' =&amp;gt; 'fab fa-mastodon',
                'fai'  =&amp;gt; 'fab fa-mastodon',
                'svg'  =&amp;gt; 'fab fa-mastodon',
            ); 

	return $icons;
}
add_filter( 'oceanwp_theme_icons', 'add_new_icons' );
&lt;/pre&gt;
&lt;p&gt;Now, whenever you want to add a social link, you will find “Mastodon” at the end and you can add your Mastodon link.&lt;br /&gt;
Mine is &lt;a href=&quot;https://mastodon.social/@kaitoedter&quot;&gt;https://mastodon.social/@kaitoedter&lt;/a&gt; and you can see a live version of this at &lt;a href=&quot;https://toedter.com&quot;&gt;https://toedter.com&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Sun, 12 Feb 2023 16:05:52 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Own Your IDE</title>
	<guid isPermaLink="false">https://medium.com/p/5ebc54e5709a</guid>
	<link>https://donraab.medium.com/own-your-ide-5ebc54e5709a?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Customize and extend your IDE for an Integrated Developer Experience.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*EXq67ikzCBoOwm4b&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@tekton_tools?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Tekton&lt;/a&gt; onÂ &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Your productivity is worth investing in&lt;/h3&gt;&lt;p&gt;If you are developing software in a programming language like Java, C++, C#, Python, Go, Ruby, Kotlin, Groovy, Swift, or JavaScript you are probably leveraging a powerful and productive Integrated Development Environment (IDE).&lt;/p&gt;&lt;p&gt;I have been using IntelliJ IDEA for Java development since 2002. Most developers I meet who use IntelliJ, Eclipse, NetBeans or VSCode for coding in Java love their IDEs. They are fiercely loyal. However, few developers I meet take the time to fully learn the capabilities their IDE provides to enhance their productivity. Many developers wind up treating their IDEs primarily as colorful codeÂ editors.&lt;/p&gt;&lt;p&gt;There is much more power available and waiting to be discovered. It may take you time to discover and master the features, but that investment will give you greater returns overÂ time.&lt;/p&gt;&lt;p&gt;Iâ€™ve been using IntelliJ IDEA for Java development for 20 years. I feel some days like Iâ€™m only scratching the surface of productivity gains as my favorite Java IDE continues to evolve and put more power in myÂ hands.&lt;/p&gt;&lt;h3&gt;Discovering the keys to theÂ kingdom&lt;/h3&gt;&lt;p&gt;In the 1990s, I worked in a Smalltalk IDE. The IDE I used was IBMâ€™s VisualAge for Smalltalk (VAST). VAST was the most amazing development environment I had ever seen or used, and remained so well into the 2000s. I learned that paying ~$5,000 per developer seat for an IDE was well worth the investment in terms of the productivity improvements.&lt;/p&gt;&lt;p&gt;With VAST and the live Smalltalk image I also learned I could change anything I wanted in my environment, on the fly. VisualAge was written in Smalltalk and was a running Smalltalk image and I could learn about and change all of the underlying code, in Smalltalk, dynamically.&lt;/p&gt;&lt;blockquote&gt;When you own your IDE, you donâ€™t just use it to type code, you extend it and enhance it to increase your productivity.&lt;/blockquote&gt;&lt;p&gt;I kept programming in VisualAge Smalltalk through the early 2000s in my spare time. I used to occasionally demo building a ToDoList in under 2 minutes using VAST. I blogged about this recently and how I learned JavaFX as a result to try and replicate that same ToDoList demo-ability in Java using IntelliJ.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/my-first-javafx-application-ee70a1d48cb3&quot;&gt;My first JavaFX application&lt;/a&gt;&lt;/p&gt;&lt;p&gt;VAST wasnâ€™t really keyboard enabled. I was mouse dependent working in the IDE. After my first 2â€“3 years of programming Java using IntelliJ IDEA, I became keyboard obsessed. IntelliJ really unleashed my productivity using the keyboard. I learned many IntelliJ keyboard shortcuts in the early 2000s that I still use today. I loved using the keyboard so much, I decided to implement the same keyboard shortcuts in my VAST environmentâ€¦ because I could! I started with Ctrl-N (Find Class) and Ctrl-B (step into something like a class or method when the cursor is on the text). This helped balance my productivity when switching between my two favorite and most usedÂ IDEs.&lt;/p&gt;&lt;h3&gt;Coding like a boss inÂ IntelliJ&lt;/h3&gt;&lt;p&gt;Iâ€™ve alternated between being an individual contributor and a manager at work over the past six years. I have been a manager of a core platform team at my current employer for the past three years. I read and review more code in this role than I write. I continue to code actively in open source and passed 500 contributions on GitHub last year. Following are some tips I can give you to help you maximize the out of the box capabilities of IntelliJ IDEA so you can code like a bossÂ (me).&lt;/p&gt;&lt;p&gt;These features are built into IntelliJ IDEA. All you need to do to use them is learn them. Whether you pay for your IDE or download it for free, it pays to learn the features that are built-in. Learn them. Customize them. OwnÂ them.&lt;/p&gt;&lt;h4&gt;Keyboard Shortcuts&lt;/h4&gt;&lt;p&gt;Many developers I have worked with over the years have printed out one of these two keymaps and kept them on their desk for reference. In the new world of remote work and going green, maybe just keep a bookmark or save the PDF. Learning many of these shortcuts will save you time doing common every day coding activities. &lt;a href=&quot;https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf&quot;&gt;Link&lt;/a&gt; toÂ PDF.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/help/idea/mastering-keyboard-shortcuts.html&quot;&gt;IntelliJ IDEA keyboard shortcuts | IntelliJ IDEA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Some of my personal favorite shortcuts:&lt;/p&gt;&lt;p&gt;Ctrl-N, Ctrl-B, Ctrl-H, Ctrl-F, Ctrl-Shift-F, Ctrl-Shift-R, Alt-F7, F5, F6, Shift-F6, Ctrl-Alt-M, Ctrl-Alt-N, Ctrl-Alt-Shift-N, Ctrl-W, Ctrl-O, Ctrl-I, Ctrl-P,Â Alt-F1&lt;/p&gt;&lt;p&gt;The most important basic short-cuts to learn and remember:&lt;/p&gt;&lt;p&gt;Alt-Enter (magic) and Shift-Shift (multi-purpose)&lt;/p&gt;&lt;h4&gt;Postfix Completion&lt;/h4&gt;&lt;p&gt;I hate typing types when I want to introduce a variable. Sure, I could use the Local Variable Type Inference (var keyword) feature introduced in Java 10. Most of the time I want to keep the types in the code for future readers, including myself, so using var is not an option. When you need to type the types in Java, you wind up repeating yourself, a lot. Donâ€™t Repeat Yourself! Donâ€™t type types for your local variables. Let IntelliJ do it for you, by using postfix completion.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/guide/tips/postfix-completion/&quot;&gt;Postfix Completion&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This is truly a boss feature of IntelliJ. If you use another IDE, check to see if they have implemented this feature. This feature will change how you write yourÂ code.&lt;/p&gt;&lt;h4&gt;Owning Postfix Completion&lt;/h4&gt;&lt;p&gt;Once you incorporate postfix completion into your coding style, you can make this feature your own. Since IntelliJ 2018.1, you are able to customize the Postfix Completion by creating your own Java templates.&lt;/p&gt;&lt;p&gt;Go to Preferences | Editor | General | Postfix Completion&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*-xZD3kEwbiAKvaIFVjs4AQ.png&quot; /&gt;&lt;figcaption&gt;Add your own postfix completion shortcuts&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;For some custom Postfix Completion examples, check out this blog from &lt;a href=&quot;https://medium.com/u/82b613b921f6&quot;&gt;CraigÂ Motlin&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://motlin.com/2022-11-06-intellij-postfix-completions/&quot;&gt;IntelliJ postfix completions&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Type Hints&lt;/h4&gt;&lt;p&gt;A feature that was added in IntelliJ 2018.2 that I love was called â€œType hints for long method chainsâ€� or more simply â€œInlay Hintsâ€�. If you use a fluent coding style with libraries like Java Streams or &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, these type hints can help you read and understand your code without having to go digging into method chains in order to discover return types. This feature shows intermediate type hints next to the code with long method chains. It has various configuration options you can tweek. Hereâ€™s one example using the default settings.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/help/idea/inlay-hints.html&quot;&gt;Inlay hints | IntelliJ IDEA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Letâ€™s take a look at some code as it would appear in a browser, with some standard syntax highlighting.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void printTop10RandomFruitOrVegetableEmojis()&lt;br /&gt;{&lt;br /&gt;    CodePointAdapter emojis = Strings.asCodePoints(&quot;ğŸ��ğŸ��ğŸ��ğŸ�ŠğŸ�‹ğŸ�ŒğŸ�‰ğŸ�‡ğŸ�“ğŸ�ˆğŸ�’ğŸ�‘ğŸ��ğŸ¥¥ğŸ¥�ğŸ�…ğŸ�†ğŸ¥‘ğŸ¥¦ğŸ¥¬ğŸ¥’ğŸŒ¶ğŸŒ½ğŸ¥•ğŸ§„ğŸ§…ğŸ¥”&quot;);&lt;br /&gt;    IntBags.mutable.withAll(new SecureRandom()&lt;br /&gt;                    .ints(0, emojis.size())&lt;br /&gt;                    .limit(1_000_000_000L)&lt;br /&gt;                    .parallel()&lt;br /&gt;                    .map(emojis::get))&lt;br /&gt;            .collect(CodePointList::from)&lt;br /&gt;            .topOccurrences(10)&lt;br /&gt;            .forEach(System.out::println);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Hereâ€™s the same code in IntelliJ IDEA, with Type Hints enabled, with the default settings.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*YI2KB3-r_-mP1Vu6Fpz-FQ.png&quot; /&gt;&lt;figcaption&gt;Type hints underlined inÂ red&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The only thing missing here is what the MutableIntBag is being constructed from. We can find this out by changing the default Type Hint settings.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*NfXfc8uAe6LpjzIWTxuXZA.png&quot; /&gt;&lt;figcaption&gt;Change the Minimal unique type count to show hints from 2 to 1 under Java CallÂ chains&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The result is that we now additionally see the IntStream.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*000x7myXBl5VuMAANHO45Q.png&quot; /&gt;&lt;figcaption&gt;IntStream is displayed next to the call to ints on SecureRandom&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;IntelliJ is smart enough to leave out types when they repeat. The calls to limit, parallel, and map all still return IntStream. Type Hints only displays type names when they change. I have decided to leave the minimal unique count setting atÂ one.&lt;/p&gt;&lt;h4&gt;Scratches&lt;/h4&gt;&lt;p&gt;When I worked in VisualAge for Smalltalk, two of my favorite features were the Workspace and Transcript. Transcript was a special workspace, which was the equivalent of what we know in Java as System.out. The purpose of a Workspace was to allow developers to test out snippets of code to enable learning of new concepts and techniques. Iâ€™ve used JUnit tests for years for this purpose in Java. The benefit of using JUnit for this purpose is that little scripts could be easily turned into permanent tests.&lt;/p&gt;&lt;p&gt;IntelliJ has had Scratch Files for a long time, and they can be useful for experimenting with small snippets of code. I kind of think of it as JShell only built into IntelliJÂ IDEA.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.jetbrains.com/idea/2020/11/scratch-files-and-scratch-buffers/&quot;&gt;Scratch Files and Scratch Buffers | The IntelliJ IDEA Blog&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Live Templates&lt;/h4&gt;&lt;p&gt;Learn about Live Templates in IntelliJ, and you may quickly create your own minimal programming language. Live Templates give you coding super powers. I havenâ€™t had to write a for-loop by hand in years because of Live Templates.&lt;/p&gt;&lt;p&gt;As soon as you start typing in an editor in IntelliJ it will show you a filtered list of matching live templates. Below is where you can find the standard list of Live Templates for Java in IntelliJ.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*bHrfne8DkNDp9qsR6gOdYA.png&quot; /&gt;&lt;figcaption&gt;Live Templates forÂ Java&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;There is a plus sign over the right of the screen which you can use to either add new Live Templates or a Template Group. I created a Template Group for Eclipse Collections Factories.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*CKbMSc_d6qhEv3O3GJ4D9w.png&quot; /&gt;&lt;figcaption&gt;Live Templates for Eclipse Collections Factories&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;If I am in my IntelliJ editor writing some code, all I have to do to create a MutableList with some elements is type mlw followed by aÂ tab.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/514/1*kzY1cc00Jp7tx9-suOZMIA.png&quot; /&gt;&lt;figcaption&gt;Live Template automatic filtering inÂ editor&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As soon as I press tab, the code will expand as follows, and place the cursor in position for me to start typing the first element. As soon as I press tab, it will skip to the second element position, moving past the comma. It does the same when I press tab again for the thirdÂ element.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/556/1*OWEd6f0mFj1NIFbLULsiJg.png&quot; /&gt;&lt;figcaption&gt;Much easier to type mlw than Lists.mutable.with&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;When paired with Postfix Completion, I have a lot less text to type as the types on the left get filled in automatically.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/968/1*ltPm5tDEbkVZ1bQtgHNFGw.png&quot; /&gt;&lt;figcaption&gt;Using Postfix Completion together with Live Templates&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This is the result, and then I pick the variable name I want from the list or just type myÂ own.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/893/1*_KNJfah2im5UftbdXbfdMA.png&quot; /&gt;&lt;figcaption&gt;Postfix Completion result&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;So if you find yourself coding the same patterns over and over again, create a Live Template with a memorable shortcut. Even if you canâ€™t remember it right away, IntelliJ will display it in the list and the more you use it, the more likely you will be to rememberÂ it.&lt;/p&gt;&lt;p&gt;The keyboard shortcut to bring up the list of Live Templates in the editor isÂ Ctrl-J.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*zeM-QPQDc_zF3_Dsyulchw.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;For some additional IntelliJ Live Templates tips, check out this blog from &lt;a href=&quot;https://medium.com/u/82b613b921f6&quot;&gt;CraigÂ Motlin&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://motlin.com/2022-11-06-intellij-live-templates/&quot;&gt;Additional IntelliJ Live Templates for Java&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Finding and Installing CoolÂ Plugins&lt;/h4&gt;&lt;p&gt;There is a a &lt;a href=&quot;https://plugins.jetbrains.com/&quot;&gt;marketplace for plugins&lt;/a&gt; for IntelliJ and all JetBrains IDEs. You can find some neat plugins that give you useful features not provided by IntelliJ directly here. Some cool plugins that I discovered thanks to &lt;a href=&quot;https://medium.com/u/b220de0951d0&quot;&gt;Emilie Robichaud&lt;/a&gt; are in the blogÂ below.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://emilie-robichaud.medium.com/5-cool-intellij-plugins-you-must-try-7df4edd10981&quot;&gt;5 Cool IntelliJ Plugins You MUST Try!&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Some plugins are free and some are paid. I recommend reading the pricing and reviews of plugins and deciding for yourself which plugins are the most helpful. IntelliJ includes a lot of the productivity tools and plugins developers need in the Community Edition and even more in the Ultimate Edition. Hereâ€™s their online comparison of features.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/products/compare/?product=idea&amp;amp;product=idea-ce&quot;&gt;JetBrains Products Comparison&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Building Your OwnÂ Plugins&lt;/h3&gt;&lt;p&gt;So far I have shown some features you can use and customize for good effect at increasing the productivity of your IDE. There is another super-power that you can leverage to extend the IDE for a truly comprehensive Integrated Developer Experience (IDX). Build your own plugins that integrate with your internal development platforms.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/u/8fe7c47c374f&quot;&gt;Sirisha Pratha&lt;/a&gt; gave a great talk tirled â€œMake IntelliJ IDEA Your Ownâ€�. I am linking to itÂ here.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/8b8a0ce74b627fa8bdace03e0b30a9a8/href&quot;&gt;https://medium.com/media/8b8a0ce74b627fa8bdace03e0b30a9a8/href&lt;/a&gt;&lt;p&gt;If you want to learn how to build custom plugins for IntelliJ, this is a great talk toÂ watch.&lt;/p&gt;&lt;h3&gt;Own Your IDE for Your OwnÂ Good&lt;/h3&gt;&lt;p&gt;I clearly use IntelliJ IDEA as my IDE, and have shared some useful tips that can help you own it for improved productivity. Regardless of which IDE you use, I recommend taking the time to learn the facilities the IDE provides for you to increase your productivity. If your IDE is competitive, I would expect it to have equivalents of&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Keyboard Shortcuts&lt;/li&gt;&lt;li&gt;Postfix Completion&lt;/li&gt;&lt;li&gt;Scratch Files&lt;/li&gt;&lt;li&gt;Type Hints&lt;/li&gt;&lt;li&gt;Live Templates&lt;/li&gt;&lt;li&gt;Plugin Architecture and Marketplace&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If your IDE doesnâ€™t have the equivalents of these things, then you might want to suggest implementing them to your IDE provider. If you use an OSS IDE, then you might consider contributing improvements.&lt;/p&gt;&lt;p&gt;You are responsible for your productivity. You need to own it, and that means investing in it. Whether you get your IDE for free or pay a vendor for it, the cost of learning and extending your IDE will be worth the investment.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5ebc54e5709a&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 12 Feb 2023 01:02:14 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: Do you know Ecore? Looking for a reference card?</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/emf-ecore-reference-card</guid>
	<link>https://cedric.brun.io/eclipse/emf-ecore-reference-card/</link>
	<description>&lt;p&gt;â€œğ��¸ğ�‘£ğ�‘’ğ�‘Ÿğ�‘¦ğ�‘¡â„�ğ�‘–ğ�‘›ğ�‘” ğ�‘ â„�ğ�‘œğ�‘¢ğ�‘™ğ�‘‘ ğ�‘�ğ�‘’ ğ�‘šğ�‘�ğ�‘‘ğ�‘’ ğ�‘�ğ�‘  ğ�‘ ğ�‘–ğ�‘šğ�‘�ğ�‘™ğ�‘’ ğ�‘�ğ�‘  ğ�‘�ğ�‘œğ�‘ ğ�‘ ğ�‘–ğ�‘�ğ�‘™ğ�‘’, ğ�‘�ğ�‘¢ğ�‘¡ ğ�‘›ğ�‘œğ�‘¡ ğ�‘ ğ�‘–ğ�‘šğ�‘�ğ�‘™ğ�‘’ğ�‘Ÿâ€� probably was one of the mantra the &lt;a href=&quot;https://www.eclipse.org/modeling/emf/&quot;&gt;Eclipse Modeling Framework&lt;/a&gt; team (Ed Merks, Marcelo Paternostro, Dave Steinberg among othersâ€¦) sticked to when the created the core concepts which would allow the definition of all the others tools.&lt;/p&gt;

&lt;p&gt;Ecore is a kernel, you define your domain specific model using these constructs. It boils down to classes, types, attributes and relationships, yet there is a lot of beauty in the way it has been designed and we can safely say it passed the test of time. In 2016 I tried to condensed all of it in a single reference card. I did not finished it to the point of publishing it but Iâ€™m doing it today (better late than never!)&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://cedric.brun.io/images/blog/2023/Ecore_reference_card.pdf&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/2023/Ecore_reference_card.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Ecore Reference Card&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To produce it I exclusively used Open-Source tools :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ecoretools/&quot;&gt;Ecore Tools&lt;/a&gt;: Ecore diagraming editor built on top of Eclipse Sirius ,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt; : one of my favorite OSS tool to produce vector graphics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I created 4 distincts diagrams from the Ecore.ecore model, then used the â€œExport as Imageâ€� feature of Sirius to get SVG files out of it. I dragged and dropped those file in Inkscape, scaled, composed a bit, and voilÃ  ! Here is the refcard.&lt;/p&gt;

&lt;p&gt;You can decorate your office now ;) Hope you enjoy&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/emf-ecore-reference-card/&quot;&gt;Do you know Ecore? Looking for a reference card?&lt;/a&gt; was originally published by CÃ©dric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on February 09, 2023.&lt;/p&gt;</description>
	<pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.34 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/02/02/eclipse-theia-1-34-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/02/02/eclipse-theia-1-34-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.34 release! The release contains 51 merged pull requests and we welcome eight four new contributors. In this article we will highlight some selected...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/02/02/eclipse-theia-1-34-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.34 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE track at Devnexus 2023!!!!</title>
	<guid isPermaLink="false">7303 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-track-devnexus-2023</link>
	<description>&lt;span&gt;Jakarta EE track at Devnexus 2023!!!!&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;We have great news to share with you!&lt;/p&gt;

&lt;p&gt;For the very first time at &lt;a href=&quot;https://devnexus.com/&quot;&gt;Devnexus 2023&lt;/a&gt; we will have &lt;b&gt;Jakarta EE track&lt;/b&gt; with 10 sessions and we will take this opportunity, to whenever possible, celebrate all we have accomplished in Jakarta EE community.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Jakarta EE track sessions&lt;/b&gt;&lt;/p&gt;

&lt;ul style=&quot;padding-inline-start: 48px;&quot;&gt;&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/5-years-of-jakarta-ee-panel-a-look-into-the-future/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;5 years of Jakarta EE Panel: a look into the future&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt; &lt;font color=&quot;#000000&quot;&gt;(hosted by Ivar and Tanja)&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/deep-dive-microprofile-6-0-with-jakarta-ee-10-core-profile/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Deep Dive MicroProfile 6.0 with Jakarta EE 10 Core Profile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/from-javax-to-jakarta-the-path-paved-with-pitfalls/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;From javax to jakarta, the path paved with pitfalls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/jakarta-ee-10-and-beyond/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Jakarta EE 10 and Beyond&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/jakarta-ee-and-microprofile-highlights/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Jakarta EE and MicroProfile Highlights&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/jakarta-ee-for-spring-developers/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Jakarta EE for Spring Developers&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/jakarta-ee-integration-testing/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Jakarta EE integration testing&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/jakarta-ee-or-spring-real-world-testimonies/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Jakarta EE or Spring? Real world testimonies&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/let-s-take-a-look-at-how-a-jakarta-ee-cloud-native-application-should-look/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Let's take a look at how a Jakarta EE cloud-native application should look!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 1.32;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;b id=&quot;docs-internal-guid-55f92677-7fff-65db-dd5d-ab85ba4b034e&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;a href=&quot;https://devnexus.com/presentations/upgrading-a-legacy-java-ee-app-with-style/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #337ab7;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;font-variant: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;vertical-align: baseline;&quot;&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;Upgrading a Legacy Java EE App with Style&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You may not be aware but this year (yes, time flies!!) marks 5 years of Jakarta EE, so we will be celebrating through out the year! &lt;a href=&quot;https://devnexus.com/&quot;&gt;Devnexus 2023&lt;/a&gt;, looks a great place to mark this milestone as well! So stay tuned for details, but in the meanwhile please help us out, register for the event come to see us and spread the word.&lt;/p&gt;

&lt;p&gt;Help us out in spreading the word about &lt;b&gt;Jakarta EE track @&lt;/b&gt;&lt;b&gt;&lt;a href=&quot;https://devnexus.com/&quot;&gt;Devnexus 2023&lt;/a&gt;&lt;/b&gt;, just re-share posts you see from us on various social platforms!&lt;br /&gt;
To make it easier for you to spread the word on socials,  we also have prepared a &lt;a href=&quot;https://drive.google.com/drive/u/0/folders/1uYgofusJO0IJ-nfQ0kvN2QJVBB7EDRYP&quot;&gt;social kit document&lt;/a&gt; to help us with promotion of the &lt;b&gt;Jakarta EE track @&lt;/b&gt;&lt;b&gt;&lt;a href=&quot;https://devnexus.com/&quot;&gt;Devnexus 2023&lt;/a&gt;&lt;/b&gt;, sessions and speakers. The social kit document is going to be updated with missing sessions and speakers, so visit often and promote far and wide.&lt;br /&gt;&lt;br /&gt;&lt;u&gt;&lt;i&gt;Note:&lt;/i&gt;&lt;/u&gt; Organizers wanted to do something for people impacted by the recent tech layoffs, and decided to offer a &lt;a href=&quot;https://reg.connectevents.io/ConnectEvents/devnexus2023/redeem?voucher=KRC3QHFGQU472G3D&amp;amp;subevent=None&quot;&gt;50% discount for any conference pass&lt;/a&gt; (valid for a limited time). Please use code DN-JAKARTAEE for &lt;a href=&quot;https://twitter.com/JakartaEE/&quot; rel=&quot;user&quot; target=&quot;_blank&quot;&gt;@JakartaEE&lt;/a&gt; Track to get additional 20% discount!&lt;/p&gt;

&lt;p&gt; In addition, there will be an IBM workshop that will be highlighting Jakarta EE; look for &quot;&lt;em&gt;Thriving in the cloud: Venturing beyond the 12 factors&lt;/em&gt;&quot;. Please use the promo code ($100 off): JAKARTAEEATDEVNEXUS the organizers prepared for you (valid for a limited time).&lt;/p&gt;

&lt;p&gt;I hope to see you all at &lt;b&gt;Devnexus 2023&lt;/b&gt;!&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;Tanja Obradovic&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Tue, 2023-01-31 15:25&lt;/span&gt;</description>
	<pubDate>Tue, 31 Jan 2023 20:25:49 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: What if you could design, simulate and analyze all at once using Open-Source solutions?</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/sirius-web-jupyter-notebook</guid>
	<link>https://cedric.brun.io/eclipse/sirius-web-jupyter-notebook/</link>
	<description>&lt;p&gt;At the &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse Foundation&lt;/a&gt; conference last October, we had the opportunity to demonstrate an integration of &lt;a href=&quot;https://www.eclipse.org/sirius/sirius-web.html&quot;&gt;Eclipse Sirius Web&lt;/a&gt; and &lt;a href=&quot;https://jupyter.org/&quot;&gt;Project Jupyter&lt;/a&gt; Notebook for seamless design, simulation, and analysis.&lt;/p&gt;

&lt;p&gt;As a data enthusiast, Iâ€™ve always been impressed by the versatility of Jupyter. It serves as a hub for reproducible science and a gateway to a vast array of Python ğŸ��frameworks for data scienceğŸ”¢ , visualization ğŸ“‰, machine learning and much more.
Even if the demo is fairly basic I wanted to showcase how such integrations can remodel the engineering process.&lt;/p&gt;

&lt;p&gt;I canâ€™t help but imagine the endless possibilities of quickly simulating design choices and making data-driven decisions on the spot. No more tedious data transfer between tools. The future of engineering is looking brighter every day with these open-source solutions.&lt;/p&gt;

&lt;p&gt;What do you think? Have you used &lt;strong&gt;ğ�—�ğ�˜‚ğ�—½ğ�˜†ğ�˜�ğ�—²ğ�—¿&lt;/strong&gt; or &lt;strong&gt;ğ�—˜ğ�—°ğ�—¹ğ�—¶ğ�—½ğ�˜€ğ�—² ğ�—¦ğ�—¶ğ�—¿ğ�—¶ğ�˜‚ğ�˜€&lt;/strong&gt; in your work? How? Would you consider it ?&lt;/p&gt;

&lt;video controls=&quot;&quot; height=&quot;360&quot; width=&quot;640&quot;&gt;&lt;source src=&quot;https://cedric.brun.io/media/SiriusWeb and JupyterNotebook.mp4&quot; /&gt;Your browser does not support the video tag.&lt;/video&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/sirius-web-jupyter-notebook/&quot;&gt;What if you could design, simulate and analyze all at once using Open-Source solutions?&lt;/a&gt; was originally published by CÃ©dric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on January 31, 2023.&lt;/p&gt;</description>
	<pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Melanie Bats: 2023.1: Follow the water rabbit!</title>
	<guid isPermaLink="true">http://melb.enix.org/2023/01/27/2023.1.0/</guid>
	<link>http://melb.enix.org/2023/01/27/2023.1.0/</link>
	<description>&lt;p&gt;2023 has been here for a month, and it’s time to hop into the year of the Water Rabbit according to the Chinese calendar.
Preparing the Sirius Web project’s objectives, I was wondering: what’s in store for this year? And, just for curiosity, I searched for the chinese zodiac fortune predictions for 2023:&lt;/p&gt;

&lt;blockquote&gt;
The year of the Water Rabbit is going to be a gentler year.&lt;br /&gt;
We’ll have time to take a breather.&lt;br /&gt;
We’ve been in the tunnel for the last few years, and the light is getting bigger now.
&lt;/blockquote&gt;

&lt;p&gt;And “OMG! that’s exactly how I feel!”, we have been working on &lt;a href=&quot;https://www.eclipse.org/sirius/sirius-web.html&quot;&gt;Eclipse Sirius Web&lt;/a&gt; really hard for the last two years, and we are gently landing to a new maturity stage. We introduced many new features in 2022 and in parallel, we are engaged in a quality process to ensure a sustainable product for the next decade.&lt;/p&gt;

&lt;p&gt;Follow the rabbit and discover the new 2023.1 Sirius Web release (and its soundtrack, I know you like it!):&lt;/p&gt;

&lt;h2 id=&quot;end-user&quot;&gt;End user&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Your node is fadin’&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote cite=&quot;https://youtu.be/NE9wJ4eveOQ&quot;&gt;
Your love is fadin'
&lt;/blockquote&gt;
&lt;figcaption&gt;—Kanye West, &lt;cite&gt;&lt;a href=&quot;https://youtu.be/NE9wJ4eveOQ&quot;&gt;Fade&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Sirius Web used to display all elements of a diagram but in a large diagram, the user may want to focus only on certain elements that are more relevant to his use.
Since 2023.1, you can hide or fade a diagram element through the UI.
If a diagram element is hidden, all contained nodes and connected edges have to be hidden too. After an element is hidden, in case of manual layout, the layout remains the same.
If a diagram element is faded, there is no propagation to contained or connected diagram elements. Concerning faded graphic elements, they are still visible (from the user point of view) so the auto-layout will be applied.
&lt;img alt=&quot;Hide/Fade&quot; src=&quot;http://melb.enix.org/img/2023.1/hide_fade.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;studio-maker&quot;&gt;Studio Maker&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Provide your images at runtime!&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&quot;https://www.youtube.com/watch?v=Z7sNWMvLLl4&quot;&gt;
Shatter my image with the stones you throw&lt;br /&gt;
Don't shatter my image with the stones you throw
&lt;/blockquote&gt;
&lt;figcaption&gt;—Dolly Parton, &lt;cite&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Z7sNWMvLLl4&quot;&gt;Shattered images&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Users can now upload their own images from a project’s new settings page. These images can be displayed in forms using the new image widget, or in View-based diagrams.
&lt;img alt=&quot;Images Settings&quot; src=&quot;http://melb.enix.org/img/2023.1/images_settings.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;List compartments!&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote cite=&quot;https://www.youtube.com/watch?v=yw-Wmd3HT24&quot;&gt;
I redesign that heart of yours&lt;br /&gt;
7 compartments plus one&lt;br /&gt;
You might need it&lt;br /&gt;
7 compartments plus two
&lt;/blockquote&gt;
&lt;figcaption&gt;—Rainbirds, &lt;cite&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=yw-Wmd3HT24&quot;&gt;7 compartments&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;You loved the Sirius Desktop compartments? Now, it also exists in Sirius web. Starting from 2023.1, we support vertical compartments to display list elements. It’s a first step we will continue to improve in the next releases.
&lt;img alt=&quot;Compartments&quot; src=&quot;http://melb.enix.org/img/2023.1/list_compartment.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Circle of Edge and Completion!&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote cite=&quot;https://youtu.be/GibiNy4d4gc&quot;&gt;
It's the circle of life&lt;br /&gt;
And it moves us all&lt;br /&gt;
Through despair and hope
&lt;/blockquote&gt;
&lt;figcaption&gt;—The Lion King, &lt;cite&gt;&lt;a href=&quot;https://youtu.be/GibiNy4d4gc&quot;&gt;Circle Of Life&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We enhance the way to &lt;a href=&quot;https://docs.obeostudio.com/2023.1.0/help_center.html#view_definition&quot;&gt;create your custom representations&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We provide new arrow circle styles : Circle, FillCircle and CrossedCircle.
&lt;img alt=&quot;Arrow Styles&quot; src=&quot;http://melb.enix.org/img/2023.1/arrow_styles.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;We have support for completion in the View details for &lt;strong&gt;Domain types&lt;/strong&gt; and &lt;strong&gt;AQL expressions&lt;/strong&gt;. Any field in the property view which has a green background expects a Domain type and yellow background expects an interpreted expression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In these fields, auto-completion can be triggered by hitting &lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://github.com/mbats/sirius-blog/blob/master/keyboard/blog/images/computer_key_Ctrl_T.png?raw=true&quot; /&gt;+&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://github.com/mbats/sirius-blog/blob/master/keyboard/blog/images/computer_key_Space_bar_T.png?raw=true&quot; /&gt;.&lt;/p&gt;
&lt;p&gt;When hitting auto-completion on an empty expression, the first completion proposal will correspond to the features, services, etc. which are available on the current element.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;If I am a rich form&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote cite=&quot;https://youtu.be/GibiNy4d4gc&quot;&gt;
If I was rich girl&lt;br /&gt;
Na, na, na, na, na, na, na, na, na, na, na&lt;br /&gt;
See, I'd have all the money in the world
&lt;/blockquote&gt;
&lt;figcaption&gt;—Gwen Stefani, &lt;cite&gt;&lt;a href=&quot;https://youtu.be/GibiNy4d4gc&quot;&gt;Rich Girl&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We introduced with 2022.7 a WYSIWYG editor to simplify and speed up the process of &lt;a href=&quot;https://docs.obeostudio.com/2023.1.0/help_center.html#form_description_editor&quot;&gt;building a Form Description&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Form Description Editor&quot; src=&quot;http://melb.enix.org/img/2023.1/FormDescriptionEditor.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We continue our work to enrich forms, with support for:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;style preview&lt;/strong&gt;: you can see the static styles directly in the form preview (for instance, on the previous screenshot the green and red buttons).&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;a basic &lt;strong&gt;image widget&lt;/strong&gt;:
 &lt;img alt=&quot;Image Widget&quot; src=&quot;http://melb.enix.org/img/2023.1/image_widget.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;a &lt;strong&gt;rich text edition widget&lt;/strong&gt;: The widget behaves in a similar way to the existing textfield and textarea widgets, except that the text value should be valid Markdown, and can be edited in a WYSIWYG way by the end user.
 &lt;img alt=&quot;Rich Text Widget&quot; src=&quot;http://melb.enix.org/img/2023.1/rich_text.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;groups&lt;/strong&gt; : A Group is used to represent a Section in a details view tab.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;toolbar actions&lt;/strong&gt;: A group can also define toolbar actions which will be used to create buttons in the toolbar of the group to let the end user execute some operations easily.
 &lt;img alt=&quot;Groups &amp;amp; Toolbar actions&quot; src=&quot;http://melb.enix.org/img/2023.1/FormDescriptionEditorToolbar.gif&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;For the end user:
    &lt;ul&gt;
      &lt;li&gt;A “link with editor” option to disable the auto link between the explorer and the diagram view&lt;/li&gt;
      &lt;li&gt;Auto-wrap labels&lt;/li&gt;
      &lt;li&gt;Templates to ease the creation of new content&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For the studio maker:
    &lt;ul&gt;
      &lt;li&gt;Free form compartments&lt;/li&gt;
      &lt;li&gt;Updates on the View&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For the developer:
    &lt;ul&gt;
      &lt;li&gt;Switch to Java 17&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it for this release! As usual, you can find the &lt;a href=&quot;https://docs.obeostudio.com/#_release_notes&quot;&gt;detailed release notes&lt;/a&gt; in our documentation: &lt;a href=&quot;https://docs.obeostudio.com/&quot;&gt;https://docs.obeostudio.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to all our valued customers, we truly appreciate your involvement in sponsoring the Sirius Web open source project! You want to join us and become a Sirius Web backer, send me an email, or &lt;a href=&quot;https://www.obeosoft.com/fr/contact&quot;&gt;contact the team&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wish you all a &lt;em&gt;Hoppy New Rabbit Year&lt;/em&gt;!&lt;/p&gt;</description>
	<pubDate>Fri, 27 Jan 2023 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update - 2022 in Review</title>
	<guid isPermaLink="false">7301 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-2022-review</link>
	<description>&lt;span&gt;Jakarta EE Community Update - 2022 in Review &lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt; &lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;2022 was an extremely important and successful year for Jakarta EE! We continue to see growth in membership, growth of compatible products, and most importantly growth of contributors and committers. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Here are some highlights from 2022:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 style=&quot;line-height: 1.38; margin-top: 17px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Releases&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We released&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/release/10/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE 10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;the first innovative community driven release with the new features. Jakarta EE 10 defines a new profile specification with Jakarta EE Core Profile 10. The “Core Profile” is targeting modernized and lightweight Java applications and microservices.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;border: none;&quot;&gt;&lt;span style=&quot;display: inline-block;&quot;&gt;&lt;span style=&quot;overflow: hidden;&quot;&gt;&lt;span style=&quot;width: 307px;&quot;&gt;&lt;span style=&quot;height: 157px;&quot;&gt;&lt;img src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/CaptureJEE10.png&quot; style=&quot;width: 400px; height: 205px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The release also contains updates in over 20 specifications and adds important features requested by our global community. It also has a new profile:Jakarta EE Core Profile &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Contexts and Dependency Injection (CDI) 4.0, including CDI-Lite that enables build time extensions&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Security 3.0 supporting OpenID Connect&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Servlet 6.0 for simplified programming and improved security&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Faces (JSF) 4.0 with a modernized API using CDI&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta JSON Binding (JSON-B) 3.0 with new support for polymorphic types&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta RESTful Web Services standardizes a Java SE Bootstrap API and standard support for multipart/form-data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Persistence standardizing UUID as Basic Type and extending Query language and Query API&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Concurrency 3.0 is moved to the Web Profile and enhances parallel and reactive programming models available to applications&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p style=&quot;line-height: 1.38; text-align: center; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;border: none;&quot;&gt;&lt;span style=&quot;display: inline-block;&quot;&gt;&lt;span style=&quot;overflow: hidden;&quot;&gt;&lt;span style=&quot;width: 446px;&quot;&gt;&lt;span style=&quot;height: 506px;&quot;&gt;&lt;img src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/JEE10Specs.png&quot; style=&quot;width: 480px; height: 545px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The work on &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE 11&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; has started! Now is a great time to get involved and have an impact on the development of the technology. The Jakarta EE Steering Committee has approved a resolution about the next Jakarta EE 11 release with the following high level guidelines: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Target Java version 21 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Target GA date Q1 2024&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Priorities &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Unified APIs improving Developer Experience&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;New Specifications&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Build on the Latest Java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
		&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Enable Community Contribution&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p style=&quot;line-height: 1.38; margin-top: 16px; margin-bottom: 16px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;These guidelines are provided to encourage a common community direction for Jakarta EE 11.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Platform team meetings are open for everyone to attend! There are weekly calls happening on Tuesdays at 11:00 AM ET and everyone is welcome to join. Please check the  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Specifications Calendar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; (&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;public url&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/ical/eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com/public/basic.ics&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;iCal&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;) for details. We are looking forward to more involvement and input from the community!  If you miss a call or are interested in seeing what is being discussed, check out the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/minutes/minutes.html&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;meeting minutes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 style=&quot;line-height: 1.38; margin-top: 17px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Membership Growth&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We have noticed growth in the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;individuals becoming contributors and committers&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; in the Jakarta EE Specification projects. We encouraged, promoted and celebrated individual contributions in one of our &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Gfy5QeTve7E&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Studio sessions&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; during the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; event. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; text-align: center; margin-top: 17px;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/members_0.png&quot; style=&quot;width: 500px; height: 430px;&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We also had a great year for &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;organization membership&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; growth. New members from 2022 are:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Beijing Vsettan Data Technology Co. Ltd. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Microsoft&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;OmniFish&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;NEC Corporation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Shenzhen Ping A Communication Technology Co., Ltd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Garden State JUG&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Open Elements&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 style=&quot;line-height: 1.38; margin-top: 17px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Compatible Products Program&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38; margin-top: 17px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/compatibility/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;compatible product list&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; is continually growing!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;In total for all the releases, 17 vendors with 19 products listed are on the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/compatibility/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Compatible Product&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;s page so far.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; text-align: center; margin-bottom: 11px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;border: none;&quot;&gt;&lt;span style=&quot;display: inline-block;&quot;&gt;&lt;span style=&quot;overflow: hidden;&quot;&gt;&lt;span style=&quot;width: 342px;&quot;&gt;&lt;span style=&quot;height: 413px;&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/GwWj9NCFWlB6nNjezoyUN1rv5asylw8nftIRCbmLyoQBXr-FHATSzLNWiiRXyi5pLO7Cy5T2dqSEbDPJg5V3nU8131dZQX8JP5n-Kq-ggyWlfmv3YCJolSdJ2ZsXt3TGOPHmXlhrqCRJgyCg3S35gmwc_VYa-gz-27-iCEttzF6aUpybqdEnNr8QIsEzuw&quot; style=&quot;width: 342px; height: 413px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jakarta.ee/release/10/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE 10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; (5 vendors with 4 Full Profile Compatible Products and 3 Web Profile and 3 Core Profile Compatible Products; some products with multiple versions) https://jakarta.ee/compatibility/certification/10/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakarta.ee/release/9.1/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE 9.1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;(12 vendors with 11 Full Profile Compatible Products and 5 Web Profile Compatible Products; some products with multiple versions) https://jakarta.ee/compatibility/certification/9.1/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakarta.ee/release/9/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE 9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;(6 vendors with 6 Full Profile Compatible Products and 4 Web Profile Compatible Products) https://jakarta.ee/compatibility/certification/9/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakarta.ee/release/8/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE 8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;(17 vendors with 19 Full Profile Compatible Products and 6 Web Profile Compatible Products) https://jakarta.ee/compatibility/certification/8/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 style=&quot;line-height: 1.38; margin-top: 17px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;JakartaOne Livestream Events&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Our popular &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://jakartaone.org&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; virtual conference series has attracted many interesting speakers and even more attendees!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;56 Speakers&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;12 Keynotes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;33 Technical Talks&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;20 Vendor Presentations&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;36+ hours&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We had over &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;2000 registered attendees for the live event&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; and over &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;3000 YouTube playlist views&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The biggest celebration of Jakarta EE is always our&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; JakartaOne Livestream annual &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;event! This year was no exception, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;took place on &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;December 6, 2022 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;and it was a great success!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The  JakartaOne Livestream virtual conferences, as you know, run in different languages as well! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;This year we had the following language-specific events:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jakartaone.org/2022/german/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream - German&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/german&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;- June 30, 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakartaone.org/2022/japan/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne LiveStream - Japanese&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/japan&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; September 16, 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakartaone.org/zh/2022/chinese/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream - Chinese&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/zh/2022/chinese&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; - August 31, 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://jakartaone.org/2022/portuguese/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream - Portuguese&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2022/portuguese&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;September 29, 2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;If you and your community have interest in organizing the JakartaOne Livestream event, please visit jakartaone.org and find out all about &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/hostanevent/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;hosting &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;the event!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 style=&quot;line-height: 1.38; margin-top: 19px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE Developer Survey!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38; background-color: #ffffff;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Now in its sixth year, this is the enterprise Java ecosystem’s leading survey with thousands of developers sharing their insights from around the globe.  This time around, we will launch the survey on March 16, 2023. Please take the survey and share it with your network to maximize the community outreach. Your input is greatly appreciated and matters to help Java ecosystem stakeholders better understand the requirements, priorities, and perceptions of enterprise developer communities.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; background-color: #ffffff;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Key findings of the 2022 survey include: &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE is the basis for the top frameworks used for building cloud native applications&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The top three frameworks for building cloud native applications include Spring/Spring Boot, which lost ground this year at 57% (60% in 2022), followed by Jakarta EE at 53% (up from 47% in 2021), and MicroProfile at 30% (down from 34% in 2021). It’s important to note that Spring/SpringBoot is reliant on Jakarta EE developments for its operation and is not competitive with Jakarta EE. Both are critical ingredients to the healthy enterprise Java ecosystem. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta EE 9/9.1 usage has grown to 14% (vs. 9% in 2021).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;While 36% of respondents have already migrated or plan to adopt Jakarta EE 9/9.1 (with 14% already running Jakarta EE 9/9.1 in production), 19% of respondents plan to skip Jakarta EE 9/9.1 altogether and move directly to Jakarta EE 10. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Over 59% of respondents (48% in 2021) have migrated to Jakarta EE or plan to do so within the next 6-24 months.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p style=&quot;line-height: 1.38; background-color: #ffffff;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Stay tuned for the 2023 Developer Survey URL on March 16!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4 style=&quot;line-height: 1.38; margin-top: 17px; margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Jakarta Tech Talks&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta Tech Talks&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; is another very popular community oriented meet-up series that is designed to share knowledge and invite all interested to participate in Jakarta EE-related technologies. We had 13 sessions in 2022 and we have quite a few sessions already scheduled for 2023!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;If you are interested in presenting or have an idea on what you would like to hear in a Jakarta Tech Talk, please&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSdbG1FTITUCtzk36N0mc_981rMnuThqFLQMHJg2IFxOTkPoRQ/viewform&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; let us know&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot; style=&quot;line-height: 1.38;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/tech%20talks.png&quot; style=&quot;width: 500px; height: 281px;&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;______________________________&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Jakarta EE Working Group Charter can be viewed &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/jakarta_ee_charter.php&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;. More information about the working group is available via its &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;website&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; and its mailing lists can be found &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/connect/mailing-lists/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.  The Jakarta EE Working Group is supported and backed by its industry &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/membership/members/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;members&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;. The Working Group has declared these &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/ee4j&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;projects&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; as being in its purview. Jakarta EE compatible products can be viewed &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/compatibility/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Stay Connected With the Jakarta EE Community&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Subscribe to your preferred channels today:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Social media:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://twitter.com/jakartaee&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Twitter&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Facebook&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; LinkedIn Group&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/showcase/28816222/admin/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;LinkedIn Page&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Mailing lists:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; jakarta.ee-community@eclipse.org, jakarta.ee-wg@eclipse.org,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/connect/mailing-lists/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #800080;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;project mailing lists&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://app.slack.com/client/TK4DKL42G&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Slack workspace&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Calendars:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/u/0/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0@group.calendar.google.com&amp;amp;ctz=America/Toronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Community Calendar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Jakarta EE Specification Meetings Calendar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Newsletters, blogs, and emails:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Eclipse Community Newsletter&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Jakarta EE blogs&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.agilejava.eu/category/hashtag-jakartaee/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;Hashtag Jakarta EE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 700;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Meetings:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Jakarta Tech Talks&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Jakarta EE Update&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;, and Eclipse Foundation events and conferences&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt; &lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;You can find the complete list of channels&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/connect/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #800080;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;To help shape the future of open source, cloud native Java, get involved in the&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/membership/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Jakarta EE Working Group&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;To learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk, be sure to bookmark the&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;span&gt;&lt;span&gt; Jakarta EE Community Calendar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;border: none;&quot;&gt;&lt;span style=&quot;display: inline-block;&quot;&gt;&lt;span style=&quot;overflow: hidden;&quot;&gt;&lt;span style=&quot;width: 298px;&quot;&gt;&lt;span style=&quot;height: 183px;&quot;&gt;&lt;img height=&quot;183&quot; src=&quot;https://lh3.googleusercontent.com/2TlRXyRfXjsaCysC2kR0KNzxzfeHiqBuvNn-hWY7RMQ2egqseisBY9fEg1iuk7xXmKhkSZiL7T3q_X8IPUvSokmpHUoenxq-cQdn6ty8WLKC58UDD3n20lPjnmQ79UDgbcWLEOW0yBfHAQFo5K9JZOtrYqoBRX77sZkB9aTSrGejc1eCBXABw4lAS56Oyg&quot; width=&quot;298&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; background-color: #ffffff;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #202020;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;We always welcome your feedback!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;line-height: 1.38; background-color: #ffffff;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-variant: normal; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #202020;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-style: normal;&quot;&gt;&lt;span style=&quot;text-decoration: none;&quot;&gt;Thank you for your interest and involvement in Jakarta EE!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;Tanja Obradovic&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-01-25 13:08&lt;/span&gt;</description>
	<pubDate>Wed, 25 Jan 2023 18:08:39 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Getting started with Theia - The nextGen Eclipse Platform</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/01/25/getting-started-with-theia-the-nextgen-eclipse-platform/</guid>
	<link>https://eclipsesource.com/blogs/2023/01/25/getting-started-with-theia-the-nextgen-eclipse-platform/</link>
	<description>&lt;p&gt;Are you looking for a modern platform for building a custom tool or IDE that runs in the cloud but also as a desktop application? Do you maintain an existing project based on the Eclipse tools...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/25/getting-started-with-theia-the-nextgen-eclipse-platform/&quot; rel=&quot;nofollow&quot;&gt; Getting started with Theia - The nextGen Eclipse Platform&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: Are your engineering tools built on top of strong and well-maintained technologies?</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/engineering-tools-technologies</guid>
	<link>https://cedric.brun.io/eclipse/engineering-tools-technologies/</link>
	<description>&lt;p&gt;When you pick technologies to build tools empowering hundreds of your engineers, you aim at making the best choice. Open-Source is the best when you play the long term.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse Foundation&lt;/a&gt; ensures that all the metrics related to an Open-Source project are exposed on its 
website, helping you to assess the effort which goes into maintaining and updating the technology.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;ğ�Ÿ­ğ�Ÿ® ğ�—¿ğ�—²ğ�—¹ğ�—²ğ�—®ğ�˜€ğ�—²ğ�˜€ ğ�—¶ğ�—» ğ�Ÿ®ğ�Ÿ¬ğ�Ÿ®ğ�Ÿ®&lt;/strong&gt; : ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ ğŸ“¦ , the &lt;a href=&quot;https://www.eclipse.org/sirius/&quot;&gt;Eclipse Sirius&lt;/a&gt; project demonstrates its strength as a platform for building graphical modeling tools in any engineering domain. Each release brings a number of improvements and fixes to the core technology. &lt;strong&gt;ğ�—œğ�—» ğ�˜�ğ�—µğ�—² ğ�—¹ğ�—®ğ�˜€ğ�˜� ğ�Ÿ² ğ�˜†ğ�—²ğ�—®ğ�—¿ğ�˜€ ğ�˜�ğ�—µğ�—² ğ�˜�ğ�—²ğ�—®ğ�—º ğ�—¯ğ�—²ğ�—µğ�—¶ğ�—»ğ�—± ğ�—¦ğ�—¶ğ�—¿ğ�—¶ğ�˜‚ğ�˜€ ğ�˜€ğ�—µğ�—¶ğ�—½ğ�—½ğ�—²ğ�—± ğ�—»ğ�—¼ ğ�—¹ğ�—²ğ�˜€ğ�˜€ ğ�˜�ğ�—µğ�—®ğ�—» ğ�Ÿ²ğ�Ÿ¬ ğ�—¿ğ�—²ğ�—¹ğ�—²ğ�—®ğ�˜€ğ�—²ğ�˜€ !&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are committed to maintain a similar pace for 2023. We are still at the beginning of the year and both Sirius and Sirius Web have already shipped one, enjoy!&lt;/p&gt;

&lt;p&gt;Building graphical modeling tools can be a complex undertaking, especially if they need to support many features and functions. At Obeo, we have extensive experience in this area and strive to make the process as easy and accessible as possible. To accomplish this, we rely on several strategies, including modular design, higher-level abstractions, and the ability to iterate quickly on a tool definition. In the last few years we have kept these principles while transitionning the technologies to the Web.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://projects.eclipse.org/projects/modeling.sirius/releases/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/2023/Sirius-2022-releases-hd.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Eclipse Sirius release records&lt;/figcaption&gt;
&lt;/figure&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/engineering-tools-technologies/&quot;&gt;Are your engineering tools built on top of strong and well-maintained technologies?&lt;/a&gt; was originally published by CÃ©dric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on January 25, 2023.&lt;/p&gt;</description>
	<pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Contributor Award: Theia Developers for Detachable Views</title>
	<guid isPermaLink="false">7282 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-contributor-award-theia-developers-detachable-views</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Contributor Award: Theia Developers for Detachable Views&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;The Eclipse Cloud DevTools contributor award for this month goes to the dedicated Theia developers at &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt; for enabling &quot;&lt;a href=&quot;https://eclipsesource.com/blogs/2022/10/13/eclipse-theia-1-30-release-news-and-noteworthy/&quot;&gt;Detachable Views&quot; in Eclipse Theia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/detachable-views_1.gif&quot; style=&quot;width: 700px; height: 394px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Detachable views in IDEs and tools have been a standard feature on the desktop for years. And there's a good reason for that. Some tasks, like debugging or tracing, require several views to be open at the same time in order to understand the full picture of the interrelated data, source code, etc. It becomes important to efficiently utilize all available screen space and, thus, to be able to detach certain views from the main window and move them around, e.g to an alternate display. However, most modern, web-based tools no longer support detachable views.&lt;/p&gt;

&lt;p&gt;Theia as a platform aims to provide adopters with full freedom in terms of how they design their user experience. As a consequence, with its most recent release, Theia introduced experimental support for detaching web views, as well as the standard terminal views. Further types of views can be made detachable by adopters if they decide to explicitly support this feature.&lt;/p&gt;

&lt;p&gt;This first of a kind support for detachable windows in a web-based tool is another great example of how well open source collaboration works in Theia. The feature was initially investigated by Ericsson and EclipseSource. Based on the results of this investigation, STMicroelectronics took over the work with some help from Arm and enabled the support for web views and the terminal view.&lt;/p&gt;

&lt;p&gt;Congratulations to all participants, well earned!&lt;/p&gt;

&lt;p&gt;The Cloud DevTools Working Group provides a vendor-neutral ecosystem of open-source projects focused on defining, implementing and promoting best-in-class web and cloud-based development tools. It is hosted at the Eclipse Foundation, current members of the group include &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=682&quot;&gt;Ericsson&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=656&quot;&gt;IBM&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=863&quot;&gt;Obeo&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=731&quot;&gt;RedHat&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=665&quot;&gt;SAP&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=848&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=823&quot;&gt;Arm&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=690&quot;&gt;EclipseSource&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1069&quot;&gt;Renesas&lt;/a&gt;, &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=800&quot;&gt;STMicroelectronics&lt;/a&gt; and &lt;a href=&quot;http://www.eclipse.org/membership/showMember.php?member_id=1194&quot;&gt;TypeFox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This Eclipse Cloud DevTools contributor award is sponsored by &lt;a href=&quot;https://eclipsesource.com/&quot;&gt;EclipseSource&lt;/a&gt;, providing &lt;a href=&quot;https://eclipsesource.com/services/tools/&quot;&gt;consulting and implementation services&lt;/a&gt; for &lt;a href=&quot;https://eclipsesource.com/web-and-cloud-based-tools/&quot;&gt;web-based tools&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-glsp/&quot;&gt;Eclipse GLSP&lt;/a&gt;,  &lt;a href=&quot;https://eclipsesource.com/technology/eclipse-theia/&quot;&gt;Eclipse Theia&lt;/a&gt;, and &lt;a href=&quot;https://eclipsesource.com/technology/vs-code/&quot;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Sun, 2023-01-22 12:48&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia&quot; hreflang=&quot;en&quot;&gt;Theia&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/theia-contributor-award&quot; hreflang=&quot;en&quot;&gt;Theia Contributor Award&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Sun, 22 Jan 2023 17:48:15 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: The Clarity of Open Source</title>
	<guid isPermaLink="false">https://medium.com/p/640871544e9f</guid>
	<link>https://donraab.medium.com/the-clarity-of-open-source-640871544e9f?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;More than just transparency, open source provides reflection.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;A picture of a calm and clear lake in Maine with the reflection of trees in the water.&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*EhlxCNr39OrtEPUXF2KfBw.png&quot; /&gt;&lt;figcaption&gt;Photo from a clear lake in Maine I took in September 2022&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Transparency and Reflection&lt;/h3&gt;&lt;p&gt;Transparency is a benefit that is often touted about open source software. You can see the code and know exactly what it does and doesnâ€™t do. From a consumer perspective, there are no surprises. You can read the code and like it and use it, cringe and avoid it, or maybe the code is good enough to start with and you choose to get involved and help improve it. The transparency of open source helps make your decision making processÂ clearer.&lt;/p&gt;&lt;p&gt;Transparency is only one aspect of clarity that open source provides. Another aspect is reflection. You can learn a lot about the developers who contribute to an open source project based on their contributions. You can learn about the culture of a project and its community. The contributions members of an open source project make are clear reflections of the members of that community. The reflection comes not just from what is contributed, but how contributions are received and how the project engages with the community of contributors. How a project community conducts itself should be covered by a published Code of Conduct. A Code of Conduct of a project community is as important as the the codeÂ itself.&lt;/p&gt;&lt;h3&gt;Seen andÂ Unseen&lt;/h3&gt;&lt;p&gt;I commend developers who have the courage to make themselves seen in the open source projects that they contribute to. I encourage developers to understand the benefits of reflecting themselves in the software that they use by also becoming a contributor.&lt;/p&gt;&lt;p&gt;The benefits may not be financial, at least at first. As someone who has hired software developers, I can tell you that the reflections you leave in the projects you contribute to and the evidence of how you conduct yourself in the community are potentially more valuable as a first impression to me than any opaque claims you make on your resume. If I canâ€™t see your reflection in open source contributions and the way you conduct yourself in the community, I will need to rely on other verification mechanisms to validate any claims of awesomeness.&lt;/p&gt;&lt;p&gt;Developers whose contributions remain unseen and locked up in private repos and proprietary software may face tougher recruiting challenges in the long run. Of course, this may not concern you if you work on amazing proprietary software that is well known, profitable, and that you can substantiate any claims about contributions you haveÂ made.&lt;/p&gt;&lt;h3&gt;Can you see yourselfÂ now?&lt;/h3&gt;&lt;p&gt;The projects we work on for hundreds or thousands of hours are reflections of ourselves. They often reflect our abilities, our challenges, our great ideas, our hopes, our failures, and our triumphs. Most of the code and blogs I am most proud of, I will never see again. Neither will anyone else. If someone does still see the private contributions I made, they will probably never have met or known the person who originally made them. The proprietary code and blogs I wrote for the first 30 years of my career are locked up in the internal systems of my current or former employers. All current employers will eventually become former employers, no matter how much you enjoy working for them. None of us will work and liveÂ forever.&lt;/p&gt;&lt;p&gt;Open source is a more than just a mirror reflecting a temporary image. An open source project is a community portrait that evolves over time, and has embedded in it, the memory all of the artists that have contributed. The portraits may survive all of the original contributors. If you want to remain in the picture, well past the time when you made your contributions, and not be locked up and forgotten in some companyâ€™s private repositories, then open source is an answer to potential contribution immortality. The &lt;a href=&quot;https://archiveprogram.github.com/arctic-vault/&quot;&gt;Arctic Code Vault Contributor&lt;/a&gt; badge is something I did not expect to see when I started contributing to open source projects on GitHub. Do I think anyone will ever see the millions of portraits stored in this code time capsule? Probably not, but the knowledge that it exists is oddly satisfying and comforting. The thought that something I contributed was important enough to be stored somewhere safe for a thousand years makes me smile. I enjoy having this badge on my GitHubÂ profile.&lt;/p&gt;&lt;h3&gt;Self-reflection&lt;/h3&gt;&lt;p&gt;The great things that are built in open source are a reflection of the community of contributors that build them. Each person that contributes something to a project can see a bit of themselves in the picture. Every line of code, test, documentation, code review, and issue is a valuable contribution to aÂ project.&lt;/p&gt;&lt;p&gt;I hope this blog sparks a little self-reflection, and motivates a few folks to cast a reflection or two as they begin their open source journey. Amazing problems are solved by ordinary people doing extraordinary things together in open source. There are many projects looking for more contributors.&lt;/p&gt;&lt;p&gt;I also hope this blog reminds the users of open source software, that there are many individual contributors out there who have given their time and energy to build the amazing free software that they are using. Open source is more than just source code that can be seen. It is the reflection of all of the contributors who invested their time in building it. Star a repo, or say thank you in a blog or tweet or perhaps in person to a contributor youÂ know.&lt;/p&gt;&lt;p&gt;To all the open source contributors out there. I see you. Thank you for your contributions. ðŸ™�&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;A photo I took below the Mike Oâ€™Callaghanâ€Šâ€”â€ŠPat Tillman Memorial Bridge (aka Hoover Dam Bypass Bridge)&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*B1W6gUtiYnK58Gfp4uXccg.png&quot; /&gt;&lt;figcaption&gt;A photo I took below the Mike Oâ€™Callaghanâ€Šâ€”â€ŠPat Tillman Memorial Bridge (aka Hoover Dam BypassÂ Bridge)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;I am the creator of and a Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project which is managed at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=640871544e9f&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 19 Jan 2023 01:57:10 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Diagram Editors with GLSP: Why flexibility is key</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/01/17/diagram-editors-with-glsp-why-flexibility-is-key/</guid>
	<link>https://eclipsesource.com/blogs/2023/01/17/diagram-editors-with-glsp-why-flexibility-is-key/</link>
	<description>&lt;p&gt;Are you wondering how you should nowadays develop diagram editors to be durable, given the innovative and fast moving world of web-based technologies and cloud IDEs? The answer is clear: build them to...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/17/diagram-editors-with-glsp-why-flexibility-is-key/&quot; rel=&quot;nofollow&quot;&gt; Diagram Editors with GLSP: Why flexibility is key&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: European Cyber Resilience Act: Potential Impact on the Eclipse Foundation</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1704</guid>
	<link>https://eclipse-foundation.blog/2023/01/15/european-cyber-resiliency-act-potential-impact-on-the-eclipse-foundation/</link>
	<description>&lt;p&gt;Europe has proposed new legislation intended to improve the state of cybersecurity for software and hardware products made available in Europe. The &lt;a href=&quot;https://digital-strategy.ec.europa.eu/en/library/cyber-resilience-act&quot;&gt;Cyber Resilience Act&lt;/a&gt; (“CRA”) will mandate that all manufacturers take security into account across both their development processes and the lifecycle of their products once in the hands of consumers. &lt;/p&gt;



&lt;p&gt;This document discusses the legislation and the potential impact it may have on the Eclipse Foundation and its 400+ projects and community. Many of the issues noted could have a similar impact on other open source organizations and projects. It is written based on our reading of the current draft legislation and a number of assumptions stated below. Note that is consciously does not include a discussion of possible revisions to the legislation, although we may post a followup which does. It also does not include any discussion concerning the warranty and product liability provisions of the legislation as we have not yet analyzed the impact those may have on us. &lt;/p&gt;



&lt;p&gt;We are sincerely looking for comments and feedback, as it is quite possible that we have misunderstood or misinterpreted the documents.&lt;/p&gt;



&lt;p&gt;It is important to stress that the Eclipse Foundation is better positioned to deal with the fallout from the CRA than many other open source organizations. We have staff. We have some resources. We have common community processes and practices shared across our many projects. We have CI/CD infrastructure shared by most (but not all) of our projects. We have a security team, written security policies and procedures, and are a CVE numbering authority. Despite being in a better position than most, we fear that the obligations set forth by the legislation will cripple the Eclipse Foundation and its community. &lt;/p&gt;



&lt;p&gt;There are a number of other excellent summaries of the worrisome impact of this legislation on the open source ecosystem. We highly recommend reading:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.nlnetlabs.nl/open-source-software-vs-the-cyber-resilience-act/&quot;&gt;Open-source software vs. the proposed Cyber Resilience Act&lt;/a&gt; by Maarten Aertsen.&lt;/li&gt;



&lt;li&gt;&lt;a href=&quot;https://www.internetsociety.org/blog/2022/10/the-eus-proposed-cyber-resilience-act-will-damage-the-open-source-ecosystem/&quot;&gt;The EU’s Proposed Cyber Resilience Act Will Damage the Open Source Ecosystem&lt;/a&gt; by Olaf Kolkman.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Both of those articles primarily focus on the potential impact of the CRA on individual open source projects. Olaf’s document in particular suggests improvements to the draft. In this document we want to focus on the impact on an organization such as the Eclipse Foundation and its open source projects &lt;em&gt;if the CRA was approved in its current form&lt;/em&gt;. How the CRA should or could be amended is being discussed elsewhere. The purpose of this document is to provide a resource explaining the impact of the legislation as it stands today.&lt;/p&gt;



&lt;p&gt;It is important to note that the CRA does make a laudable attempt to carve out free and open source software but only “&lt;em&gt;…outside the course of a commercial activity…&lt;/em&gt;”. Maarten Aertsen does an excellent job of summarizing the problems with this carve out. In particular he references a definition of commercial activity used in EU &lt;a href=&quot;https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=OJ:C:2022:247:FULL&amp;amp;from=EN&quot;&gt;Blue guide&lt;/a&gt; to the implementation of EU product rules which states:&lt;/p&gt;


&lt;p style=&quot;padding-left: 40px;&quot;&gt;&lt;em&gt;Commercial activity is understood as providing goods in a business related context. Non-profit organisations may be considered as carrying out commercial activities if they operate in such a context. This can only be appreciated on a case by case basis taking into account the regularity of the supplies, the characteristics of the product, the intentions of the supplier, etc. In principle, occasional supplies by charities or hobbyists should not be considered as taking place in a business related context.&lt;/em&gt;&lt;/p&gt;


&lt;h2 class=&quot;wp-block-heading&quot;&gt;Assumptions&lt;/h2&gt;



&lt;ul&gt;
&lt;li&gt;The CRA references the term “product” over 600 times but does not appear to define it. The act does define the term ‘product with digital elements’. For the purposes of this document we will assume that for the purposes of the CRA, any Eclipse Foundation project software made generally available to the public as a downloadable, installable, and executable binary would be considered a ‘product with digital elements’ under the regulation.
&lt;ul&gt;
&lt;li&gt;In addition, there are at least some EF projects which may be considered ‘critical product with digital elements’ (e.g. Kura, Keyple, ioFog, fog05) or ‘highly critical product with digital elements’ (e.g. Oniro, Leda, 4diac) .&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;The CRA defines ‘manufacturer’ as “&lt;em&gt;any natural or legal person who develops or manufactures products with digital elements or has products with digital elements designed, developed or manufactured, and markets them under his or her name or trademark, whether for payment or free of charge&lt;/em&gt;”. For the purposes of this document, we will assume that the Eclipse Foundation would be considered the manufacturer of the binaries produced by its projects. Among other reasons justifying this assumption, the Eclipse Foundation asserts that it owns the trademark rights for each of its projects and the binaries they release and (resources permitting) we market them as works of the Eclipse Foundation. &lt;/li&gt;



&lt;li&gt;As mentioned above there is an attempt to exclude free and open source software produced outside the course of a commercial activity from the scope of the legislation. For the purposes of this document we will assume that Eclipse Foundation project software would be considered as produced under the course of a commercial activity, and would therefore be subject to the legislation. This assumption is based on the following:
&lt;ul&gt;
&lt;li&gt;The Eclipse Foundation is not a charity. It is a Belgian-incorporated international nonprofit association of hundreds of business members. &lt;/li&gt;



&lt;li&gt;Eclipse Foundation projects are not, generally speaking, developed by hobbyists. While some are, our projects are commonly developed by full-time employees of our member companies or by individuals who are making a living from consulting services related to their project work. &lt;/li&gt;



&lt;li&gt;Eclipse Foundation projects provide goods in a business related context. By that we mean that EF projects are largely intended to provide software which is immediately ready for adoption by businesses either as a component within a commercial product or by use by employees in their daily work.&lt;/li&gt;



&lt;li&gt;Eclipse Foundation projects provide a regularity of supply. As one extreme example, the Eclipse IDE takes great pride in having not missed a single release date in over 15 years.&lt;/li&gt;



&lt;li&gt;Eclipse Foundation projects deliver high quality software, equivalent to the quality found in commercial products. So the “characteristics of the product” are equivalent to commercial products. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Having said all of the above it is important to remind the reader that all Eclipse Foundation projects provide their software for free, on a non-profit basis, and under OSI-approved open source licenses which permit further use, study, modification, and distribution. &lt;/p&gt;



&lt;h2 class=&quot;wp-block-heading&quot;&gt;Impact Assessment&lt;/h2&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;CE Markings for Software Products&lt;/h3&gt;



&lt;p&gt;Fundamentally, the core of the proposed legislation is to extend the CE Mark regime to all products with digital elements sold in Europe. Our assumption based on the current text is that this process will be applied to open source software made available under open source licenses and provided free of charge, ostensibly under licenses which &lt;a href=&quot;https://www.softwaremaxims.com/blog/not-a-supplier&quot;&gt;disclaim any liability or warranty&lt;/a&gt;. We are deeply concerned that the CRA could fundamentally alter the social contract which underpins the entire open source ecosystem: open source software provided for free, for any purpose, which can be modified and further distributed for free, but without warranty or liability to the authors, contributors, or open source distributors. Legally altering this arrangement through legislation can reasonably be expected to cause unintended consequences to the innovation economy in Europe.&lt;/p&gt;



&lt;p&gt;Without a clearer exemption for open source, in order to comply with the legislation the Eclipse Foundation will be required to:&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;Develop, document, and implement policies and procedures for every project at the Eclipse Foundation to ensure they are conformant with the requirements of the CRA including:
&lt;ul&gt;
&lt;li&gt;All of the development and post-release security requirements set forth in Annex I, including providing notification and update mechanisms. &lt;/li&gt;



&lt;li&gt;All of the user documentation requirements set forth in Annex II.&lt;/li&gt;



&lt;li&gt;All of the product technical documentation set forth in Annex V, including “…complete information on the design and development of the product…including, where applicable, drawings and schemes and/or a description of the system architecture explaining how software components build on or feed into each other and integrate into the overall processing.”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;For each EF project release, prepare the project-specific documentation required by Annex V, including “…an assessment of the cybersecurity risks against which the product with digital elements is designed, developed, produced, delivered and maintained…”.&lt;/li&gt;



&lt;li&gt;Determine for each project whether it meets the definition of ‘product with digital elements’, ‘critical product with digital elements’, or ‘highly critical product with digital elements’.
&lt;ul&gt;
&lt;li&gt;For each project which is a ‘product with digital elements’, establish, complete, and document a CE mark self assessment process.&lt;/li&gt;



&lt;li&gt;For each ‘critical product with digital elements’ or ‘highly critical product with digital elements’ engage with an external CE auditing body and complete the additional processes required to get the CE mark approval. Note that it is not clear to us what the costs in time, resources, and money would be to implement these external audit processes. Our assumption is that they would be substantial. &lt;br /&gt;&lt;br /&gt;It is also important to note that in most other domains regulated with CE markings they are done where there are well known standards, specifications, and/or certification processes in place. These are not in place for most Eclipse Foundation open source projects. This could significantly increase the costs and risks associated with conformance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;



&lt;li&gt;For each single project release, document that the relevant CE mark process is followed (as described above), that an EU declaration of conformity is written and signed by an officer of the foundation, that the CE mark is affixed, and that the technical documentation and EU declaration of conformity is made available for at least 10 years after the release. Note that we estimate that in any given year the Eclipse Foundation’s projects make available several hundred releases.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;Article 4(3)&lt;/h3&gt;


&lt;p style=&quot;padding-left: 40px;&quot;&gt;&lt;em&gt;Member States shall not prevent the making available of unfinished software which does not comply with this Regulation provided that the software is only made available for a limited period required for testing purposes and that a visible sign clearly indicates that it does not comply with this Regulation and will not be available on the market for purposes other than testing.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;Many Eclipse Foundation projects make integration, nightly, weekly, and milestone builds available under their open source licenses available indefinitely. The intent is to provide for community testing and for traceability. These binaries are marked as such, but the terms under which they are provided do not require that they be used for testing purposes only. &lt;/p&gt;



&lt;p&gt;It is not clear how this requirement could be implemented by any open source project using modern CI/CD infrastructure and operating under the principle of transparency. Even if the binaries were marked as “testing purposes only”, the open source licenses they are provided under do, in fact, permit uses other than testing. Further, it is common practice to provide intermediate builds for extended periods of time (often permanently) to provide testers with access to past builds for problem identification and remediation. Discontinuing that practice would be significantly disruptive. And any solution based on providing intermediate builds under non-open source licenses would be impossible for Eclipse Foundation projects, as the EF does not own the copyright and obtaining the approval of all contributors would be impractical. In summary, compliance with this CRA requirement would represent a significant blow to open source development best practices. &lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;&lt;strong&gt;Article 5(1) and Section 1 of Annex I&lt;/strong&gt;&lt;/h3&gt;



&lt;p&gt;&lt;em&gt;(1) Products with digital elements shall be designed, developed and produced in such a way that they ensure an appropriate level of cybersecurity based on the risks&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;At a minimum this would require the development and enforcement of written policies requiring every project to assess their level of cybersecurity risk and to implement processes to ensure that there is a determination of the risk level and a justification for the development processes adopted.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;(2) Products with digital elements shall be delivered without any known exploitable vulnerabilities&lt;/em&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;em&gt;(3) On the basis of the risk assessment referred to in Article 10(2) and where applicable, products with digital elements shall: &lt;/em&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;em&gt;(a) …(j)&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;These would require a material change to our community’s release processes to require attestations that there are no known vulnerabilities and to comply with the many requirements listed. &lt;/p&gt;



&lt;p&gt;&lt;em&gt;(k) ensure that vulnerabilities can be addressed through security updates, including, where applicable, through automatic updates and the notification of available updates to users.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;With a few exceptions, EF projects do not “call home”, require any sort of user registration, and do not provide a mechanism for notifying all users that an update is either available or required. Implementing these requirements would require a whole new infrastructure to be mandated across all projects. &lt;/p&gt;



&lt;h3 class=&quot;wp-block-heading&quot;&gt;&lt;strong&gt;Article 5(2) and Section 2 of Annex I “Vulnerability Handling Requirements”&lt;/strong&gt;&lt;/h3&gt;



&lt;p&gt;In general, the Eclipse Foundation is in decent shape to deal with many of the stated requirements. As noted above we have a security team, written security policies and procedures, and are a CVE numbering authority. However, there are two notable elements in the requirements. &lt;/p&gt;



&lt;p&gt;&lt;em&gt;(1) identify and document vulnerabilities and components contained in the product, including by drawing up a software bill of materials in a commonly used and machine-readable format covering at the very least the top-level dependencies of the product&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;This would impose a legal requirement to produce SBOMs for all EF projects. Although it is something we aspire to, this is a very significant effort. It would also require actively monitoring all project dependencies for known vulnerabilities in dependencies. This is generally considered an unsolved problem within the open source ecosystem with no known path to implementation.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;(3) apply effective and regular tests and reviews of the security of the product with&lt;/em&gt; &lt;em&gt;digital elements;&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;These would require a material change to our community’s development processes to mandate a whole class of testing which is not currently mandated for our projects. This is a very significant effort both to implement and to maintain.&lt;/p&gt;</description>
	<pubDate>Mon, 16 Jan 2023 02:22:32 +0000</pubDate>
</item>
<item>
	<title>Kai Toedter: Sticky Transparent OceanWP Header</title>
	<guid isPermaLink="false">https://toedter.com/?p=2178</guid>
	<link>https://toedter.com/2023/01/14/sticky-transparent-oceanwp-header/</link>
	<description>&lt;p&gt;Recently I updated my web site to a new, fresh look. I chose the great &lt;a href=&quot;https://oceanwp.org/&quot;&gt;OceanWP&lt;/a&gt; theme (free version). While the build-in functionality is already awesome, I wanted my header to be sticky and transparent.&lt;/p&gt;
&lt;p&gt;I searched for a solution and was inspired by this &lt;a href=&quot;https://www.englishqu.com/zone/create-sticky-header-for-oceanwp-free-theme/&quot;&gt;article&lt;/a&gt;, but got better results when using &lt;em&gt;position: sticky&lt;/em&gt; instead of &lt;em&gt;position: fixed&lt;/em&gt;. Furthermore, I wanted the top-header to always scroll and only the main header to be sticky.&lt;/p&gt;
&lt;p&gt;For the transparency, I used a (non-transparent) minimal header in the UI and overrode it in the CSS. I just decided to start with black and make the background as transparent that it fits my desired gray color at the beginning.&lt;/p&gt;
&lt;p&gt;To implement this I just added a few lines of CSS in the template customizer (Custom CSS/JS):&lt;/p&gt;
&lt;pre class=&quot;brush: css; title: ; notranslate&quot;&gt;@media only screen and (min-width: 768px) {
  #site-header {
    position: sticky;
    top: 0;
    background-color: #000000e1 !important;
    transition: height .3s
  }
}
&lt;/pre&gt;
&lt;p&gt;Then I wanted to add shrinking of the header height and the logo. For that I added a bit JavaScript (could be optimized…):&lt;/p&gt;
&lt;pre class=&quot;brush: jscript; title: ; notranslate&quot;&gt;window.addEventListener('scroll', function (e) {
  if (window.innerWidth &amp;gt; 768) {
    if (window.scrollY &amp;gt;= 30 &amp;amp;&amp;amp; document.getElementById('site-header').style.height !== '40px') {
      document.getElementById('site-header').style.height = '40px'
      var list = document.querySelectorAll('#site-navigation-wrap .dropdown-menu &amp;gt;li &amp;gt;a');
      for (i = 0; i &amp;lt; list.length; ++i) {
        list[i].style.setProperty('line-height', '40px', 'important');
      }
      var el = document.querySelector('#site-logo #site-logo-inner a img')
      el.style.setProperty('max-width', '100px', 'important');
      el = document.querySelector('#site-logo #site-logo-inner')
      el.style.setProperty('height', '40px', 'important');
    } else if (window.scrollY &amp;lt; 30 &amp;amp;&amp;amp; document.getElementById('site-header').style.height !== '60px') {
      document.getElementById('site-header').style.height = '60px'
      var list = document.querySelectorAll('#site-navigation-wrap .dropdown-menu &amp;gt;li &amp;gt;a');
      for (i = 0; i &amp;lt; list.length; ++i) {
        list[i].style.setProperty('line-height', '60px', 'important');
      }
      var el = document.querySelector('#site-logo #site-logo-inner a img')
      el.style.setProperty('max-width', '130px', 'important');
      el = document.querySelector('#site-logo #site-logo-inner')
      el.style.setProperty('height', '60px', 'important');
    }
  }
});
&lt;/pre&gt;
&lt;p&gt;You can see the result when scrolling this blog post. But my approach is considered to be a quick and dirty solution that may have unexpected side effects. If you want even more features and a more professional implementation, you could take a look at the commercial &lt;a href=&quot;https://oceanwp.org/extension/ocean-sticky-header/&quot;&gt;“Sticky Header&lt;/a&gt;” plugin-in from OceanWP.&lt;/p&gt;</description>
	<pubDate>Sat, 14 Jan 2023 09:27:54 +0000</pubDate>
</item>
<item>
	<title>Jonas, Maximilian and Philip: Eclipse Theia 1.33 Release: News and Noteworthy</title>
	<guid isPermaLink="true">https://eclipsesource.com/blogs/2023/01/13/eclipse-theia-1-33-release-news-and-noteworthy/</guid>
	<link>https://eclipsesource.com/blogs/2023/01/13/eclipse-theia-1-33-release-news-and-noteworthy/</link>
	<description>&lt;p&gt;We are happy to announce the Eclipse Theia 1.33 release! The release contains 27 merged pull requests and we welcome eight four new contributors. In this article we will highlight some selected...&lt;/p&gt;
                &lt;p&gt;The post
                    &lt;a href=&quot;https://eclipsesource.com/blogs/2023/01/13/eclipse-theia-1-33-release-news-and-noteworthy/&quot; rel=&quot;nofollow&quot;&gt; Eclipse Theia 1.33 Release: News and Noteworthy&lt;/a&gt;
                    appeared first on
                    &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt; EclipseSource&lt;/a&gt;.
                &lt;/p&gt;</description>
	<pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: Docker on macOS M1</title>
	<guid isPermaLink="false">https://www.lorenzobettini.it/?p=2112</guid>
	<link>https://www.lorenzobettini.it/2023/01/docker-on-macos-m1/</link>
	<description>Although I’m a Linux user, I also recently bought a Mac Air M1, and I wanted to use Docker (a big part of my TDD book) to ensure that my projects based on Docker work on m1 as well. I then went to the Docker website for macOSÂ and downloaded the version for the Apple m1 […]</description>
	<pubDate>Thu, 12 Jan 2023 08:15:41 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: Building Graphical Modeling Tools, Approaches to Reducing Complexity</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/Solutions-to-build-graphical-modeler</guid>
	<link>https://cedric.brun.io/eclipse/Solutions-to-build-graphical-modeler/</link>
	<description>&lt;p&gt;Building graphical modeling tools can be a complex undertaking, especially if they need to support many features and functions. At Obeo, we have extensive experience in this area and strive to make the process as easy and accessible as possible. To accomplish this, we rely on several strategies, including modular design, higher-level abstractions, and the ability to iterate quickly on a tool definition. In the last few years we have kept these principles while transitionning the technologies to the Web.&lt;/p&gt;

&lt;h2 id=&quot;the-fellowship-of-the-modules&quot;&gt;The Fellowship of the Modules&lt;/h2&gt;

&lt;p&gt;Just like how the quest to destroy the One Ring in the Lord of the Rings was made easier by breaking it down into smaller tasks and delegating them to various members of the fellowship, we at Eclipse modeling technologies use a modular design to manage complexity in our software. Each project is responsible for a specific task, delivering components that can be reused and integrated into a tool for the end user.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/modeling/emf/&quot;&gt;EMF&lt;/a&gt; handles model data and its API,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/sirius&quot;&gt;Sirius&lt;/a&gt; focuses on editors and tooling,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/emf/compare/&quot;&gt;EMF Compare&lt;/a&gt; enables the comparison, merging, and conflict resolution of different versions of models,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/acceleo/&quot;&gt;Acceleo&lt;/a&gt; allows for code or text generation from models,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.m2doc.org/&quot;&gt;M2Doc&lt;/a&gt; produces reports and documents using models and diagrams as inputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This modular design has several benefits. It makes the software easier to understand and work on, as you can focus on one module at a time rather than trying to comprehend the entire system all at once. Modular design also facilitates code and functionality reuse. If you build a module that does something useful, you can use it in other projects. The Sirius project is a good example of this, as it provides a complete set of features that are reused and exposed through hundreds of graphical modelers. You can see some examples in the &lt;a href=&quot;https://www.eclipse.org/sirius/gallery.html&quot;&gt;Sirius Gallery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While modular design is useful, it is not a perfect solution and does have some challenges. One challenge is ensuring that the modules work well together and do not have conflicts or dependencies. This can be especially difficult when the modules are evolving independently within their own projects. To address this issue, we coordinate with other projects within the Eclipse Release Train and build an integrated suite called the “Obeo Designer Community,” which is a ready-to-use packaging.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.obeodesigner.com/en/download&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/2023/od.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Obeo Designer download&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;inception-the-higher-level-abstraction-edition&quot;&gt;Inception: The Higher-Level Abstraction Edition&lt;/h2&gt;

&lt;p&gt;Just like Cobb and his team in Inception, we use higher-level abstractions to hide the underlying complexity of building a graphical modeling software and make the process more manageable for our users.&lt;/p&gt;

&lt;p&gt;Higher-level abstractions can take many forms, such as libraries, frameworks, or domain-specific languages (DSLs). At Obeo, we use DSLs as our choice for higher-level abstractions. An example of this is Sirius.&lt;/p&gt;

&lt;p&gt;When you define a tool using Sirius, you specify the graphical modeler you want to achieve in terms of graphical shapes and how these shapes are mapped to the domain model. You can also specify a set of editors, actions, and wizards that can be launched by the end user, without having to deal with the details of coding these features on the underlying platform. Sirius handles these details behind the scenes.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;https://cedric.brun.io/images/blog/2016-2017/1capture.png&quot; /&gt;
    &lt;figcaption&gt;Part of a tool definition and the corresponding result for the &quot;Family&quot; DSL.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;However, higher-level abstractions also have their challenges. One challenge is that they can add an extra layer of complexity to the software. Developers must understand how the abstraction works and how to use it correctly. To help with this, we offer support and expertise, training, and tutorials for getting started with Sirius. We also hold the SiriusCon conference each year since 2015 to help our community discover what they can do with Sirius.&lt;/p&gt;

&lt;p&gt;Another challenge is that higher-level abstractions can be limiting. They may not provide all the features and flexibility that developers need, or they may make it difficult to do things in a different way. To address this, we allow for tool behavior to be extended with Java code when necessary. This is useful when the tool needs to interface with another tool directly, rather than through file exchanges, or when specific computations or user interfaces are required.&lt;/p&gt;

&lt;p&gt;The Eclipse Modeling platform is generally extensible, and EMF, Compare, Acceleo, Sirius, and other projects provide dedicated extension points to allow their behavior to be customized using Java code and APIs. In addition, Sirius and Acceleo allow for branching out to simple Java code directly, without the need to fully understand the Eclipse platform.&lt;/p&gt;

&lt;h1 id=&quot;the-fast-and-the-furious-of-graphical-modeling-tools-hot-reloading&quot;&gt;The Fast and the Furious of Graphical Modeling Tools: Hot Reloading&lt;/h1&gt;

&lt;p&gt;Like the crew in the Fast and Furious franchise, we aim to reduce the complexity of building graphical modeling software by enabling fast iteration and turnaround.&lt;/p&gt;

&lt;p&gt;Fast iteration means being able to make changes to the software quickly and easily, and see the results of those changes right away.
In the case of Sirius two factors are enabling this, first by providing a higher level abstraction to define modeling tool one can express quicker and with more precision what the tool should look like and do. The second factor, and this one stands out quite a bit compare to the other frameworks you can use to build a graphical tool, is that Sirius will hot-reload your tool definition, you are able to instantly see the tool in action, adapt it’s definition, see the result, and iterate.
It’s life changing, as then the cost of trying another way to represent the domain and interact with it is only minutes, and going back to the previous version of the tool is one CTRL-Z away.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;https://cedric.brun.io/talks/ModelingAvengers/pics/dynamic-shapes-vsm.png&quot; /&gt;
    &lt;figcaption&gt;Part of a tool definition and the corresponding result for a DSL related to farming.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;With Sirius Web we even go one step further in reducing this feedback loop: you adapt the tool, it’s instantly usable by all the engineers accessing it directly from their web browser.&lt;/p&gt;

&lt;video controls=&quot;&quot; height=&quot;360&quot; width=&quot;640&quot;&gt;&lt;source src=&quot;https://cedric.brun.io/media/SiriusWeb and JupyterNotebook.mp4&quot; /&gt;Your browser does not support the video tag.&lt;/video&gt;

&lt;hr /&gt;
&lt;p&gt;To summarize, building a graphical modeling tool can be complex, but there are several ways to approach this complexity. Modular design allows for easier understanding and reuse of code, while higher-level abstractions can hide underlying complexity from the user. Fast iteration and turnaround is also important for efficient development. Obeo has been working on technologies to make building graphical modeling tools more accessible for many years now, and we are excited by the prospects of what is to come on this path : while Sirius on the desktop has proven this is an efficient way to tackle this complexity, &lt;a href=&quot;https://www.eclipse.org/sirius/sirius-web.html&quot;&gt;Sirius on the Web&lt;/a&gt; goes even one step further in making such tools accessible to anyone.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/Solutions-to-build-graphical-modeler/&quot;&gt;Building Graphical Modeling Tools, Approaches to Reducing Complexity&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on January 12, 2023.&lt;/p&gt;</description>
	<pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>John Kellerman: Eclipse Cloud DevTools Digest - November and December, 2022</title>
	<guid isPermaLink="false">7283 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/john-kellerman/eclipse-cloud-devtools-digest-november-and-december-2022</link>
	<description>&lt;span&gt;Eclipse Cloud DevTools Digest - November and December, 2022&lt;/span&gt;

            &lt;div class=&quot;field field--name-body field--type-text-with-summary field--label-hidden field--item&quot;&gt;&lt;p&gt;Things slow down a bit around the winter holidays so I decided to combine a November and December summary.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Contributor Award: Marc Nuri for JKube leadership&lt;/h3&gt;

&lt;p&gt;But not Marc! The Eclipse Cloud DevTools contributor award for last month went to Marc Nuri at Red Hat for his continuing leadership of JKube, and more specifically for the new JKube Remote Development feature. Congratulations Marc and thank you for your contributions!&lt;/p&gt;

&lt;h3&gt;Theia 2022 Summary&lt;/h3&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximllian, and Philip&lt;/a&gt; provide an excellent &lt;a href=&quot;https://eclipsesource.com/blogs/2022/12/20/the-eclipse-theia-update-2022/&quot;&gt;summary&lt;/a&gt; and &lt;a href=&quot;https://youtu.be/MUIZT2wOkmw&quot;&gt;video&lt;/a&gt; of activity and accomplishments in the Theia project for 2022, including the first community release, support for detachable views and support for a configurable toolbar. &lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;Eclipse Theia 1.31.1 and 1.32 Releases: News and Noteworthy&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/1.32_1-image31.gif&quot; style=&quot;width: 600px; height: 249px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Theia releases 1.31.1 and 1.32 were released in November and December, including drag/drop copying of files, support for detachable terminals and Monaco editor update. For more detail, see the &lt;a href=&quot;https://eclipsesource.com/blogs/2022/11/14/eclipse-theia-1-31-1-release-news-and-noteworthy/&quot;&gt;1.31.1&lt;/a&gt; and &lt;a href=&quot;https://eclipsesource.com/blogs/2022/12/07/eclipse-theia-1-32-release-news-and-noteworthy/&quot;&gt;1.32&lt;/a&gt; New and Noteworthy blogs.&lt;/p&gt;

&lt;h3&gt;Interesting Work Underway: Support for Multiple Openvsx Deployments in Theia&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse-theia/theia/commits?author=paul-marechal&quot;&gt;Paul Maréchel&lt;/a&gt; of Ericsson has work underway to enable &lt;a href=&quot;https://github.com/eclipse-theia/theia/pull/12040&quot;&gt;Theia support for multiple Openvsx deployments&lt;/a&gt;. There is related work by Aart van Baren last year to add the ability for &lt;a href=&quot;https://github.com/eclipse/openvsx/pull/586&quot;&gt;one Openvsx deployment to mirror another&lt;/a&gt;. These enhancements enable use cases where an organization needs to curate a set of approved extensions for internal use and/or, for security requirements, deploy an 'air-gapped' instance of Openvsx.&lt;/p&gt;

&lt;h3&gt;TheiaCon&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://events.eclipse.org/2022/theiacon/&quot;&gt;TheiaCon&lt;/a&gt; (November 30 - December 1, 2022) was a hugh success. &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaRj46WedNTnAXLLHwuk3nro&quot;&gt;Videos&lt;/a&gt; are now available on the &lt;a href=&quot;https://www.youtube.com/@EclipseFdn&quot;&gt;Eclipse Foundation Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;CDT Cloud Blueprint&lt;/h3&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In a separate &lt;a href=&quot;https://eclipsesource.com/blogs/2022/12/13/introducing-cdt-cloud-blueprint/&quot;&gt;blog&lt;/a&gt;, &lt;a href=&quot;https://eclipsesource.com/blogs/author/helming_koegel/&quot;&gt;Jonas, Maximllian, and Philip&lt;/a&gt; introduce us to &lt;a href=&quot;https://github.com/eclipse-cdt-cloud/cdt-cloud-blueprint&quot;&gt;CDT cloud Blueprint&lt;/a&gt;. CDT cloud Blueprint is a web-based IDE that enables you to build custom and/or domain/specific IDEs for C and C++.&lt;/p&gt;

&lt;h3&gt;JKube 1.10 is Available&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;center-block&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user750/app-diagram-on.jpeg&quot; style=&quot;width: 500px; height: 282px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.marcnuri.com/&quot;&gt;Marc Nuri&lt;/a&gt;, in his &lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-10&quot;&gt;blog&lt;/a&gt;, details the recent 1.10 release of JKube, including an exciting preview of remote development support.&lt;/p&gt;

&lt;h3&gt;Cloud Developer Annual Survey&lt;/h3&gt;

&lt;p&gt;The Eclipse Cloud DevTools Working Group is inviting everyone in the cloud development ecosystem to add their voice to our annual global &lt;a href=&quot;https://blogs.eclipse.org/post/clark-roundy/three-good-reasons-complete-2022-cloud-developer-survey&quot;&gt;Cloud Developer Survey&lt;/a&gt;. The more people who complete the survey, the more accurate the picture we can present back to the industry. The last day for completing the survey is Friday, January 12.&lt;/p&gt;

&lt;h3&gt;Eclipse Cloud DevTools Projects&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;center-block&quot; src=&quot;https://lh4.googleusercontent.com/NF_blJTT1qIp49qCS68YUefG-Q6tjbtdanHV3cngR609-XKN63n6yIYFdcIhrPseyCPqoff4Qyu2Gakb3KQ1UwP9nxwbr4k0HS9DOOnntAAvABwDDU_wKNTr6PTriImESgtrB8J3&quot; style=&quot;height: 117px; width: 371px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Explore the &lt;a href=&quot;https://ecdtools.eclipse.org/projects/&quot;&gt;Eclipse Cloud DevTools ecosystem&lt;/a&gt;! Check out our projects page to find out more about open source innovation for cloud IDEs, extension marketplaces, frameworks and more.&lt;/p&gt;

&lt;h3&gt;Getting Listed on the Cloud DevTools Blog&lt;/h3&gt;

&lt;p&gt;If you are working with, or on, anything in the Cloud DevTools space, &lt;a href=&quot;https://blogs.eclipse.org/post/brian-king/getting-listed-cloud-devtools-blog&quot;&gt;learn how to get your writings posted&lt;/a&gt; in our &lt;a href=&quot;https://ecdtools.eclipse.org/resources/blogs/&quot;&gt;blog section&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
      
&lt;span&gt;&lt;span&gt;John Kellerman&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;Wed, 2023-01-04 12:51&lt;/span&gt;

  &lt;div class=&quot;field field--name-field-blog-tags field--type-entity-reference field--label-above&quot;&gt;
    &lt;div class=&quot;field--label&quot;&gt;Tags&lt;/div&gt;
          &lt;div class=&quot;field--items&quot;&gt;
              &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ecdtools&quot; hreflang=&quot;en&quot;&gt;ECDTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/clouddevtools-0&quot; hreflang=&quot;en&quot;&gt;CloudDevTools&lt;/a&gt;&lt;/div&gt;
          &lt;div class=&quot;field--item&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/opensource-0&quot; hreflang=&quot;en&quot;&gt;OpenSource&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
      &lt;/div&gt;</description>
	<pubDate>Wed, 04 Jan 2023 17:51:19 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.26.0.Final for Eclipse 2022-12</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.26.0.final.html</guid>
	<link>https://tools.jboss.org/blog/4.26.0.final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.26.0.Final build for Eclipse 2022-12.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2022-12/4.26.0.Final.html&quot;&gt;JBoss Tools 4.26.0 Final&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.26.0.Final.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;components-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#components-removal&quot;&gt;&lt;/a&gt;Components removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As planned and communicated in a previous blog article, the following components have been
      removed from the JBoss Tools distribution:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Forge&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Livereload&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Angular&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;JSDT&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that the following components are obsoleted so they are still part of this JBoss
      Tools distribution but they will be removed from the next JBoss Tools release:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;WebServices&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;JSF&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Seam&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Batch&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Visual Page Editor&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Central installation&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-application-explorer-view-based-on-odo-3-x&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-application-explorer-view-based-on-odo-3-x&quot;&gt;&lt;/a&gt;OpenShift Application Explorer view based on odo 3.x&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The OpenShift Application Explorer view based based on odo 2.x in previous versions of
      JBoss Tools. It already leverages the power of devfiles to describe your development
      environment, odo 3.x enhances and simplifies the workflow.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With odo 3.x, you can create a component (unit of deployment) from your source files and once
      the component is created, you can start it in dev mode: a new deployment will be created on the
      cluster, application will be built on the cluster and then, each time you modify some of the source
      files on your local workstation, the change will be broadcasted to the remote cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to test your application, you can open a browser of the OpenShift Application Explorer and
      browse your application running on the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once your component is running in dev mode, you can start a local debugger (Java, Node.js, Python) that
      will connect to the deployment on the cluster and let’s you troubleshoot and analyze more complex use cases.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This addresses the inner loop style of development where you can get instant feedback on your changes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;odo 3.x also supports outloop style of development: once you think your application in ready to be deployed
      on an staging, integration or production cluster, you can start your component in deploy mode: a new image
      defined by yourself will then be built and deployed on the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the following example, we will start from a Quarkus application generated from &lt;a class=&quot;bare&quot; href=&quot;https://code.quarkus.io&quot;&gt;https://code.quarkus.io&lt;/a&gt;,
      create the component, start the dev mode, check that we can access the application, start the debugger and
      check that we can reach a breakpoint.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;odo3 workflow&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/odo3-workflow.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 6.1 runtime provider now incorporates Hibernate Core version 6.1.5.Final, Hibernate Ant version 6.1.5.Final and Hibernate Tools version 6.1.5.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.14.Final and Hibernate Tools version 5.6.14.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.27.Final and Hibernate Tools version 5.3.27.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.26.0.AM1.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stéphane Bouchet&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 20 Dec 2022 14:10:47 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Happy Holidays from the Eclipse Foundation</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1701</guid>
	<link>https://eclipse-foundation.blog/2022/12/20/happy-holidays-from-the-eclipse-foundation/</link>
	<description>&lt;p&gt;As 2022 draws to a close, I would like to express my sincere gratitude to our contributors, committers, members, and the Eclipse Foundation team for your commitment, passion, professionalism, persistence, and tremendous contributions to our community’s success. &lt;/p&gt;



&lt;p&gt;This year included a number of accomplishments and milestones in the Eclipse community. We welcomed over 20 new projects, 55 new member companies, and a new working group with &lt;a href=&quot;https://sdv.eclipse.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Software Defined Vehicle&lt;/a&gt;. Also, this year, the Board of Directors approved the creation of Interest Groups, the next step in furthering the Eclipse Foundation’s governance framework to enable “innovation through collaboration” by empowering members to work together using a lighter-weight governance structure than our more formal working groups. Find out&lt;a href=&quot;https://www.eclipse.org/collaborations/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; how to start a collaboration&lt;/a&gt; and share the opportunity with your colleagues and network.&lt;/p&gt;



&lt;p&gt;After 3 years of virtual interactions, we held our first in-person&lt;a href=&quot;https://www.eclipsecon.org/2022&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt; EclipseCon&lt;/a&gt; in Ludwigsburg. This chance to connect with friends and colleagues, new and old, was not taken for granted with over 415 participants. We could not make it happen without our speakers, sponsors and participants! Mark your calendars for the next EclipseCon – October 16-20, 2023.&lt;/p&gt;



&lt;p&gt;Moments like that remind us of the importance of coming together, and we hope that the new year will give us many more opportunities for our global community to collaborate.&lt;/p&gt;



&lt;p&gt;All the best for 2023!&lt;/p&gt;</description>
	<pubDate>Tue, 20 Dec 2022 12:30:00 +0000</pubDate>
</item>

</channel>
</rss>
